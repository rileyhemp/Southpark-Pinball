{"version":3,"sources":["flipper.js"],"names":["Flipper","scene","x","y","options","blockOffsetX","blockOffsetY","flipperOffsetX","flipperOffsetY","flipperLength","flipperWidth","speed","startPosition","endPosition","isFlipping","block","matter","add","image","isStatic","scaleX","scaleY","originX","originY","visible","pivot","setScale","setCircle","setStatic","rectA","Phaser","Physics","Matter","Bodies","rectangle","chamfer","flipperBody","body","create","parts","orientation","flipper","setExistingBody","setDepth","displayOriginY","pin","constraint","stiffness","length","pistonPin","positionPin","setCollisionCategory","collisionGroupA","setCollidesWith","sound","playAudioSprite","tweens","targets","duration","setTimeout","LeftFlipper","displayOriginX","label","pointA","pointB","RightFlipper","SideFlipper"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;IAAMA,O;;;AACF,mBAAYC,KAAZ,EAAmBC,CAAnB,EAAsBC,CAAtB,EAAyBC,OAAzB,EAAiC;AAAA;;AAC7B,SAAKH,KAAL,GAAaA,KAAb;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKE,YAAL,GAAoB,EAApB;AACA,SAAKC,YAAL,GAAoB,EAApB;AACA,SAAKC,cAAL,GAAsB,EAAtB;AACA,SAAKC,cAAL,GAAsB,EAAtB;AACA,SAAKC,aAAL,GAAqB,EAArB;AACA,SAAKC,YAAL,GAAoB,EAApB;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,aAAL,GAAqB,EAArB;AACA,SAAKC,WAAL,GAAmB,GAAnB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AAEH;;;;uCAEiB;AAEd;AACA,WAAKC,KAAL,GAAa,KAAKd,KAAL,CAAWe,MAAX,CAAkBC,GAAlB,CAAsBC,KAAtB,CAA4B,KAAKhB,CAAL,GAAS,KAAKG,YAA1C,EAAuD,KAAKF,CAAL,GAAS,KAAKG,YAArE,EAAmF,OAAnF,EAA4F,KAAKL,KAAjG,EAAwG;AACjHkB,QAAAA,QAAQ,EAAE;AADuG,OAAxG,CAAb;AAGA,WAAKJ,KAAL,CAAWK,MAAX,GAAoB,GAApB;AACA,WAAKL,KAAL,CAAWM,MAAX,GAAoB,EAApB;AACA,WAAKN,KAAL,CAAWO,OAAX,GAAqB,CAArB;AACA,WAAKP,KAAL,CAAWQ,OAAX,GAAqB,CAArB;AACA,WAAKR,KAAL,CAAWS,OAAX,GAAqB,KAArB,CAVc,CAYd;;AACA,WAAKC,KAAL,GAAa,KAAKxB,KAAL,CAAWe,MAAX,CAAkBC,GAAlB,CAAsBC,KAAtB,CAA4B,KAAKhB,CAAjC,EAAoC,KAAKC,CAAzC,EAA4C,IAA5C,EAAkD,KAAKF,KAAvD,CAAb;AACA,WAAKwB,KAAL,CAAWC,QAAX,CAAoB,EAApB;AACA,WAAKD,KAAL,CAAWE,SAAX,CAAqB,CAArB;AACA,WAAKF,KAAL,CAAWG,SAAX,CAAqB,IAArB,EAhBc,CAkBd;;AAEA,UAAIC,KAAK,GAAGC,MAAM,CAACC,OAAP,CAAeC,MAAf,CAAsBA,MAAtB,CAA6BC,MAA7B,CAAoCC,SAApC,CAA8C,KAAKhC,CAAL,GAAS,KAAKK,cAA5D,EAA6E,KAAKJ,CAAL,GAAS,KAAKK,cAA3F,EAA2G,KAAKC,aAAhH,EAA+H,KAAKC,YAApI,EAAkJ;AAC1JyB,QAAAA,OAAO,EAAE;AADiJ,OAAlJ,CAAZ;AAIA,WAAKC,WAAL,GAAmB,KAAKnC,KAAL,CAAWe,MAAX,CAAkBqB,IAAlB,CAAuBC,MAAvB,CAA8B;AAC7CC,QAAAA,KAAK,EAAE,CAAEV,KAAF;AADsC,OAA9B,CAAnB;;AAGA,UAAI,KAAKW,WAAL,KAAqB,MAAzB,EAAiC;AAC7B,aAAKC,OAAL,GAAe,KAAKxC,KAAL,CAAWe,MAAX,CAAkBC,GAAlB,CAAsBC,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,EAAoC,SAApC,EAA+CwB,eAA/C,CAA+D,KAAKN,WAApE,CAAf;AACH,OAFD,MAEO,IAAI,KAAKI,WAAL,KAAqB,OAAzB,EAAkC;AACrC,aAAKC,OAAL,GAAe,KAAKxC,KAAL,CAAWe,MAAX,CAAkBC,GAAlB,CAAsBC,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,EAAoC,cAApC,EAAoDwB,eAApD,CAAoE,KAAKN,WAAzE,CAAf;AACH,OAFM,MAEA;AACH,aAAKK,OAAL,GAAe,KAAKxC,KAAL,CAAWe,MAAX,CAAkBC,GAAlB,CAAsBC,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,EAAoC,aAApC,EAAmDwB,eAAnD,CAAmE,KAAKN,WAAxE,CAAf;AACH;;AACD,WAAKK,OAAL,CAAaE,QAAb,CAAsB,CAAtB;AAEA,WAAKF,OAAL,CAAaG,cAAb,GAA8B,KAAKlC,YAAL,GAAoB,CAAlD,CApCc,CAuCd;;AAEA,WAAKmC,GAAL,GAAW,KAAK5C,KAAL,CAAWe,MAAX,CAAkBC,GAAlB,CAAsB6B,UAAtB,CAAiC,KAAKrB,KAAtC,EAA6C,KAAKgB,OAAlD,CAAX;AACA,WAAKI,GAAL,CAASE,SAAT,GAAqB,GAArB;AACA,WAAKF,GAAL,CAASG,MAAT,GAAkB,CAAlB;AAEA,WAAKC,SAAL,GAAiB,KAAKhD,KAAL,CAAWe,MAAX,CAAkBC,GAAlB,CAAsB6B,UAAtB,CAAiC,KAAKL,OAAtC,EAA+C,KAAK1B,KAApD,CAAjB;AACA,WAAKkC,SAAL,CAAeD,MAAf,GAAwB,KAAKpC,aAA7B;AAEA,WAAKsC,WAAL;AACH;;;yCAEmB;AAEhB,WAAKT,OAAL,CAAaU,oBAAb,CAAkCC,eAAlC;AACA,WAAKX,OAAL,CAAaY,eAAb,CAA6BD,eAA7B;AACH;;;2BAEK;AAEF,UAAI,KAAKZ,WAAL,KAAqB,MAAzB,EAAgC;AAC5B,aAAKvC,KAAL,CAAWqD,KAAX,CAAiBC,eAAjB,CAAiC,eAAjC,EAAkD,eAAlD;AACH,OAFD,MAEO,IAAI,KAAKf,WAAL,KAAqB,OAAzB,EAAiC;AACpC,aAAKvC,KAAL,CAAWqD,KAAX,CAAiBC,eAAjB,CAAiC,eAAjC,EAAkD,gBAAlD;AACH;;AACD,WAAKzC,UAAL,GAAkB,IAAlB;AACA,WAAKb,KAAL,CAAWuD,MAAX,CAAkBvC,GAAlB,CAAsB;AAClBwC,QAAAA,OAAO,EAAE,KAAKR,SADI;AAElBD,QAAAA,MAAM,EAAE,KAAKnC,WAFK;AAGlB6C,QAAAA,QAAQ,EAAE,KAAK/C;AAHG,OAAtB;AAKH;;;8BAEQ;AAAA;;AACLgD,MAAAA,UAAU,CAAC,YAAI;AACX,QAAA,KAAI,CAAC7C,UAAL,GAAkB,KAAlB;AACH,OAFS,EAEP,GAFO,CAAV;AAGA,WAAKb,KAAL,CAAWuD,MAAX,CAAkBvC,GAAlB,CAAsB;AAClBwC,QAAAA,OAAO,EAAE,KAAKR,SADI;AAElBD,QAAAA,MAAM,EAAE,KAAKpC,aAFK;AAGlB8C,QAAAA,QAAQ,EAAE,KAAK/C;AAHG,OAAtB;AAKH;;;;;;IAICiD,W;;;;;AACF,uBAAY3D,KAAZ,EAAmBC,CAAnB,EAAsBC,CAAtB,EAAwB;AAAA;;AAAA;;AACpB,sFAAMF,KAAN,EAAaC,CAAb,EAAgBC,CAAhB;AACA,WAAKqC,WAAL,GAAmB,MAAnB;;AACA;;AACA,WAAK3B,WAAL,GAAmB,GAAnB;;AACA;;AACA,WAAK4B,OAAL,CAAaoB,cAAb,GAA8B,EAA9B;AACA,WAAKpB,OAAL,CAAaJ,IAAb,CAAkBE,KAAlB,CAAwB,CAAxB,EAA2BuB,KAA3B,GAAmC,aAAnC;AAPoB;AAQvB;;;;kCACY;AACT,WAAKjB,GAAL,CAASkB,MAAT,GAAkB;AACd7D,QAAAA,CAAC,EAAE,CADW;AAEdC,QAAAA,CAAC,EAAE;AAFW,OAAlB;AAIA,WAAK0C,GAAL,CAASmB,MAAT,GAAkB;AACd9D,QAAAA,CAAC,EAAE,CAAC,KAAKO,aAAN,GAAoB,CADT;AAEdN,QAAAA,CAAC,EAAE,CAAC,KAAKO,YAAN,GAAmB,CAAnB,GAAuB;AAFZ,OAAlB;AAIA,WAAKuC,SAAL,CAAec,MAAf,GAAwB;AACpB7D,QAAAA,CAAC,EAAE,KAAKO,aAAL,GAAmB,GADF;AAEpBN,QAAAA,CAAC,EAAE;AAFiB,OAAxB;AAIH;;;;EAvBqBH,O;;IA0BpBiE,Y;;;;;AACF,wBAAYhE,KAAZ,EAAmBC,CAAnB,EAAsBC,CAAtB,EAAwB;AAAA;;AAAA;;AACpB,uFAAMF,KAAN,EAAaC,CAAb,EAAgBC,CAAhB;AACA,WAAKqC,WAAL,GAAmB,OAAnB;AACA,WAAKnC,YAAL,GAAoB,CAAC,OAAKA,YAA1B;AACA,WAAKE,cAAL,GAAsB,CAAC,OAAKA,cAA5B;;AACA;;AACA;;AACA,WAAKkC,OAAL,CAAaoB,cAAb,GAA8B,EAA9B;AACA,WAAKpB,OAAL,CAAaJ,IAAb,CAAkBE,KAAlB,CAAwB,CAAxB,EAA2BuB,KAA3B,GAAmC,cAAnC;AARoB;AASvB;;;;kCACY;AACT,WAAKjB,GAAL,CAASkB,MAAT,GAAkB;AACd7D,QAAAA,CAAC,EAAE,CAAC,CADU;AAEdC,QAAAA,CAAC,EAAE;AAFW,OAAlB;AAIA,WAAK0C,GAAL,CAASmB,MAAT,GAAkB;AACd9D,QAAAA,CAAC,EAAE,KAAKO,aAAL,GAAmB,CADR;AAEdN,QAAAA,CAAC,EAAE,CAAC,KAAKO,YAAN,GAAmB,CAAnB,GAAuB;AAFZ,OAAlB;AAIA,WAAKuC,SAAL,CAAec,MAAf,GAAwB;AACpB7D,QAAAA,CAAC,EAAE,CAAC,KAAKO,aAAN,GAAoB,GADH;AAEpBN,QAAAA,CAAC,EAAE;AAFiB,OAAxB;AAIH;;;;EAxBsBH,O;;IA2BrBkE,W;;;;;AACF,uBAAYjE,KAAZ,EAAmBC,CAAnB,EAAsBC,CAAtB,EAAwB;AAAA;;AAAA;;AACpB,sFAAMF,KAAN,EAAaC,CAAb,EAAgBC,CAAhB;AACA,WAAKqC,WAAL,GAAmB,MAAnB;AACA,WAAKnC,YAAL,GAAoB,EAApB;AACA,WAAKC,YAAL,GAAoB,EAApB;AACA,WAAKG,aAAL,GAAqB,EAArB;AACA,WAAKC,YAAL,GAAoB,EAApB;AACA,WAAKE,aAAL,GAAqB,EAArB;AACA,WAAKC,WAAL,GAAmB,EAAnB;AACA,WAAKF,KAAL,GAAa,EAAb;;AACA;;AACA;;AACA,WAAK8B,OAAL,CAAaoB,cAAb,GAA8B,EAA9B;AAZoB;AAavB;;;;kCACY;AACT,WAAKhB,GAAL,CAASkB,MAAT,GAAkB;AACd7D,QAAAA,CAAC,EAAE,CAAC,CADU;AAEdC,QAAAA,CAAC,EAAE;AAFW,OAAlB;AAIA,WAAK0C,GAAL,CAASmB,MAAT,GAAkB;AACd9D,QAAAA,CAAC,EAAE,KAAKO,aAAL,GAAmB,CAAnB,GAAqB,CADV;AAEdN,QAAAA,CAAC,EAAE;AAFW,OAAlB;AAIA,WAAK8C,SAAL,CAAec,MAAf,GAAwB;AACpB7D,QAAAA,CAAC,EAAE,CAAC,KAAKO,aAAN,GAAoB,GADH;AAEpBN,QAAAA,CAAC,EAAE;AAFiB,OAAxB;AAIH;;;;EA5BqBH,O","sourcesContent":["class Flipper {\n    constructor(scene, x, y, options){\n        this.scene = scene\n        this.x = x\n        this.y = y\n        this.blockOffsetX = 45\n        this.blockOffsetY = 80\n        this.flipperOffsetX = 25\n        this.flipperOffsetY = 20\n        this.flipperLength = 78\n        this.flipperWidth = 40\n        this.speed = 60\n        this.startPosition = 28\n        this.endPosition = 105\n        this.isFlipping = false\n        \n    }\n\n    createComponents(){\n        \n        //Bottom block\n        this.block = this.scene.matter.add.image(this.x + this.blockOffsetX,this.y + this.blockOffsetY, 'rectA', this.scene, {\n            isStatic: true\n        })\n        this.block.scaleX = .02\n        this.block.scaleY = .1\n        this.block.originX = 1\n        this.block.originY = 0\n        this.block.visible = false\n\n        //Pivot point\n        this.pivot = this.scene.matter.add.image(this.x, this.y, null, this.scene)\n        this.pivot.setScale(.2)\n        this.pivot.setCircle(1)\n        this.pivot.setStatic(true)\n\n        //Flipper \n\n        let rectA = Phaser.Physics.Matter.Matter.Bodies.rectangle(this.x + this.flipperOffsetX , this.y + this.flipperOffsetY, this.flipperLength, this.flipperWidth, {\n            chamfer: 10,\n        })\n\n        this.flipperBody = this.scene.matter.body.create({\n            parts: [ rectA ]\n        })\n        if (this.orientation === 'left') {\n            this.flipper = this.scene.matter.add.image(150, 0, 'flipper').setExistingBody(this.flipperBody)\n        } else if (this.orientation === 'right') {\n            this.flipper = this.scene.matter.add.image(150, 0, 'rightFlipper').setExistingBody(this.flipperBody)\n        } else {\n            this.flipper = this.scene.matter.add.image(150, 0, 'sideFlipper').setExistingBody(this.flipperBody)\n        }\n        this.flipper.setDepth(2)\n\n        this.flipper.displayOriginY = this.flipperWidth / 2\n\n\n        //Joints\n        \n        this.pin = this.scene.matter.add.constraint(this.pivot, this.flipper)\n        this.pin.stiffness = 0.9\n        this.pin.length = 0\n\n        this.pistonPin = this.scene.matter.add.constraint(this.flipper, this.block)\n        this.pistonPin.length = this.startPosition\n\n        this.positionPin()\n    }\n\n    setCollisionGroups(){\n\n        this.flipper.setCollisionCategory(collisionGroupA)\n        this.flipper.setCollidesWith(collisionGroupA)\n    }\n\n    flip(){\n        \n        if (this.orientation === 'left'){\n            this.scene.sound.playAudioSprite('sound_effects', \"FlipperUpLeft\")\n        } else if (this.orientation === 'right'){\n            this.scene.sound.playAudioSprite('sound_effects', \"FlipperUpRight\")            \n        }\n        this.isFlipping = true\n        this.scene.tweens.add({\n            targets: this.pistonPin,\n            length: this.endPosition,\n            duration: this.speed\n        })\n    }\n\n    release(){\n        setTimeout(()=>{\n            this.isFlipping = false\n        }, 100)\n        this.scene.tweens.add({\n            targets: this.pistonPin,\n            length: this.startPosition,\n            duration: this.speed\n        })\n    }\n\n}\n\nclass LeftFlipper extends Flipper {\n    constructor(scene, x, y){\n        super(scene, x, y)\n        this.orientation = 'left'\n        super.createComponents()\n        this.endPosition = 102\n        super.setCollisionGroups()\n        this.flipper.displayOriginX = 42\n        this.flipper.body.parts[1].label = 'leftFlipper'\n    }\n    positionPin(){\n        this.pin.pointA = {\n            x: 5,  \n            y: 5\n        }\n        this.pin.pointB = {\n            x: -this.flipperLength/2, \n            y: -this.flipperWidth/2 + 10\n        }\n        this.pistonPin.pointA = {\n            x: this.flipperLength/2.5, \n            y: 0\n        }\n    }\n}\n\nclass RightFlipper extends Flipper {\n    constructor(scene, x, y){\n        super(scene, x, y)\n        this.orientation = 'right'\n        this.blockOffsetX = -this.blockOffsetX\n        this.flipperOffsetX = -this.flipperOffsetX\n        super.createComponents()\n        super.setCollisionGroups()\n        this.flipper.displayOriginX = 30\n        this.flipper.body.parts[1].label = 'RightFlipper'\n    }\n    positionPin(){\n        this.pin.pointA = {\n            x: -5,  \n            y: 5\n        }\n        this.pin.pointB = {\n            x: this.flipperLength/2, \n            y: -this.flipperWidth/2 + 10\n        }\n        this.pistonPin.pointA = {\n            x: -this.flipperLength/2.5, \n            y: 0\n        }\n    }\n}\n\nclass SideFlipper extends Flipper {\n    constructor(scene, x, y){\n        super(scene, x, y)\n        this.orientation = 'side'\n        this.blockOffsetX = 25\n        this.blockOffsetY = 60\n        this.flipperLength = 70\n        this.flipperWidth = 35\n        this.startPosition = 50\n        this.endPosition = 90\n        this.speed = 40\n        super.createComponents()\n        super.setCollisionGroups()\n        this.flipper.displayOriginX = 20\n    }\n    positionPin(){\n        this.pin.pointA = {\n            x: -5,  \n            y: 5\n        }\n        this.pin.pointB = {\n            x: this.flipperLength/2-3, \n            y: 0\n        }\n        this.pistonPin.pointA = {\n            x: -this.flipperLength/2.5, \n            y: 0\n        }\n    }\n}\n\n\n\n\n"],"file":"flipper.js"}