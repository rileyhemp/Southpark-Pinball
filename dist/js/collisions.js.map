{"version":3,"sources":["collisions.js"],"names":["registerHit","scene","bodyA","bodyB","lights","butters","hit","flashLights","playRandomSound","active","sound","playAudioSprite","volume","render","visible","isDestroyed","destroy","balls","pop","rampsLit","alert","addScore","setTimeout","ball","Ball","setVelocityY","setVelocityX","clearLights","cartman","cartmanBody","velocity","x","initCollisionListeners","matter","world","on","event","label","type","level","isOnRamp","isOnPlastic","isInMotion","scorePrevious","currentScore","score","combo","isOnCenterRamp","isOnLauncher","position","leftSlingshot","fire","rightSlingshot","gameObject","sounds","Math","floor","random","length"],"mappings":"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","sourcesContent":["function registerHit(scene, bodyA, bodyB) {\r\n\r\n\tlights.butters.hit === 0 && bodyA !='cartman-hit' ? flashLights('butters', 1) : null\r\n\r\n    switch(bodyA)\r\n    {\r\n        case \"butters\" :\r\n\t\t\tplayRandomSound('butters_hit', scene)  \r\n\t\t\tlights.butters.active= true\r\n            scene.sound.playAudioSprite('sound_effects', 'thunder', {volume: 0.5})\r\n            scene.sound.playAudioSprite('sound_effects', 'hole_enter')\r\n            bodyB.render.visible = false\r\n            bodyB.isDestroyed = true\r\n\t\t\tbodyB.destroy()\r\n\t\t\tballs.pop()\r\n\t\t\tif (rampsLit < 5)\r\n\t\t\t{\r\n\t\t\t\talert('Jackpot x' + rampsLit , 2000)\r\n\t\t\t\taddScore('jackpot', rampsLit)\r\n\t\t\t} else \r\n\t\t\t{\r\n\t\t\t\talert('Super Jackpot - 500,000', 2000)\r\n\t\t\t\taddScore('super-jackpot')\r\n\t\t\t}\r\n            //Holds the ball for 3 seconds and shoots back to left flipper\r\n            setTimeout(()=>\r\n            {\r\n                ball = new Ball(scene, 340, 259, 'ball') \r\n                ball.setVelocityY(3.3)\r\n                ball.setVelocityX(-3.3)\r\n                scene.sound.playAudioSprite('sound_effects', 'ExitSandman')\r\n\t\t\t\taddScore('butters')\r\n\t\t\t\tclearLights()\r\n\t\t\t\trampsLit = 0\r\n            }, 3000)     \r\n            break     \r\n\r\n        case \"cartman-hit\" :\r\n            if (!lights[bodyB] && bodyB != 'cartman-himself')\r\n            {\r\n\t\t\t\tscene.sound.playAudioSprite('sound_effects', 'target')\r\n\t\t\t\tlights.cartman[bodyB].hit++\r\n            } \r\n            break          \r\n        \r\n        case \"cartman-himself\" :\r\n\t\t\tlights.cartmanBody.hit++\r\n            playRandomSound('cartman_damage', scene)\r\n\t\t\tscene.sound.playAudioSprite('sound_effects', 'rubber_hit_2')\r\n\t\t\taddScore('cartman-body')\r\n            break\r\n        \r\n        case \"loop-hit\" :\r\n\t\t\trampsLit++\r\n\t\t\taddScore('loop')\r\n\t\t\tif (bodyB.velocity.x > 0)\r\n\t\t\t{\r\n\t\t\t\tflashLights('leftLoop', 1)\r\n\t\t\t} else\r\n\t\t\t{\r\n\t\t\t\tflashLights('rightLoop', 1)\r\n\t\t\t}\r\n\t\t\tbreak\r\n\t\t\r\n\t\tcase \"leftRampHit\" :\r\n\t\t\trampsLit++\r\n\t\t\taddScore('ramp')\r\n\t\t\tflashLights('leftRamp', 1)\r\n\t\t\tbreak\r\n\t\tcase \"centerRampHit\" :\r\n\t\t\trampsLit++\r\n\t\t\taddScore('ramp')\r\n\t\t\tflashLights('centerRamp', 1)\r\n\t\t\tbreak\r\n\t\tcase \"rightRampHit\" :\r\n\t\t\trampsLit++\r\n\t\t\taddScore('ramp')\r\n\t\t\tflashLights('rightRamp', 1)\r\n\t\t\tbreak\r\n    }\r\n}\r\nfunction initCollisionListeners(scene) \r\n{\r\n\t//Collision start events\r\n    scene.matter.world.on('collisionstart', (event, bodyA, bodyB) => \r\n    {\r\n        if (bodyB.label === 'Ball') \r\n        {\r\n            if ( bodyA.label === 'butters' ) \r\n            {   \r\n                registerHit(scene, bodyA.label, bodyB)\r\n            }\r\n            if (bodyA.label === 'cartman-himself')\r\n            {\r\n\t\t\t\tregisterHit(scene, bodyA.type, bodyA.label)\r\n\t\t\t}       \r\n\t\t\tif (bodyA.type === 'loop-on') \r\n\t\t\t{\r\n\t\t\t\tbodyB.level = 'table'\r\n\t\t\t}\r\n\t\t\t//Ramps\r\n\t\t\tif (bodyA.type === 'ramp-on')\r\n\t\t\t{\r\n\t\t\t\tbodyB.isOnRamp = true\r\n\t\t\t\tbodyB.isOnPlastic = true\r\n\t\t\t}            \r\n\t\t\tif (bodyA.label === 'leftRampOn')\r\n\t\t\t{\r\n\t\t\t\tbodyB.isOnPlastic = true\r\n\t\t\t}    \r\n\t\t\t//COMBOS\r\n            if (bodyA.label === 'flipper')\r\n            {\r\n                //This function evaluates whether the ball is in an active combo. \r\n                //See ball.js for info on how it works\r\n                if ( bodyB.isInMotion )\r\n                {\r\n                    bodyB.isInMotion = false\r\n                    let scorePrevious = bodyB.currentScore\r\n                    bodyB.currentScore = score\r\n                    bodyB.currentScore > scorePrevious ? bodyB.combo++ : bodyB.combo = 0\r\n                }   \r\n            }\r\n        }\r\n\t})\r\n\r\n\t//Collision end events\r\n    scene.matter.world.on('collisionend', (event, bodyA, bodyB) => \r\n    {\r\n        if (bodyB.label === 'Ball') \r\n        {\r\n\t\t\t//Ramp hits\r\n            if (bodyA.label === 'leftRampHit' && !bodyB.isOnCenterRamp)\r\n            {\r\n\t\t\t\tregisterHit(scene, bodyA.label)\r\n            }\r\n            if (bodyA.label === 'centerRampHit')\r\n            {\r\n\t\t\t\tregisterHit(scene, bodyA.label)\r\n\t\t\t}\r\n            if (bodyA.label === 'rightRampHit')\r\n            {\r\n\t\t\t\tregisterHit(scene, bodyA.label)\r\n            }\r\n            if (bodyA.type === 'cartman-hit')\r\n            {\r\n                registerHit(scene, bodyA.type, bodyA.label)\r\n            }\r\n\t\t\t//Ramp on/off\r\n            if (bodyA.label === 'centerRampOn')\r\n            {\r\n                bodyB.isOnCenterRamp = true\r\n            }\r\n\r\n            if (bodyA.type === 'loop-hit')\r\n            {\r\n                registerHit(scene, bodyA.type, bodyB)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (bodyA.type === 'loop-on') \r\n\t\t\t{\r\n\t\t\t\tbodyB.level = 'table'\r\n\t\t\t}\r\n\r\n            //Generic ramp on\r\n            if (bodyA.type === 'ramp-on')\r\n            {\r\n                bodyB.isOnRamp = true\r\n                bodyB.isOnPlastic = true\r\n            } \r\n\r\n            //Generic ramp off\r\n            if (bodyA.type === 'ramp-off')\r\n            {\r\n                setTimeout(function(){\r\n                    bodyB.isOnRamp = false\r\n                    bodyB.isOnCenterRamp = false\r\n                }, 100)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//\"Roll back\" failsafe \r\n            if (bodyA.type === 'all-ramps-off')\r\n            {\r\n                bodyB.isOnRamp = false\r\n                bodyB.isOnCenterRamp = false\r\n                bodyB.isOnPlastic = false\r\n            }\r\n\r\n            //Launcher on / off\r\n            if (bodyA.type === 'launcher-on')\r\n            {\r\n                bodyB.isOnLauncher = true\r\n            }\r\n\r\n            if (bodyA.type === 'launcher-off')\r\n            {\r\n                bodyB.isOnLauncher = false\r\n            }\r\n        \r\n            //Slingshots\r\n            if (bodyA.label === 'leftSlingshot' && bodyB.position.x > 148)\r\n            {\r\n                leftSlingshot.fire()\r\n            }\r\n\r\n            if (bodyA.label === 'rightSlingshot' && bodyB.position.x < 335)\r\n            {\r\n                rightSlingshot.fire()\r\n            }\r\n\r\n            //Pop bumpers\r\n            if ( bodyA.label === \"bumper\") \r\n            {\r\n                bodyA.gameObject.fire(bodyB.position)\r\n                addScore('bumper')\r\n            }\r\n\r\n            //Rails \r\n            if (bodyA.type === 'rail')\r\n            {\r\n                scene.sound.playAudioSprite('sound_effects', 'WireRamp', {\r\n                    volume: 0.5\r\n                })\r\n                bodyB.isOnPlastic = false\r\n                addScore('ramp')\r\n            }\r\n\r\n            //Rubbers \r\n            if (bodyA.label === 'rubber')\r\n            {\r\n                let sounds = ['rubber_hit_1', 'rubber_hit_2', 'rubber_hit_3']\r\n                scene.sound.playAudioSprite('sound_effects', sounds[Math.floor(Math.random()*3)])\r\n            }\r\n\r\n            //Flippers \r\n            if (bodyA.label === 'flipper')\r\n            {\r\n                let sounds = ['flip_hit_1', 'flip_hit_2', 'flip_hit_3']\r\n                scene.sound.playAudioSprite('sound_effects', sounds[Math.floor(Math.random()*sounds.length)])\r\n            }\r\n        }\r\n    })\r\n}"],"file":"collisions.js"}