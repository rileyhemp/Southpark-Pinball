{"version":3,"sources":["collisions.js"],"names":["initCollisionListeners","scene","matter","world","on","event","bodyA","bodyB","label","registerHit","type","isOnRamp","isOnPlastic","isInMotion","scorePrevious","currentScore","score","combo","isOnCenterRamp","setTimeout","isOnLauncher","position","x","console","log","leftSlingshot","fire","rightSlingshot","gameObject","addScore","sound","playAudioSprite","volume","sounds","Math","floor","random","length"],"mappings":"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","sourcesContent":["function initCollisionListeners(scene) \r\n{\r\n    scene.matter.world.on('collisionstart', (event, bodyA, bodyB) => \r\n    {\r\n        if (bodyB.label === 'Ball') \r\n        {\r\n            //Butters target \r\n            if ( bodyA.label === 'butters' ) \r\n            {   \r\n                registerHit(scene, bodyA.label, bodyB)\r\n            }\r\n            //Generic ramp on\r\n            if (bodyA.type === 'ramp-on')\r\n            {\r\n                bodyB.isOnRamp = true\r\n                bodyB.isOnPlastic = true\r\n            }            \r\n            if (bodyA.label === 'leftRampOn')\r\n            {\r\n                bodyB.isOnPlastic = true\r\n            }    \r\n            if (bodyA.label === 'cartman-himself')\r\n            {\r\n                registerHit(scene, bodyA.type, bodyA.label)\r\n            }     \r\n            if (bodyA.label === 'rightTargets')\r\n            {\r\n                registerHit(scene, bodyA.label)\r\n            }     \r\n            if (bodyA.label === 'flipper')\r\n            {\r\n                //This function evaluates whether the ball is in an active combo. \r\n                //See ball.js for info on how it works\r\n                if ( bodyB.isInMotion )\r\n                {\r\n                    bodyB.isInMotion = false\r\n                    let scorePrevious = bodyB.currentScore\r\n                    bodyB.currentScore = score\r\n                    bodyB.currentScore > scorePrevious ? bodyB.combo++ : bodyB.combo = 0\r\n                }   \r\n            }\r\n        }\r\n    })\r\n    scene.matter.world.on('collisionend', (event, bodyA, bodyB) => \r\n    {\r\n        if (bodyB.label === 'Ball') \r\n        {\r\n            //Kenny ramp\r\n            if (bodyA.label === 'leftRampHit' && !bodyB.isOnCenterRamp)\r\n            {\r\n                //playRandomSound('kenny_hit', scene)\r\n            }\r\n            //Stan ramp\r\n            if (bodyA.label === 'centerRampHit')\r\n            {\r\n                //playRandomSound('stan_hit', scene)\r\n            }\r\n            //Kyle ramp\r\n            if (bodyA.label === 'rightRampHit')\r\n            {\r\n                // playRandomSound('kyle_hit', scene)\r\n            }\r\n            //Cartman targets \r\n            if (bodyA.type === 'cartman-hit')\r\n            {\r\n                registerHit(scene, bodyA.type, bodyA.label)\r\n            }\r\n\r\n            if (bodyA.label === 'centerRampOn')\r\n            {\r\n                bodyB.isOnCenterRamp = true\r\n            }\r\n\r\n            if (bodyA.type === 'loop-hit')\r\n            {\r\n                registerHit(scene, bodyA.type)\r\n            }\r\n\r\n            //Generic ramp on\r\n            if (bodyA.type === 'ramp-on')\r\n            {\r\n                bodyB.isOnRamp = true\r\n                bodyB.isOnPlastic = true\r\n            } \r\n\r\n            //Generic ramp off\r\n            if (bodyA.type === 'ramp-off')\r\n            {\r\n                setTimeout(function(){\r\n                    bodyB.isOnRamp = false\r\n                    bodyB.isOnCenterRamp = false\r\n                }, 100)\r\n            }\r\n\r\n            if (bodyA.type === 'all-ramps-off')\r\n            {\r\n                bodyB.isOnRamp = false\r\n                bodyB.isOnCenterRamp = false\r\n                bodyB.isOnPlastic = false\r\n            }\r\n\r\n            //Launcher on / off\r\n            if (bodyA.type === 'launcher-on')\r\n            {\r\n                bodyB.isOnLauncher = true\r\n            }\r\n\r\n            if (bodyA.type === 'launcher-off')\r\n            {\r\n                bodyB.isOnLauncher = false\r\n            }\r\n        \r\n            //Slingshots\r\n            if (bodyA.label === 'leftSlingshot' && bodyB.position.x > 148)\r\n            {\r\n\t\t\t\tconsole.log(bodyB)\r\n                leftSlingshot.fire()\r\n            }\r\n\r\n            if (bodyA.label === 'rightSlingshot' && bodyB.position.x < 335)\r\n            {\r\n                rightSlingshot.fire()\r\n            }\r\n\r\n            //Pop bumpers\r\n            if ( bodyA.label === \"bumper\") \r\n            {\r\n                bodyA.gameObject.fire(bodyB.position)\r\n                addScore('bumper')\r\n            }\r\n\r\n            //Rails \r\n            if (bodyA.type === 'rail')\r\n            {\r\n                scene.sound.playAudioSprite('sound_effects', 'WireRamp', {\r\n                    volume: 0.5\r\n                })\r\n                bodyB.isOnPlastic = false\r\n                addScore('ramp')\r\n            }\r\n\r\n            //Rubbers \r\n            if (bodyA.label === 'rubber')\r\n            {\r\n                let sounds = ['rubber_hit_1', 'rubber_hit_2', 'rubber_hit_3']\r\n                scene.sound.playAudioSprite('sound_effects', sounds[Math.floor(Math.random()*3)])\r\n            }\r\n\r\n            //Flippers \r\n            if (bodyA.label === 'flipper')\r\n            {\r\n                let sounds = ['flip_hit_1', 'flip_hit_2', 'flip_hit_3']\r\n                scene.sound.playAudioSprite('sound_effects', sounds[Math.floor(Math.random()*sounds.length)])\r\n            }\r\n        }\r\n    })\r\n}"],"file":"collisions.js"}