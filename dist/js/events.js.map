{"version":3,"sources":["events.js"],"names":["startEvent","name","scene","duration","startCartman","setTimeout","objectives","endCartman","eventMusic","sound","add","backgroundMusic","pause","play","tweens","targets","volume","from","to","playAudioSprite","playRandomSound","rampsCartmanActive","setDepth","ramps","cartmanRight","cartmanLeft","cartmanCenter","cartmanBlock","target","object","setCollidesWith","collisionGroupD","result","stop","addScore","collisionGroupA"],"mappings":";;AAAA,SAASA,UAAT,CAAoBC,IAApB,EAA0BC,KAA1B,EACA;AACI,UAAOD,IAAP;AAEI,SAAK,SAAL;AACI,UAAIE,QAAQ,GAAG,KAAf;AACAC,MAAAA,YAAY,CAACF,KAAD,CAAZ;AACAG,MAAAA,UAAU,CAAC,YACX;AACIC,QAAAA,UAAU,CAAC,iBAAD,CAAV,GAAgC,CAAhC,GAAoCC,UAAU,CAACL,KAAD,EAAQ,KAAR,CAA9C,GAA+DK,UAAU,CAACL,KAAD,EAAQ,MAAR,CAAzE;AACH,OAHS,EAGPC,QAHO,CAAV;AALR;AAUH;;AAED,SAASC,YAAT,CAAsBF,KAAtB,EACA;AAEIM,EAAAA,UAAU,GAAGN,KAAK,CAACO,KAAN,CAAYC,GAAZ,CAAgB,eAAhB,CAAb;AACAL,EAAAA,UAAU,CAAC,YACP;AACIM,IAAAA,eAAe,GAAGA,eAAe,CAACC,KAAhB,EAAH,GAA6B,IAA5C;AACAJ,IAAAA,UAAU,CAACK,IAAX;AACAX,IAAAA,KAAK,CAACY,MAAN,CAAaJ,GAAb,CAAiB;AACbK,MAAAA,OAAO,EAAEP,UADI;AAEbQ,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,EAAE,EAAE;AAAf,OAFK;AAGbf,MAAAA,QAAQ,EAAE;AAHG,KAAjB;AAKH,GATK,EASH,IATG,CAAV;AAUAD,EAAAA,KAAK,CAACO,KAAN,CAAYU,eAAZ,CAA4B,eAA5B,EAA6C,OAA7C;AACAC,EAAAA,eAAe,CAAC,eAAD,EAAkBlB,KAAlB,EAAyB,GAAzB,CAAf;AACAmB,EAAAA,kBAAkB,CAACC,QAAnB,CAA4B,CAA5B;AACAC,EAAAA,KAAK,CAACD,QAAN,CAAe,CAAf,EAhBJ,CAiBI;;AACAhB,EAAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,CAA7B;AACAA,EAAAA,UAAU,CAAC,gBAAD,CAAV,GAA+B,CAA/B;AACAA,EAAAA,UAAU,CAAC,eAAD,CAAV,GAA8B,CAA9B,CApBJ,CAqBI;;AACA,MAAIS,OAAO,GAAG,CAACS,YAAD,EAAeC,WAAf,EAA4BC,aAA5B,EAA2CC,YAA3C,CAAd;;AACA,OAAM,IAAIC,MAAV,IAAoBb,OAApB,EACA;AACIA,IAAAA,OAAO,CAACa,MAAD,CAAP,CAAgBC,MAAhB,CAAuBC,eAAvB,CAAuCC,eAAvC;AACH;AACJ;;AAED,SAASxB,UAAT,CAAoBL,KAApB,EAA2B8B,MAA3B,EACA;AACIxB,EAAAA,UAAU,CAACyB,IAAX;;AACA,MAAID,MAAM,KAAK,KAAf,EACA;AACIE,IAAAA,QAAQ,CAAC,aAAD,CAAR;AACAd,IAAAA,eAAe,CAAC,aAAD,EAAgBlB,KAAhB,EAAuB,GAAvB,CAAf;AACH,GAJD,MAKA;AACIkB,IAAAA,eAAe,CAAC,kBAAD,EAAqBlB,KAArB,EAA4B,GAA5B,CAAf;AACH;;AACDI,EAAAA,UAAU,CAAC,iBAAD,CAAV,GAAgC,CAAhC;AACAe,EAAAA,kBAAkB,CAACC,QAAnB,CAA4B,CAA5B;AACAC,EAAAA,KAAK,CAACD,QAAN,CAAe,CAAf;AACApB,EAAAA,KAAK,CAACO,KAAN,CAAYU,eAAZ,CAA4B,eAA5B,EAA6C,qBAA7C;AACA,MAAIJ,OAAO,GAAG,CAACS,YAAD,EAAeC,WAAf,EAA4BC,aAA5B,EAA2CC,YAA3C,CAAd;;AACA,OAAM,IAAIC,MAAV,IAAoBb,OAApB,EACA;AACIA,IAAAA,OAAO,CAACa,MAAD,CAAP,CAAgBC,MAAhB,CAAuBC,eAAvB,CAAuCK,eAAvC;AACH;AACJ","sourcesContent":["function startEvent(name, scene)\r\n{\r\n    switch(name) \r\n    {\r\n        case \"cartman\" :\r\n            let duration = 14500\r\n            startCartman(scene)\r\n            setTimeout(()=>\r\n            {\r\n                objectives['cartman-himself'] > 4 ? endCartman(scene, 'win') : endCartman(scene, 'loss')\r\n            }, duration)\r\n    }\r\n}\r\n\r\nfunction startCartman(scene)\r\n{\r\n    \r\n    eventMusic = scene.sound.add('cartman_music')\r\n    setTimeout(()=>\r\n        {\r\n            backgroundMusic ? backgroundMusic.pause() : null\r\n            eventMusic.play()\r\n            scene.tweens.add({\r\n                targets: eventMusic,\r\n                volume: { from: 0, to: 1 },\r\n                duration: 1000,\r\n            })\r\n        }, 2000)\r\n    scene.sound.playAudioSprite('sound_effects', 'Drain')\r\n    playRandomSound('cartman_start', scene, 500)\r\n    rampsCartmanActive.setDepth(2)\r\n    ramps.setDepth(0)\r\n    //Reset the counter\r\n    objectives['cartman-left'] = 0\r\n    objectives['cartman-center'] = 0\r\n    objectives['cartman-right'] = 0\r\n    //Open the cartman ramp\r\n    let targets = [cartmanRight, cartmanLeft, cartmanCenter, cartmanBlock]\r\n    for ( let target in targets )\r\n    {\r\n        targets[target].object.setCollidesWith(collisionGroupD)\r\n    }\r\n}\r\n\r\nfunction endCartman(scene, result)\r\n{\r\n    eventMusic.stop()\r\n    if (result === 'win' )\r\n    {\r\n        addScore('cartman-win')\r\n        playRandomSound('cartman_end', scene, 500)\r\n    } else \r\n    {\r\n        playRandomSound('generic_negative', scene, 500)\r\n    }\r\n    objectives['cartman-himself'] = 0\r\n    rampsCartmanActive.setDepth(0)\r\n    ramps.setDepth(2)\r\n    scene.sound.playAudioSprite('sound_effects', 'kicker_enter_center')\r\n    let targets = [cartmanRight, cartmanLeft, cartmanCenter, cartmanBlock]\r\n    for ( let target in targets )\r\n    {\r\n        targets[target].object.setCollidesWith(collisionGroupA)\r\n    }\r\n}"],"file":"events.js"}