{"version":3,"sources":["game.js"],"names":["config","type","Phaser","CANVAS","width","height","physics","default","matter","debug","gravity","x","y","scene","preload","create","update","spacebar","left","right","shift","ball","bounds","leftFlipper","rightFlipper","sideFlipper","testShape","bumperA","bumperB","bumperC","playfield","plastics","table","ramps","characters","collisionGroupA","collisionGroupB","collisionGroupC","collisionGroupD","collisionGroupE","sensorGroupA","sensorGroupB","leftRampDivert","leftRampDiverter","leftRampBottom","flipperCollisionGroup","test","tween","testFlipper","Bodies","Physics","Matter","game","Game","load","image","world","nextCategory","setBounds","input","keyboard","addKey","Input","Keyboard","KeyCodes","LEFT","SHIFT","RIGHT","SPACE","on","pointer","Ball","console","log","vertices","value","push","add","setDepth","LeftFlipper","RightFlipper","SideFlipper","Bumper","StaticCustomShape","setScale","setAngle","StaticShape","Sensor","event","bodyA","bodyB","label","isSensor","isOnRamp","setTimeout","slingshotA","fire","slingshotB","gameObject","position","hold","JustDown","launch","flip","isFlipping","JustUp","release"],"mappings":";;AACA;AAEA,IAAMA,MAAM,GAAG;AACXC,EAAAA,IAAI,EAAEC,MAAM,CAACC,MADF;AAEXC,EAAAA,KAAK,EAAE,GAFI;AAGXC,EAAAA,MAAM,EAAE,GAHG;AAIXC,EAAAA,OAAO,EAAE;AACLC,IAAAA,OAAO,EAAE,QADJ;AAELC,IAAAA,MAAM,EAAE;AACJC,MAAAA,KAAK,EAAE,KADH;AAEJC,MAAAA,OAAO,EAAE;AACLC,QAAAA,CAAC,EAAE,CADE;AAELC,QAAAA,CAAC,EAAE;AAFE;AAFL;AAFH,GAJE;AAcXC,EAAAA,KAAK,EAAE;AACHC,IAAAA,OAAO,EAAEA,OADN;AAEHC,IAAAA,MAAM,EAAEA,MAFL;AAGHC,IAAAA,MAAM,EAAEA;AAHL;AAdI,CAAf,C,CAqBA;;AAEA,IACIC,QADJ,EAEIC,IAFJ,EAGIC,KAHJ,EAIIC,KAJJ,EAKIC,IALJ,EAMIC,MANJ,EAOIC,WAPJ,EAQIC,YARJ,EASIC,WATJ,EAUIC,SAVJ,EAWIC,OAXJ,EAWaC,OAXb,EAWsBC,OAXtB,EAaI;AACAC,SAdJ,EAeIC,QAfJ,EAgBIC,KAhBJ,EAiBIC,KAjBJ,EAkBIC,UAlBJ,EAoBI;AACAC,eArBJ,EAqBqBC,eArBrB,EAqBsCC,eArBtC,EAqBuDC,eArBvD,EAqBwEC,eArBxE,EAsBIC,YAtBJ,EAsBkBC,YAtBlB,EAuBIC,cAvBJ,EAuBoB;AAChBC,gBAxBJ,EAyBIC,cAzBJ,EA0BIC,qBA1BJ,EA2BIC,IA3BJ,EA4BIC,KA5BJ,EA6BIC,WA7BJ;AA8BA,IAAMC,MAAM,GAAG/C,MAAM,CAACgD,OAAP,CAAeC,MAAf,CAAsBA,MAAtB,CAA6BF,MAA5C;AACA,IAAMG,IAAI,GAAG,IAAIlD,MAAM,CAACmD,IAAX,CAAgBrD,MAAhB,CAAb,C,CAEA;;AAEA,SAASc,OAAT,GAAmB;AAEf,OAAKwC,IAAL,CAAUC,KAAV,CAAgB,OAAhB,EAAyB,mCAAzB;AACA,OAAKD,IAAL,CAAUC,KAAV,CAAgB,WAAhB,EAA6B,2BAA7B;AACA,OAAKD,IAAL,CAAUC,KAAV,CAAgB,WAAhB,EAA6B,2BAA7B;AACA,OAAKD,IAAL,CAAUC,KAAV,CAAgB,UAAhB,EAA4B,2BAA5B;AACA,OAAKD,IAAL,CAAUC,KAAV,CAAgB,WAAhB,EAA6B,2BAA7B;AACA,OAAKD,IAAL,CAAUC,KAAV,CAAgB,QAAhB,EAA0B,wBAA1B;AACA,OAAKD,IAAL,CAAUC,KAAV,CAAgB,YAAhB,EAA8B,kCAA9B;AACA,OAAKD,IAAL,CAAUC,KAAV,CAAgB,OAAhB,EAAyB,6BAAzB;AACA,OAAKD,IAAL,CAAUC,KAAV,CAAgB,OAAhB,EAAyB,6BAAzB;AACA,OAAKD,IAAL,CAAUC,KAAV,CAAgB,MAAhB,EAAwB,4BAAxB;AACH,C,CAED;;;AAEA,SAASxC,MAAT,GAAkB;AAEd;AACAyB,EAAAA,YAAY,GAAG,KAAKhC,MAAL,CAAYgD,KAAZ,CAAkBC,YAAlB,EAAf,CAHc,CAGkC;;AAChDhB,EAAAA,YAAY,GAAG,KAAKjC,MAAL,CAAYgD,KAAZ,CAAkBC,YAAlB,EAAf,CAJc,CAIkC;;AAChDtB,EAAAA,eAAe,GAAG,KAAK3B,MAAL,CAAYgD,KAAZ,CAAkBC,YAAlB,EAAlB,CALc,CAKqC;;AACnDrB,EAAAA,eAAe,GAAG,KAAK5B,MAAL,CAAYgD,KAAZ,CAAkBC,YAAlB,EAAlB,CANc,CAMqC;;AACnDpB,EAAAA,eAAe,GAAG,KAAK7B,MAAL,CAAYgD,KAAZ,CAAkBC,YAAlB,EAAlB;AACAnB,EAAAA,eAAe,GAAG,KAAK9B,MAAL,CAAYgD,KAAZ,CAAkBC,YAAlB,EAAlB;AACAlB,EAAAA,eAAe,GAAG,KAAK/B,MAAL,CAAYgD,KAAZ,CAAkBC,YAAlB,EAAlB;AACAZ,EAAAA,qBAAqB,GAAG,KAAKrC,MAAL,CAAYgD,KAAZ,CAAkBC,YAAlB,EAAxB;AACAf,EAAAA,cAAc,GAAG,KAAjB;AAEAI,EAAAA,IAAI,GAAG,IAAP;AACAxB,EAAAA,MAAM,GAAG,KAAKd,MAAL,CAAYgD,KAAZ,CAAkBE,SAAlB,CAA4B,CAA5B,EAA+B,CAA/B,EAAkC,GAAlC,EAAuC,GAAvC,EAA4C,EAA5C,EAAgD,IAAhD,EAAsD,IAAtD,EAA4D,IAA5D,EAAkE,IAAlE,CAAT;AACAxC,EAAAA,IAAI,GAAG,KAAKyC,KAAL,CAAWC,QAAX,CAAoBC,MAApB,CAA2B3D,MAAM,CAAC4D,KAAP,CAAaC,QAAb,CAAsBC,QAAtB,CAA+BC,IAA1D,CAAP;AACA7C,EAAAA,KAAK,GAAG,KAAKuC,KAAL,CAAWC,QAAX,CAAoBC,MAApB,CAA2B3D,MAAM,CAAC4D,KAAP,CAAaC,QAAb,CAAsBC,QAAtB,CAA+BE,KAA1D,CAAR;AACA/C,EAAAA,KAAK,GAAG,KAAKwC,KAAL,CAAWC,QAAX,CAAoBC,MAApB,CAA2B3D,MAAM,CAAC4D,KAAP,CAAaC,QAAb,CAAsBC,QAAtB,CAA+BG,KAA1D,CAAR;AACAlD,EAAAA,QAAQ,GAAG,KAAK0C,KAAL,CAAWC,QAAX,CAAoBC,MAApB,CAA2B3D,MAAM,CAAC4D,KAAP,CAAaC,QAAb,CAAsBC,QAAtB,CAA+BI,KAA1D,CAAX,CAlBc,CAqBd;AAEA;;AACA,OAAKT,KAAL,CAAWU,EAAX,CAAc,aAAd,EAA6B,UAASC,OAAT,EAAiB;AAC1CjD,IAAAA,IAAI,GAAG,IAAIkD,IAAJ,CAAS,IAAT,EAAeD,OAAO,CAAC3D,CAAvB,EAA0B2D,OAAO,CAAC1D,CAAlC,EAAqC,MAArC,CAAP;AACA4D,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAAC3D,CAApB,EAAuB,GAAvB,EAA4B2D,OAAO,CAAC1D,CAApC;AACH,GAHD,EAGG,IAHH,EAxBc,CA6Bd;;AACA,MAAI8D,QAAQ,GAAG,EAAf;AACA,OAAKf,KAAL,CAAWU,EAAX,CAAc,aAAd,EAA6B,UAASC,OAAT,EAAiB;AAC1C,QAAIK,KAAK,GAAG;AACRhE,MAAAA,CAAC,EAAE2D,OAAO,CAAC3D,CADH;AAERC,MAAAA,CAAC,EAAE0D,OAAO,CAAC1D;AAFH,KAAZ;AAIA8D,IAAAA,QAAQ,CAACE,IAAT,CAAcD,KAAd;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACH,GAPD,EAOG,IAPH,EA/Bc,CA0Cd;AACA;AAEA;AACA;AACA;;AAEA1C,EAAAA,KAAK,GAAG,KAAK6C,GAAL,CAAStB,KAAT,CAAe,GAAf,EAAoB,GAApB,EAAyB,OAAzB,CAAR;AACAvB,EAAAA,KAAK,CAAC8C,QAAN,CAAe,CAAf;AACA7C,EAAAA,KAAK,GAAG,KAAK4C,GAAL,CAAStB,KAAT,CAAe,GAAf,EAAoB,GAApB,EAAyB,OAAzB,CAAR;AACAtB,EAAAA,KAAK,CAAC6C,QAAN,CAAe,CAAf;AACA5C,EAAAA,UAAU,GAAG,KAAK2C,GAAL,CAAStB,KAAT,CAAe,GAAf,EAAoB,GAApB,EAAyB,YAAzB,CAAb;AACArB,EAAAA,UAAU,CAAC4C,QAAX,CAAoB,CAApB,EAtDc,CAwDd;AACA;AACA;AAEA;;AACAvD,EAAAA,WAAW,GAAG,IAAIwD,WAAJ,CAAgB,IAAhB,EAAsB,GAAtB,EAA2B,GAA3B,CAAd;AACAvD,EAAAA,YAAY,GAAG,IAAIwD,YAAJ,CAAiB,IAAjB,EAAuB,GAAvB,EAA4B,GAA5B,CAAf;AACAvD,EAAAA,WAAW,GAAG,IAAIwD,WAAJ,CAAgB,IAAhB,EAAsB,GAAtB,EAA2B,GAA3B,CAAd,CA/Dc,CAiEd;;AACAtD,EAAAA,OAAO,GAAG,IAAIuD,MAAJ,CAAW,IAAX,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,QAA3B,CAAV;AACAtD,EAAAA,OAAO,GAAG,IAAIsD,MAAJ,CAAW,IAAX,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,QAA3B,CAAV;AACArD,EAAAA,OAAO,GAAG,IAAIqD,MAAJ,CAAW,IAAX,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,QAA3B,CAAV,CApEc,CAsEd;AAEA;AACA;AACA;AAEA;;AACA;AACA;AACA;AAEA;;AACA,MAAIC,iBAAJ,CAAsB,IAAtB,EAA4B,GAA5B,EAAiC,GAAjC,EAAsC,UAAtC,EAAkD/C,eAAlD,EAAmEgD,QAAnE,CAA4E,GAA5E,EAAiF,CAAjF;AACA,MAAID,iBAAJ,CAAsB,IAAtB,EAA4B,GAA5B,EAAiC,GAAjC,EAAsC,SAAtC,EAAiD/C,eAAjD,EAAkEgD,QAAlE,CAA2E,IAA3E,EAAiF,GAAjF,EAnFc,CAoFd;;AACA,MAAID,iBAAJ,CAAsB,IAAtB,EAA4B,GAA5B,EAAiC,GAAjC,EAAsC,WAAtC,EAAmD/C,eAAnD,EAAoEgD,QAApE,CAA6E,IAA7E,EAAmF,CAAnF;AACA,MAAID,iBAAJ,CAAsB,IAAtB,EAA4B,GAA5B,EAAiC,GAAjC,EAAsC,UAAtC,EAAkD/C,eAAlD,EAAmEgD,QAAnE,CAA4E,IAA5E,EAAkF,CAAlF;AACA,MAAID,iBAAJ,CAAsB,IAAtB,EAA4B,GAA5B,EAAiC,GAAjC,EAAsC,eAAtC,EAAuD/C,eAAvD,EAAwEgD,QAAxE,CAAiF,IAAjF,EAAuF,CAAvF;AACA,MAAID,iBAAJ,CAAsB,IAAtB,EAA4B,GAA5B,EAAiC,GAAjC,EAAsC,cAAtC,EAAsD/C,eAAtD,EAAuEiD,QAAvE,CAAgF,CAAC,EAAjF;AACA,MAAIF,iBAAJ,CAAsB,IAAtB,EAA4B,GAA5B,EAAiC,GAAjC,EAAsC,cAAtC,EAAsD/C,eAAtD,EAAuEgD,QAAvE,CAAgF,IAAhF,EAAsF,CAAtF;AACA,MAAID,iBAAJ,CAAsB,IAAtB,EAA4B,GAA5B,EAAiC,GAAjC,EAAsC,cAAtC,EAAsD9C,eAAtD,EAAuE+C,QAAvE,CAAgF,IAAhF,EAAsF,CAAtF,EA1Fc,CA2Fd;;AACA,MAAID,iBAAJ,CAAsB,IAAtB,EAA4B,GAA5B,EAAiC,GAAjC,EAAsC,YAAtC,EAAoD/C,eAApD,EAAqEgD,QAArE,CAA8E,CAA9E,EAAiF,GAAjF,EAAsFC,QAAtF,CAA+F,CAAC,GAAhG;AACA,MAAIF,iBAAJ,CAAsB,IAAtB,EAA4B,GAA5B,EAAiC,GAAjC,EAAsC,YAAtC,EAAoD/C,eAApD;AACA,MAAI+C,iBAAJ,CAAsB,IAAtB,EAA4B,GAA5B,EAAiC,GAAjC,EAAsC,eAAtC,EAAuD/C,eAAvD,EAAwEgD,QAAxE,CAAiF,IAAjF,EAAuF,CAAvF;AACA,MAAID,iBAAJ,CAAsB,IAAtB,EAA4B,GAA5B,EAAiC,GAAjC,EAAsC,gBAAtC,EAAwD/C,eAAxD,EAAyEgD,QAAzE,CAAkF,IAAlF,EAAwF,CAAxF,EA/Fc,CAgGd;;AACA,MAAID,iBAAJ,CAAsB,IAAtB,EAA4B,EAA5B,EAAgC,GAAhC,EAAqC,UAArC,EAAiD/C,eAAjD,EAAkEgD,QAAlE,CAA2E,CAA3E,EAA6E,GAA7E;AACA,MAAID,iBAAJ,CAAsB,IAAtB,EAA4B,GAA5B,EAAiC,GAAjC,EAAsC,aAAtC,EAAqD/C,eAArD,EAAsEiD,QAAtE,CAA+E,EAA/E,EAlGc,CAmGd;;AACA,MAAIF,iBAAJ,CAAsB,IAAtB,EAA4B,GAA5B,EAAiC,GAAjC,EAAsC,cAAtC,EAAsD/C,eAAtD,EAAuEgD,QAAvE,CAAgF,CAAhF,EAAmF,CAAnF;AACA,MAAIE,WAAJ,CAAgB,IAAhB,EAAsB,WAAtB,EAAmC,GAAnC,EAAwC,GAAxC,EAA6C,EAA7C,EAAiD,EAAjD,EAAqD,GAArD,EAA0DlD,eAA1D,EArGc,CAqG4D;;AAC1E,MAAIkD,WAAJ,CAAgB,IAAhB,EAAsB,WAAtB,EAAmC,GAAnC,EAAwC,EAAxC,EAA4C,GAA5C,EAAiD,EAAjD,EAAqD,GAArD,EAA0DlD,eAA1D,EAtGc,CAwGd;;AACA,MAAIkD,WAAJ,CAAgB,IAAhB,EAAsB,QAAtB,EAAgC,GAAhC,EAAqC,GAArC,EAA0C,CAA1C,EAA6C,IAA7C,EAAmD,IAAnD,EAAyDlD,eAAzD;AACA,MAAIkD,WAAJ,CAAgB,IAAhB,EAAsB,QAAtB,EAAgC,GAAhC,EAAqC,GAArC,EAA0C,CAA1C,EAA6C,IAA7C,EAAmD,IAAnD,EAAyDlD,eAAzD;AACA,MAAIkD,WAAJ,CAAgB,IAAhB,EAAsB,QAAtB,EAAgC,GAAhC,EAAqC,EAArC,EAAyC,CAAzC,EAA4C,IAA5C,EAAkD,IAAlD,EAAwDlD,eAAxD,EA3Gc,CA2G0D;;AACxE,MAAIkD,WAAJ,CAAgB,IAAhB,EAAsB,QAAtB,EAAgC,GAAhC,EAAqC,EAArC,EAAyC,CAAzC,EAA4C,IAA5C,EAAkD,IAAlD,EAAwDlD,eAAxD,EA5Gc,CA4G0D;;AACxE,MAAIkD,WAAJ,CAAgB,IAAhB,EAAsB,QAAtB,EAAgC,GAAhC,EAAqC,EAArC,EAAyC,CAAzC,EAA4C,IAA5C,EAAkD,IAAlD,EAAwDlD,eAAxD,EA7Gc,CA6G0D;;AACxE,MAAIkD,WAAJ,CAAgB,IAAhB,EAAsB,QAAtB,EAAgC,GAAhC,EAAqC,EAArC,EAAyC,CAAzC,EAA4C,IAA5C,EAAkD,IAAlD,EAAwDlD,eAAxD,EA9Gc,CA8G0D;;AACxE,MAAIkD,WAAJ,CAAgB,IAAhB,EAAsB,QAAtB,EAAgC,GAAhC,EAAqC,EAArC,EAAyC,CAAzC,EAA4C,IAA5C,EAAkD,IAAlD,EAAwDlD,eAAxD,EA/Gc,CA+G0D;;AACxE,MAAIkD,WAAJ,CAAgB,IAAhB,EAAsB,QAAtB,EAAgC,GAAhC,EAAqC,EAArC,EAAyC,CAAzC,EAA4C,IAA5C,EAAkD,IAAlD,EAAwDlD,eAAxD,EAhHc,CAgH0D;AAExE;;AACA,MAAIkD,WAAJ,CAAgB,IAAhB,EAAsB,QAAtB,EAAgC,GAAhC,EAAqC,GAArC,EAA0C,CAA1C,EAA6C,IAA7C,EAAmD,IAAnD,EAAyDlD,eAAzD,EAnHc,CAmH4D;;AAC1E,MAAIkD,WAAJ,CAAgB,IAAhB,EAAsB,QAAtB,EAAgC,GAAhC,EAAqC,GAArC,EAA0C,CAA1C,EAA6C,IAA7C,EAAmD,IAAnD,EAAyDlD,eAAzD,EApHc,CAoH4D;;AAC1E,MAAIkD,WAAJ,CAAgB,IAAhB,EAAsB,QAAtB,EAAgC,GAAhC,EAAqC,GAArC,EAA0C,CAA1C,EAA6C,IAA7C,EAAmD,IAAnD,EAAyDlD,eAAzD,EArHc,CAqH4D;;AAC1E,MAAIkD,WAAJ,CAAgB,IAAhB,EAAsB,QAAtB,EAAgC,GAAhC,EAAqC,GAArC,EAA0C,CAA1C,EAA6C,IAA7C,EAAmD,IAAnD,EAAyDlD,eAAzD,EAtHc,CAsH4D;;AAC1E,MAAIkD,WAAJ,CAAgB,IAAhB,EAAsB,QAAtB,EAAgC,GAAhC,EAAqC,GAArC,EAA0C,CAA1C,EAA6C,IAA7C,EAAmD,IAAnD,EAAyDlD,eAAzD,EAvHc,CAuH4D;;AAC1E,MAAIkD,WAAJ,CAAgB,IAAhB,EAAsB,QAAtB,EAAgC,GAAhC,EAAqC,GAArC,EAA0C,CAA1C,EAA6C,IAA7C,EAAmD,IAAnD,EAAyDlD,eAAzD,EAxHc,CAwH4D;AAE1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;;AACA,MAAImD,MAAJ,CAAW,IAAX,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,EAAgC,MAAhC,EAAwC,YAAxC,EAAsD/C,YAAtD;AACA,MAAI+C,MAAJ,CAAW,IAAX,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,CAAC,EAA5B,EAAgC,MAAhC,EAAwC,cAAxC,EAAwD/C,YAAxD;AACA,MAAI+C,MAAJ,CAAW,IAAX,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,CAAC,EAA5B,EAAgC,MAAhC,EAAwC,aAAxC,EAAuD/C,YAAvD;AACA,MAAI+C,MAAJ,CAAW,IAAX,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,CAA3B,EAA8B,UAA9B,EAA0C,aAA1C,EAAyD9C,YAAzD;AACA,MAAI8C,MAAJ,CAAW,IAAX,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,CAA3B,EAA8B,UAA9B,EAA0C,cAA1C,EAA0D9C,YAA1D,EAxJc,CA4Jd;;AACA;;AAGA,OAAKjC,MAAL,CAAYgD,KAAZ,CAAkBa,EAAlB,CAAqB,gBAArB,EAAuC,UAASmB,KAAT,EAAgBC,KAAhB,EAAuBC,KAAvB,EAA6B;AAEhE;AACA,QAAIA,KAAK,CAACC,KAAN,KAAgB,MAAhB,IAA0BF,KAAK,CAACG,QAApC,EAA8C;AAE1C;AACA,UAAIH,KAAK,CAACxF,IAAN,KAAe,MAAnB,EAA2B;AACvByF,QAAAA,KAAK,CAACG,QAAN,GAAiB,CAACH,KAAK,CAACG,QAAxB;AACH,OAFD,MAEO,IAAIJ,KAAK,CAACxF,IAAN,KAAe,UAAnB,EAA+B;AAClC6F,QAAAA,UAAU,CAAC,YAAU;AACjBJ,UAAAA,KAAK,CAACG,QAAN,GAAiB,CAACH,KAAK,CAACG,QAAxB;AACH,SAFS,EAEP,EAFO,CAAV;AAGH;AACJ,KAb+D,CAehE;;;AACA,QAAIH,KAAK,CAACC,KAAN,KAAgB,MAAhB,IAA0BF,KAAK,CAACE,KAAN,KAAgB,WAA9C,EAA0D;AACtDI,MAAAA,UAAU,CAACC,IAAX;AACAC,MAAAA,UAAU,CAACD,IAAX;AACH,KAnB+D,CAqBhE;;;AAEA,QAAKP,KAAK,CAACE,KAAN,KAAgB,QAAhB,IAA4BD,KAAK,CAACC,KAAN,KAAiB,MAAlD,EAA0D;AACtDF,MAAAA,KAAK,CAACS,UAAN,CAAiBF,IAAjB,CAAsBN,KAAK,CAACS,QAA5B;AACH;AACJ,GA1BD;AA2BH;;AAID,SAASnF,MAAT,GAAkB;AAEdO,EAAAA,WAAW,CAAC6E,IAAZ;AACA5E,EAAAA,YAAY,CAAC4E,IAAb;AACA3E,EAAAA,WAAW,CAAC2E,IAAZ;;AAGA,MAAGlG,MAAM,CAAC4D,KAAP,CAAaC,QAAb,CAAsBsC,QAAtB,CAA+BpF,QAA/B,CAAH,EAA4C;AACxCI,IAAAA,IAAI,GAAG,IAAIkD,IAAJ,CAAS,IAAT,EAAe,GAAf,EAAoB,GAApB,EAAyB,MAAzB,CAAP;AACAlD,IAAAA,IAAI,CAACiF,MAAL;AACH;;AAED,MAAIpG,MAAM,CAAC4D,KAAP,CAAaC,QAAb,CAAsBsC,QAAtB,CAA+BnF,IAA/B,CAAJ,EAAyC;AACrCK,IAAAA,WAAW,CAACgF,IAAZ;AACAhF,IAAAA,WAAW,CAACiF,UAAZ,GAAyB,IAAzB;AACH;;AAED,MAAItG,MAAM,CAAC4D,KAAP,CAAaC,QAAb,CAAsB0C,MAAtB,CAA6BvF,IAA7B,CAAJ,EAAuC;AACnCK,IAAAA,WAAW,CAACiF,UAAZ,GAAyB,KAAzB;AACAjF,IAAAA,WAAW,CAACmF,OAAZ;AACH;;AAED,MAAIxG,MAAM,CAAC4D,KAAP,CAAaC,QAAb,CAAsBsC,QAAtB,CAA+BlF,KAA/B,CAAJ,EAA0C;AACtCK,IAAAA,YAAY,CAAC+E,IAAb;AACA9E,IAAAA,WAAW,CAAC8E,IAAZ;AACA/E,IAAAA,YAAY,CAACgF,UAAb,GAA0B,IAA1B;AACA/E,IAAAA,WAAW,CAAC+E,UAAZ,GAAyB,IAAzB;AACH;;AAED,MAAItG,MAAM,CAAC4D,KAAP,CAAaC,QAAb,CAAsB0C,MAAtB,CAA6BtF,KAA7B,CAAJ,EAAwC;AACpCK,IAAAA,YAAY,CAACgF,UAAb,GAA0B,KAA1B;AACA/E,IAAAA,WAAW,CAAC+E,UAAZ,GAAyB,KAAzB;AACAhF,IAAAA,YAAY,CAACkF,OAAb;AACAjF,IAAAA,WAAW,CAACiF,OAAZ;AACH;AACJ","sourcesContent":["\r\n//Initial config\r\n\r\nconst config = {\r\n    type: Phaser.CANVAS,\r\n    width: 520,\r\n    height: 800,\r\n    physics: {\r\n        default: 'matter',\r\n        matter: {\r\n            debug: false,\r\n            gravity: {\r\n                x: 0,\r\n                y: .9\r\n            }\r\n        }\r\n    },\r\n    scene: {\r\n        preload: preload, \r\n        create: create,\r\n        update: update \r\n    }\r\n}\r\n\r\n//Declare global variables \r\n\r\nlet \r\n    spacebar, \r\n    left,\r\n    right,\r\n    shift,\r\n    ball, \r\n    bounds, \r\n    leftFlipper, \r\n    rightFlipper, \r\n    sideFlipper,\r\n    testShape,\r\n    bumperA, bumperB, bumperC,\r\n\r\n    //Background\r\n    playfield,\r\n    plastics,\r\n    table,\r\n    ramps,\r\n    characters,\r\n\r\n    //Utilities\r\n    collisionGroupA, collisionGroupB, collisionGroupC, collisionGroupD, collisionGroupE,\r\n    sensorGroupA, sensorGroupB,\r\n    leftRampDivert, // Default: false\r\n    leftRampDiverter, \r\n    leftRampBottom,\r\n    flipperCollisionGroup,\r\n    test,\r\n    tween,\r\n    testFlipper\r\nconst Bodies = Phaser.Physics.Matter.Matter.Bodies\r\nconst game = new Phaser.Game(config)\r\n\r\n//Load assets\r\n\r\nfunction preload() {\r\n    \r\n    this.load.image('rectA', 'dist/assets/solids/grey-solid.svg')\r\n    this.load.image('schematic', 'dist/assets/schematic.jpg')\r\n    this.load.image('blueprint', 'dist/assets/blueprint.png')\r\n    this.load.image('plastics', 'dist/assets/Plasticos.png')\r\n    this.load.image('playfield', 'dist/assets/Playfield.png')\r\n    this.load.image('render', 'dist/assets/render.png')\r\n    this.load.image('characters', 'dist/assets/table/characters.png')\r\n    this.load.image('ramps', 'dist/assets/table/ramps.png')\r\n    this.load.image('table', 'dist/assets/table/table.png')\r\n    this.load.image('ball', 'dist/assets/table/ball.png')\r\n}\r\n\r\n//Initialize table\r\n\r\nfunction create() {\r\n\r\n    //Set some things up, inputs, collisiongroups, etc. \r\n    sensorGroupA = this.matter.world.nextCategory() // Ground level sensors\r\n    sensorGroupB = this.matter.world.nextCategory() // Upper level sensors\r\n    collisionGroupA = this.matter.world.nextCategory() // Ball\r\n    collisionGroupB = this.matter.world.nextCategory() // Walls\r\n    collisionGroupC = this.matter.world.nextCategory()\r\n    collisionGroupD = this.matter.world.nextCategory()\r\n    collisionGroupE = this.matter.world.nextCategory()\r\n    flipperCollisionGroup = this.matter.world.nextCategory()\r\n    leftRampDivert = false\r\n\r\n    test = this\r\n    bounds = this.matter.world.setBounds(0, 0, 520, 800, 30, true, true, true, true)\r\n    left = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.LEFT)\r\n    shift = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SHIFT)\r\n    right = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.RIGHT)\r\n    spacebar = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE)\r\n    \r\n\r\n    //Utility functions\r\n\r\n    //Add a ball where you click\r\n    this.input.on('pointerdown', function(pointer){\r\n        ball = new Ball(this, pointer.x, pointer.y, 'ball') \r\n        console.log(pointer.x, ',', pointer.y)\r\n    }, this)\r\n\r\n    //Creates paths used to draw physics shapes. \r\n    let vertices = []\r\n    this.input.on('pointerdown', function(pointer){\r\n        let value = {\r\n            x: pointer.x,\r\n            y: pointer.y\r\n        }\r\n        vertices.push(value)\r\n        console.log(vertices)\r\n    }, this)\r\n    \r\n\r\n    \r\n    //Layout overlay\r\n    //let blueprint = this.add.image(260,400, 'blueprint')\r\n    \r\n    // playfield = this.add.image(260, 390, 'render')\r\n    // playfield.setScale(1)\r\n    // playfield.setDepth(1)\r\n\r\n    table = this.add.image(260, 400, 'table')\r\n    table.setDepth(1)\r\n    ramps = this.add.image(260, 400, 'ramps')\r\n    ramps.setDepth(2)\r\n    characters = this.add.image(260, 400, 'characters')\r\n    characters.setDepth(4)\r\n    \r\n    // plastics = this.add.image(220, 445, 'plastics')\r\n    // plastics.setScale(0.21)\r\n    // plastics.setDepth(1)\r\n    \r\n    //Flippers\r\n    leftFlipper = new LeftFlipper(this, 147, 634) \r\n    rightFlipper = new RightFlipper(this, 330, 634)\r\n    sideFlipper = new SideFlipper(this, 420, 295)\r\n\r\n    //Pop bumpers\r\n    bumperA = new Bumper(this, 300, 125, 'bumper')\r\n    bumperB = new Bumper(this, 370, 125, 'bumper')\r\n    bumperC = new Bumper(this, 330, 175, 'bumper')\r\n\r\n    //Slingshots\r\n\r\n    //Redo slingshots and replace with a shape\r\n    // slingshotA = new Slingshot(this, 122, 490, 148, 574, 177, 518, 5)\r\n    // slingshotB = new Slingshot(this, 353, 491, 327, 574, 298, 518, 5)\r\n    \r\n    //Static Objects\r\n    /*********************************************************/\r\n    //StaticCustomShape(scene, x, y, path, collision group)\r\n    //StaticShape(scene, type, x, y, width, height, rotation, collision group)\r\n\r\n    //First level (collision group B)\r\n    new StaticCustomShape(this, 250, 740, 'killZone', collisionGroupB).setScale(0.9, 1)\r\n    new StaticCustomShape(this, 147, 200, 'topLoop', collisionGroupB).setScale(0.85, 0.9)\r\n    //new StaticCustomShape(this, 160, 168, 'leftRampRight', collisionGroupB)\r\n    new StaticCustomShape(this, 365, 593, 'rightLane', collisionGroupB).setScale(0.82, 1)\r\n    new StaticCustomShape(this, 107, 593, 'leftLane', collisionGroupB).setScale(0.82, 1)\r\n    new StaticCustomShape(this, 350, 218, 'rightTrapCowl', collisionGroupB).setScale(0.82, 1)\r\n    new StaticCustomShape(this, 450, 455, 'farRightWall', collisionGroupB).setAngle(-.5)\r\n    new StaticCustomShape(this, 155, 244, 'leftRampLeft', collisionGroupB).setScale(0.82, 1)\r\n    new StaticCustomShape(this, 155, 244, 'leftRampLeft', collisionGroupC).setScale(0.82, 1)\r\n    //new StaticCustomShape(this, 282, 112, 'rightRampLeft', collisionGroupB)\r\n    new StaticCustomShape(this, 423, 530, 'rightWallA', collisionGroupB).setScale(1, 1.1).setAngle(-2.2)\r\n    new StaticCustomShape(this, 405, 310, 'rightWallB', collisionGroupB)\r\n    new StaticCustomShape(this, 130, 540, 'leftSlingshot', collisionGroupB).setScale(0.82, 1)\r\n    new StaticCustomShape(this, 345, 540, 'rightSlingshot', collisionGroupB).setScale(0.82, 1)\r\n    //new StaticCustomShape(this, 342, 140, 'rightRampRight', collisionGroupB).setBounce(1)\r\n    new StaticCustomShape(this, 60, 488, 'leftWall', collisionGroupB).setScale(1,1.1)\r\n    new StaticCustomShape(this, 157, 132, 'leftLoopTop', collisionGroupB).setAngle(11)\r\n    //new StaticCustomShape(this, 218, 90, 'midTargetLeft', collisionGroupB)\r\n    new StaticCustomShape(this, 378, 400, 'rightTargets', collisionGroupB).setScale(1, 1)\r\n    new StaticShape(this, 'rectangle', 257, 224, 62, 15, .02, collisionGroupB)// Cartmen targets\r\n    new StaticShape(this, 'rectangle', 247, 91, 130, 15, 6.1, collisionGroupB) \r\n    \r\n    //Small round rubbers\r\n    new StaticShape(this, 'circle', 407, 451, 5, null, null, collisionGroupB) \r\n    new StaticShape(this, 'circle', 319, 148, 5, null, null, collisionGroupB)  \r\n    new StaticShape(this, 'circle', 314, 76, 5, null, null, collisionGroupB)//Top tri-lane\r\n    new StaticShape(this, 'circle', 341, 76, 5, null, null, collisionGroupB)//Top tri-lane\r\n    new StaticShape(this, 'circle', 371, 76, 5, null, null, collisionGroupB)//Top tri-lane\r\n    new StaticShape(this, 'circle', 314, 98, 5, null, null, collisionGroupB)//Top tri-lane\r\n    new StaticShape(this, 'circle', 341, 98, 5, null, null, collisionGroupB)//Top tri-lane\r\n    new StaticShape(this, 'circle', 371, 98, 5, null, null, collisionGroupB)//Top tri-lane\r\n\r\n    //Medium round rubbers\r\n    new StaticShape(this, 'circle', 236, 698, 6, null, null, collisionGroupB) // Center post\r\n    new StaticShape(this, 'circle', 100, 435, 8, null, null, collisionGroupB) // Left lane\r\n    new StaticShape(this, 'circle', 121, 491, 8, null, null, collisionGroupB) // Slingshot corners\r\n    new StaticShape(this, 'circle', 350, 491, 8, null, null, collisionGroupB) // \r\n    new StaticShape(this, 'circle', 148, 575, 8, null, null, collisionGroupB) // \r\n    new StaticShape(this, 'circle', 326, 575, 8, null, null, collisionGroupB) // \r\n\r\n    //Second level (collision group C)\r\n    // new StaticCustomShape(this, 45, 500, 'leftLaneBottomLeft', collisionGroupC) // Left Lane bottom L\r\n    // new StaticCustomShape(this, 92, 450, 'leftLaneBottomRight', collisionGroupC) // Left lane bottom R\r\n    // new StaticCustomShape(this, 150, 110, 'rightRampDivider', collisionGroupC) // Ramp divider\r\n    // new StaticCustomShape(this, 135, 7, 'leftRampTop', collisionGroupC) // Left ramp top\r\n    ////leftRampDiverter = new StaticCustomShape(this, 130, 10, 'leftRampDiverter', collisionGroupC)\r\n    // leftRampBottom = new StaticShape(this, 'circle', 128, 50, 25, null, null, collisionGroupC) // Left ramp bottom\r\n    // new StaticShape(this, 'circle', 365, 80, 50, null, null, collisionGroupC) //Right ramp bottom\r\n    // new StaticCustomShape(this, 345, 16, 'rightRampTop', collisionGroupC) // Right ramp top\r\n    // new StaticShape(this, 'rectangle', 55, 228, 15, 360, 0.095, collisionGroupC) // Left lane L\r\n    // new StaticShape(this, 'rectangle', 92, 228, 15, 360, 0.095, collisionGroupC) // Left lane R\r\n    // new StaticShape(this, 'rectangle', 100, 522, 15, 25, 1, collisionGroupC) // Left ramp termination\r\n    // new StaticShape(this, 'rectangle', 200, 72, 15, 150, -0.2, collisionGroupC) // Mid ramp right\r\n    // new StaticShape(this, 'rectangle', 275, 90, 15, 110, -0.2, collisionGroupC) // Right ramp left\r\n    // new StaticShape(this, 'rectangle', 325, 95, 15, 80, -0.2, collisionGroupC) // Right ramp right\r\n    // new StaticShape(this, 'rectangle', 422, 228, 15, 345, -0.095, collisionGroupC) // Right lane L\r\n    // new StaticShape(this, 'rectangle', 464, 228, 15, 360, -0.095, collisionGroupC) // Right lane R\r\n    // new StaticShape(this, 'rectangle', 401, 449, 140, 15, -1, collisionGroupC) // Right lane Bottom L\r\n    // new StaticShape(this, 'rectangle', 438, 469, 150, 15, -1, collisionGroupC) // Right lane Bottom R\r\n    // new StaticShape(this, 'rectangle', 376, 523, 15, 25, -1, collisionGroupC) // Right lane termination\r\n\r\n    \r\n\r\n    //Sensors \r\n\r\n    //Ramp on / off sensors\r\n    new Sensor(this, 180, 235, 1.6, 'ramp', 'leftRampOn', sensorGroupA)\r\n    new Sensor(this, 202, 212, -.1, 'ramp', 'centerRampOn', sensorGroupA)\r\n    new Sensor(this, 307, 208, -.1, 'ramp', 'rightRampOn', sensorGroupA)  \r\n    new Sensor(this, 103, 501, 0, 'ramp-off', 'leftRampOff', sensorGroupB)  \r\n    new Sensor(this, 371, 501, 0, 'ramp-off', 'rightRampOff', sensorGroupB)  \r\n\r\n\r\n\r\n    //Collision events\r\n    /*********************************************************/\r\n\r\n\r\n    this.matter.world.on('collisionstart', function(event, bodyA, bodyB){\r\n\r\n        //Sensors\r\n        if (bodyB.label === 'Ball' && bodyA.isSensor) {\r\n\r\n            //Toggles the balls isOnRamp state\r\n            if (bodyA.type === 'ramp') {\r\n                bodyB.isOnRamp = !bodyB.isOnRamp\r\n            } else if (bodyA.type === 'ramp-off') {\r\n                setTimeout(function(){\r\n                    bodyB.isOnRamp = !bodyB.isOnRamp\r\n                }, 50)\r\n            }\r\n        }\r\n        \r\n        //Slingshots\r\n        if (bodyB.label === 'Ball' && bodyA.label === 'Slingshot'){\r\n            slingshotA.fire()\r\n            slingshotB.fire()\r\n        }\r\n\r\n        //Pop bumpers\r\n\r\n        if ( bodyA.label === \"bumper\" && bodyB.label  === 'Ball') {\r\n            bodyA.gameObject.fire(bodyB.position)\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\nfunction update() {\r\n    \r\n    leftFlipper.hold()\r\n    rightFlipper.hold()\r\n    sideFlipper.hold()\r\n\r\n    \r\n    if(Phaser.Input.Keyboard.JustDown(spacebar)){\r\n        ball = new Ball(this, 416, 773, 'ball') \r\n        ball.launch()\r\n    }\r\n    \r\n    if (Phaser.Input.Keyboard.JustDown(left)){\r\n        leftFlipper.flip() \r\n        leftFlipper.isFlipping = true\r\n    } \r\n    \r\n    if (Phaser.Input.Keyboard.JustUp(left)){\r\n        leftFlipper.isFlipping = false\r\n        leftFlipper.release()\r\n    } \r\n\r\n    if (Phaser.Input.Keyboard.JustDown(right)){\r\n        rightFlipper.flip()\r\n        sideFlipper.flip()\r\n        rightFlipper.isFlipping = true\r\n        sideFlipper.isFlipping = true\r\n    } \r\n\r\n    if (Phaser.Input.Keyboard.JustUp(right)){\r\n        rightFlipper.isFlipping = false\r\n        sideFlipper.isFlipping = false\r\n        rightFlipper.release()\r\n        sideFlipper.release()\r\n    } \r\n} "],"file":"game.js"}