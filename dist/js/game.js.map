{"version":3,"sources":["game.js"],"names":["Ball","scene","x","y","texture","matter","world","sys","displayList","add","Phaser","Physics","Matter","Image","Bumper","Sprite","config","type","AUTO","width","height","physics","default","debug","preload","create","update","Bodies","flipperLength","balls","spacebar","left","right","ball","bounds","leftFlipper","leftBlock","leftPivot","leftFlipperPin","rightFlipper","rightBlock","rightPivot","rightFlipperPin","leftApron","rightApron","createBall","leftFlipperActive","dome","apronLeft","apronRight","apronBottom","bouncer","bumperRight","bumperLeft","fixtureTopLeft","hsBottom","hsTop","triPegLeft","triPegRight","wallLowLeft","wallTopLeft","wallTopRight","wallTopRightInner","game","Game","load","image","setBounds","setGravity","input","keyboard","addKey","Input","Keyboard","KeyCodes","LEFT","RIGHT","SPACE","schematic","scale","setFrictionStatic","setMass","setFrictionAir","setBounce","isStatic","scaleX","scaleY","rotation","setScale","setCircle","setStatic","rectA","rectangle","circleA","circle","mass","circleB","Body","parts","setExistingBody","constraint","stiffness","length","pointA","pointB","rectB","circleC","circleD","fromVertices","PATHS","JustDown","torque","JustUp","angle"],"mappings":"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","sourcesContent":["class Ball extends Phaser.Physics.Matter.Image {\r\n    constructor(scene, x, y, texture) {\r\n        super(scene.matter.world, x, y, texture)\r\n        super.setScale(.17)\r\n        super.setCircle(8.657)\r\n        scene.sys.displayList.add(this)\r\n    }\r\n    launch(){\r\n        super.setVelocityY(-30)\r\n    }\r\n}\r\n\r\nclass Bumper extends Phaser.Physics.Matter.Sprite {\r\n    constructor(scene, x, y, texture){\r\n        super(scene.matter.world, x, y, texture)\r\n        super.setStatic(true)\r\n        scene.sys.displayList.add(this)\r\n    }\r\n}\r\n\r\nconst config = {\r\n    type: Phaser.AUTO,\r\n    width: 440,\r\n    height: 800,\r\n    physics: {\r\n        default: 'matter',\r\n        matter: {\r\n            debug: true\r\n        }\r\n    },\r\n    scene: {\r\n        preload: preload, \r\n        create: create,\r\n        update: update \r\n    }\r\n}\r\n\r\nconst Bodies = Phaser.Physics.Matter.Matter.Bodies\r\n\r\nconst flipperLength = 65\r\n\r\nlet \r\n    balls, \r\n    spacebar, \r\n    left,\r\n    right,\r\n    ball, \r\n    bounds, \r\n    leftFlipper, \r\n    leftBlock, \r\n    leftPivot, \r\n    leftFlipperPin, \r\n    rightFlipper, \r\n    rightBlock, \r\n    rightPivot, \r\n    rightFlipperPin,\r\n    leftApron,\r\n    rightApron,\r\n    createBall,\r\n    leftFlipperActive,\r\n    dome,\r\n    apronLeft,\r\n    apronRight,\r\n    apronBottom,\r\n    bouncer,\r\n    bumperRight,\r\n    bumperLeft,\r\n    fixtureTopLeft,\r\n    hsBottom,\r\n    hsTop,\r\n    triPegLeft,\r\n    triPegRight,\r\n    wallLowLeft,\r\n    wallTopLeft,\r\n    wallTopRight,\r\n    wallTopRightInner\r\n\r\nconst game = new Phaser.Game(config)\r\n\r\n\r\n\r\nfunction preload() {\r\n    this.load.image('ball', 'dist/assets/sprites/wizball.png')\r\n    this.load.image('rectA', 'dist/assets/solids/grey-solid.svg')\r\n    this.load.image('schematic', 'dist/assets/schematic.jpg')\r\n    this.load.image('dome', 'dist/assets/textures/Dome.png')\r\n}\r\n\r\n\r\n//***************************************************************************************//\r\n\r\n\r\nfunction create() {\r\n\r\n    //Set world bounds\r\n    bounds = this.matter.world.setBounds(0, 0, 440, 800, 30, true, true, true, true)\r\n\r\n    //Set gravity\r\n    this.matter.world.setGravity(0,.35)\r\n\r\n    //Define inputs\r\n    left = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.LEFT)\r\n    right = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.RIGHT)\r\n    spacebar = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE)\r\n    \r\n    //Layout overlay\r\n    let schematic = this.add.image(220,400, 'schematic')\r\n    schematic.scale = 0.8\r\n    \r\n    //Create the ball\r\n    ball = new Ball(this, 100, 625, 'ball') \r\n    ball.setFrictionStatic(0)\r\n    ball.setMass(.1)\r\n    ball.setFrictionAir(0)\r\n    ball.setBounce(0.05)\r\n    \r\n    //Left flipper mechanism\r\n    \r\n    //Create bottom block to stop flipper from going too low\r\n    leftBlock = this.matter.add.image(170,727 ,'rectA', this, {\r\n        isStatic: true\r\n    })\r\n    leftBlock.scaleX = .1,\r\n    leftBlock.scaleY = .1,\r\n    leftBlock.rotation = .55\r\n    \r\n    //Create a pivot point to attach the constraint to\r\n    leftPivot = this.matter.add.image(145, 695, null, this)\r\n    leftPivot.setScale(.2)\r\n    leftPivot.setCircle(1)\r\n    leftPivot.setStatic(true)\r\n\r\n    //Create the left flipper components \r\n    let rectA = Bodies.rectangle(166 , 700, flipperLength, 16)\r\n    let circleA = Bodies.circle(150, 699, 5)\r\n    circleA.mass = 2\r\n    let circleB = Bodies.circle(188, 695, 4)\r\n\r\n    //Merge left flipper components\r\n    leftFlipper = Phaser.Physics.Matter.Matter.Body.create({\r\n        parts: [ circleA, circleB, rectA  ]\r\n    });\r\n    this.matter.add.image(150, 0, null).setScale(0.2).setExistingBody(leftFlipper)\r\n\r\n    //Add the pivot constraint\r\n    leftFlipperPin = this.matter.add.constraint(leftPivot, leftFlipper)    \r\n    leftFlipperPin.stiffness = .9\r\n    leftFlipperPin.length = 0\r\n    leftFlipperPin.pointA = {\r\n        x: 5, \r\n        y: 5\r\n    }\r\n    leftFlipperPin.pointB = {\r\n        x: -15, \r\n        y: 0\r\n    }\r\n\r\n    //Right flipper mechanism\r\n    \r\n    //Create bottom block to stop flipper from going too low\r\n    rightBlock = this.matter.add.image(260,727 ,'rectA', this, {\r\n        isStatic: true\r\n    })\r\n    rightBlock.scaleX = .1,\r\n    rightBlock.scaleY = .1,\r\n    rightBlock.rotation = -.55\r\n    //345 286\r\n    //Create a pivot point to attach the flipper to\r\n    rightPivot = this.matter.add.image(286, 695, null, this)\r\n    rightPivot.setScale(.2)\r\n    rightPivot.setCircle(1)\r\n    rightPivot.setStatic(true)\r\n \r\n    //Create the right flipper components \r\n    let rectB = Bodies.rectangle(254 , 700, flipperLength, 16)\r\n    let circleC = Bodies.circle(270, 699, 5)\r\n    circleC.mass = 2\r\n    let circleD = Bodies.circle(229, 695, 4)\r\n\r\n    \r\n    //Create right flipper compound body\r\n    rightFlipper = Phaser.Physics.Matter.Matter.Body.create({\r\n        parts: [ circleC, circleD, rectB  ]\r\n    });\r\n    this.matter.add.image(350, 0, null).setScale(0.2).setExistingBody(rightFlipper)\r\n\r\n    //Add the pivot constraint\r\n    rightFlipperPin = this.matter.add.constraint(rightPivot, rightFlipper)    \r\n    rightFlipperPin.stiffness = .9\r\n    rightFlipperPin.length = 0\r\n    rightFlipperPin.pointA = {\r\n        x: -5, \r\n        y: 5\r\n    }\r\n    rightFlipperPin.pointB = {\r\n        x: 15, \r\n        y: 0\r\n    }\r\n\r\n    //Increase mass of the flippers\r\n    //leftFlipper.mass = 50\r\n\r\n\r\n    //Place static objects. \r\n\r\n    //1. Create a game object with desired texture\r\n    dome = this.matter.add.image(0, 0, 'dome')\r\n    //2. Set that objects physics body to its vector outline and set it as static\r\n    dome.setExistingBody(Bodies.fromVertices(0,0, PATHS.dome)).setStatic(true)\r\n    dome.x = 220\r\n    dome.y = 180\r\n\r\n    apronLeft = this.matter.add.image(0, 0, 'apronLeft')\r\n    apronLeft.setExistingBody(Bodies.fromVertices(0,0, PATHS.apronLeft)).setStatic(true)\r\n    apronLeft.x = 71\r\n    apronLeft.y = 630\r\n\r\n    apronRight = this.matter.add.image(0, 0, 'apronRight')\r\n    apronRight.setExistingBody(Bodies.fromVertices(0,0, PATHS.apronRight)).setStatic(true)\r\n    apronRight.x = 340\r\n    apronRight.y = 654\r\n\r\n    bumperLeft = this.matter.add.image(0, 0, 'bumperLeft')\r\n    bumperLeft.setExistingBody(Bodies.fromVertices(0,0, PATHS.bumperLeft)).setStatic(true)\r\n    bumperLeft.x = 120\r\n    bumperLeft.y = 602\r\n\r\n\r\n    bumperRight = this.matter.add.image(0, 0, 'bumperRight')\r\n    bumperRight.setExistingBody(Bodies.fromVertices(0,0, PATHS.bumperRight)).setStatic(true)\r\n    bumperRight.x = 314\r\n    bumperRight.y = 602\r\n\r\n    fixtureTopLeft = this.matter.add.image(0, 0, 'fixtureTopLeft')\r\n    fixtureTopLeft.setExistingBody(Bodies.fromVertices(0,0, PATHS.fixtureTopLeft)).setStatic(true)\r\n    fixtureTopLeft.x = 90\r\n    fixtureTopLeft.y = 145\r\n\r\n    hsBottom = this.matter.add.image(0, 0, 'hsBottom')\r\n    hsBottom.setExistingBody(Bodies.fromVertices(0,0, PATHS.hsBottom)).setStatic(true)\r\n    hsBottom.x = 215\r\n    hsBottom.y = 85\r\n\r\n    hsTop = this.matter.add.image(0, 0, 'hsTop')\r\n    hsTop.setExistingBody(Bodies.fromVertices(0,0, PATHS.hsTop)).setStatic(true)\r\n    hsTop.x = 215\r\n    hsTop.y = 80\r\n\r\n    triPegLeft = this.matter.add.image(0, 0, 'triPegLeft')\r\n    triPegLeft.setExistingBody(Bodies.fromVertices(0,0, PATHS.triPegLeft)).setStatic(true)\r\n    triPegLeft.x = 40\r\n    triPegLeft.y = 425\r\n\r\n    triPegRight = this.matter.add.image(0, 0, 'triPegRight')\r\n    triPegRight.setExistingBody(Bodies.fromVertices(0,0, PATHS.triPegRight)).setStatic(true)\r\n    triPegRight.x = 400\r\n    triPegRight.y = 408\r\n\r\n    wallTopLeft = this.matter.add.image(0, 0, 'wallTopLeft')\r\n    wallTopLeft.setExistingBody(Bodies.fromVertices(0,0, PATHS.wallTopLeft)).setStatic(true)\r\n    wallTopLeft.x = 27\r\n    wallTopLeft.y = 325\r\n\r\n    wallTopRight = this.matter.add.image(0, 0, 'wallTopRight')\r\n    wallTopRight.setExistingBody(Bodies.fromVertices(0,0, PATHS.wallTopRight)).setStatic(true)\r\n    wallTopRight.x = 426\r\n    wallTopRight.y = 285\r\n\r\n    wallTopRightInner = this.matter.add.image(0, 0, 'wallTopRightInner')\r\n    wallTopRightInner.setExistingBody(Bodies.fromVertices(0,0, PATHS.wallTopRightInner)).setStatic(true)\r\n    wallTopRightInner.x = 385\r\n    wallTopRightInner.y = 200\r\n\r\n    wallLowLeft = this.matter.add.image(0, 0, 'wallLowLeft')\r\n    wallLowLeft.setExistingBody(Bodies.fromVertices(0,0, PATHS.wallLowLeft)).setStatic(true)\r\n    wallLowLeft.x = 26\r\n    wallLowLeft.y = 490\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nfunction update() {\r\n    \r\n    if(Phaser.Input.Keyboard.JustDown(spacebar)){\r\n        ball = new Ball(this, 100, 625, 'ball') \r\n        ball.setFrictionStatic(0.02)\r\n        ball.setMass(.25)\r\n        ball.setFrictionAir(0)\r\n    }\r\n\r\n    //Input control of left flipper\r\n    if (Phaser.Input.Keyboard.JustDown(left)){\r\n        leftFlipperActive = true\r\n        leftFlipper.torque = -3\r\n    } \r\n    \r\n    if (Phaser.Input.Keyboard.JustUp(left)){\r\n        leftFlipperActive = false\r\n    } \r\n    //Apply torque in opposite direction after left flipper reaches max angle\r\n    if( leftFlipper.angle <= -.5){\r\n        leftFlipper.torque = 1\r\n    } \r\n\r\n    //Input control of right flipper\r\n    if (Phaser.Input.Keyboard.JustDown(right)){\r\n        rightFlipper.torque = 3\r\n    } \r\n    //Apply torque in opposite direction after right flipper reaches max angle\r\n    if(rightFlipper.angle >= .5 ){\r\n         rightFlipper.torque = -1\r\n     } \r\n    \r\n    //This function lowers the gravity when the ball is going up and raises it on the way down.\r\n    // if(ball.body.velocity.y < 0){\r\n    //     this.matter.world.setGravity(0,0.35)\r\n    // } else {\r\n    //     this.matter.world.setGravity(0,.35)\r\n    // }\r\n\r\n} \r\n\r\n\r\n\r\n\r\n\r\n///The base of the flipper is a 15mm diameter circle, sloping down to a 5mm diameter circle at the tip. Overall length is 71mm, "],"file":"game.js"}