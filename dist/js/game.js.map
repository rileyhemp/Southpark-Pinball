{"version":3,"sources":["game.js"],"names":["config","type","Phaser","CANVAS","width","height","physics","default","matter","debug","gravity","x","y","scene","preload","create","update","Bodies","Physics","Matter","balls","spacebar","left","right","ball","bounds","leftFlipper","rightFlipper","testShape","bumperA","bumperB","bumperC","playfield","plastics","collisionGroupA","collisionGroupB","collisionGroupC","collisionGroupD","collisionGroupE","sensorGroupA","sensorGroupB","isOnRamp","leftRampDivert","leftRampDiverter","leftRampBottom","flipperCollisionGroup","test","tween","testFlipper","game","Game","load","image","world","nextCategory","setBounds","input","keyboard","addKey","Input","Keyboard","KeyCodes","LEFT","RIGHT","SPACE","on","pointer","Ball","console","log","blueprint","add","LeftFlipper","RightFlipper","Bumper","StaticCustomShape","setScale","setBounce","StaticShape","Sensor","event","bodyA","bodyB","label","isSensor","slingshotA","fire","slingshotB","canCallA","canCallB","canCallC","position","setTimeout","hold","JustDown","launch","flip","isFlipping","JustUp","release","length","forEach","collisionFilter","mask"],"mappings":"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","sourcesContent":["\r\n//Initial config\r\n\r\nconst config = {\r\n    type: Phaser.CANVAS,\r\n    width: 520,\r\n    height: 800,\r\n    physics: {\r\n        default: 'matter',\r\n        matter: {\r\n            debug: true,\r\n            gravity: {\r\n                x: 0,\r\n                y: .9\r\n            }\r\n        }\r\n    },\r\n    scene: {\r\n        preload: preload, \r\n        create: create,\r\n        update: update \r\n    }\r\n}\r\n\r\n//Declare global variables \r\n\r\nconst Bodies = Phaser.Physics.Matter.Matter.Bodies\r\n\r\nlet balls = []\r\n\r\nlet \r\n    spacebar, \r\n    left,\r\n    right,\r\n    ball, \r\n    bounds, \r\n    leftFlipper, \r\n    rightFlipper, \r\n    testShape,\r\n    bumperA, bumperB, bumperC,\r\n\r\n    //Background\r\n    playfield,\r\n    plastics,\r\n\r\n    //Utilities\r\n    collisionGroupA, collisionGroupB, collisionGroupC, collisionGroupD, collisionGroupE,\r\n    sensorGroupA, sensorGroupB,\r\n    isOnRamp,\r\n    leftRampDivert, // Default: false\r\n    leftRampDiverter, \r\n    leftRampBottom,\r\n    flipperCollisionGroup,\r\n    test,\r\n    tween,\r\n    testFlipper\r\n    \r\nconst game = new Phaser.Game(config)\r\n\r\n//Load assets\r\n\r\nfunction preload() {\r\n    this.load.image('ball', 'dist/assets/sprites/wizball.png')\r\n    this.load.image('rectA', 'dist/assets/solids/grey-solid.svg')\r\n    this.load.image('schematic', 'dist/assets/schematic.jpg')\r\n    this.load.image('blueprint', 'dist/assets/blueprint.png')\r\n    this.load.image('plastics', 'dist/assets/Plasticos.png')\r\n    this.load.image('playfield', 'dist/assets/Playfield.png')\r\n}\r\n\r\n//Initialize table\r\n\r\nfunction create() {\r\n\r\n    //Set some things up, inputs, collisiongroups, etc. \r\n    sensorGroupA = this.matter.world.nextCategory() // Ground level sensors\r\n    sensorGroupB = this.matter.world.nextCategory() // Upper level sensors\r\n    collisionGroupA = this.matter.world.nextCategory() // Ball\r\n    collisionGroupB = this.matter.world.nextCategory() // Walls\r\n    collisionGroupC = this.matter.world.nextCategory()\r\n    collisionGroupD = this.matter.world.nextCategory()\r\n    collisionGroupE = this.matter.world.nextCategory()\r\n    flipperCollisionGroup = this.matter.world.nextCategory()\r\n    leftRampDivert = false\r\n\r\n    test = this\r\n    bounds = this.matter.world.setBounds(0, 0, 520, 800, 30, true, true, true, true)\r\n    left = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.LEFT)\r\n    right = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.RIGHT)\r\n    spacebar = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE)\r\n    \r\n    //Add a ball where you click\r\n    this.input.on('pointerdown', function(pointer){\r\n        ball = new Ball(this, pointer.x, pointer.y, 'ball') \r\n        console.log(pointer.x, ',', pointer.y)\r\n    }, this)\r\n\r\n    \r\n    //Layout overlay\r\n    let blueprint = this.add.image(260,400, 'blueprint')\r\n    \r\n    // playfield = this.add.image(220, 445, 'playfield')\r\n    // playfield.setScale(0.21)\r\n    // playfield.setDepth(1)\r\n    \r\n    // plastics = this.add.image(220, 445, 'plastics')\r\n    // plastics.setScale(0.21)\r\n    // plastics.setDepth(1)\r\n    \r\n    //Flippers\r\n    leftFlipper = new LeftFlipper(this, 147, 634) \r\n    rightFlipper = new RightFlipper(this, 330, 634)\r\n\r\n    //Pop bumpers\r\n    bumperA = new Bumper(this, 305, 100, 'bumperA')\r\n    bumperB = new Bumper(this, 392, 95, 'bumperB')\r\n    bumperC = new Bumper(this, 360, 149, 'bumperC')\r\n    \r\n    //Static Objects\r\n    /*********************************************************/\r\n    //StaticCustomShape(scene, x, y, path, collision group)\r\n    //StaticShape(scene, type, x, y, width, height, rotation, collision group)\r\n\r\n    //First level (collision group B)\r\n    new StaticCustomShape(this, 160, 168, 'leftRampRight', collisionGroupB)\r\n    new StaticCustomShape(this, 378, 591, 'rightLane', collisionGroupB)\r\n    new StaticCustomShape(this, 97, 591, 'leftLane', collisionGroupB)\r\n    new StaticCustomShape(this, 369, 185, 'rightTrapCowl', collisionGroupB)\r\n    new StaticCustomShape(this, 481, 455, 'farRightWall', collisionGroupB)\r\n    new StaticCustomShape(this, 135, 222, 'leftRampLeft', collisionGroupB)\r\n    new StaticCustomShape(this, 282, 112, 'rightRampLeft', collisionGroupB)\r\n    new StaticCustomShape(this, 445, 530, 'rightWallA', collisionGroupB).setScale(1, 1.1)\r\n    new StaticCustomShape(this, 431, 310, 'rightWallB', collisionGroupB)\r\n    new StaticCustomShape(this, 250, 740, 'killZone', collisionGroupB)\r\n    new StaticCustomShape(this, 120, 535, 'leftSlingshot', collisionGroupB)\r\n    new StaticCustomShape(this, 355, 535, 'rightSlingshot', collisionGroupB)\r\n    new StaticCustomShape(this, 342, 140, 'rightRampRight', collisionGroupB).setBounce(1)\r\n    new StaticCustomShape(this, 40, 488, 'leftWall', collisionGroupB).setScale(1,1.1)\r\n    new StaticCustomShape(this, 130, 170, 'topLoop', collisionGroupB)\r\n    new StaticCustomShape(this, 125, 110, 'leftLoopTop', collisionGroupB)\r\n    new StaticCustomShape(this, 218, 90, 'midTargetLeft', collisionGroupB)\r\n    new StaticCustomShape(this, 398, 392, 'rightTargets', collisionGroupB) \r\n    new StaticShape(this, 'rectangle', 260, 197, 75, 15, .02, collisionGroupB) \r\n    new StaticShape(this, 'rectangle', 156, 110, 90, 15, 1.45, collisionGroupB) \r\n    \r\n    //Small round rubbers\r\n    new StaticShape(this, 'circle', 403, 482, 5, null, null, collisionGroupB) \r\n    new StaticShape(this, 'circle', 72, 482, 5, null, null, collisionGroupB) \r\n    new StaticShape(this, 'circle', 298, 73, 5, null, null, collisionGroupB) \r\n    new StaticShape(this, 'circle', 405, 121, 5, null, null, collisionGroupB)  \r\n\r\n    //Medium round rubbers\r\n    new StaticShape(this, 'circle', 236, 698, 6, null, null, collisionGroupB) // Center post\r\n    new StaticShape(this, 'circle', 88, 421, 8, null, null, collisionGroupB) \r\n    new StaticShape(this, 'circle', 140, 571, 8, null, null, collisionGroupB) //Slingshot corners\r\n    new StaticShape(this, 'circle', 365, 487, 8, null, null, collisionGroupB) // \r\n    new StaticShape(this, 'circle', 331, 570, 8, null, null, collisionGroupB) // \r\n    new StaticShape(this, 'circle', 108, 487, 8, null, null, collisionGroupB) // \r\n    new StaticShape(this, 'circle', 291, 38, 8, null, null, collisionGroupB)//Top tri-lane\r\n    new StaticShape(this, 'circle', 325, 39, 8, null, null, collisionGroupB)//Top tri-lane\r\n    new StaticShape(this, 'circle', 359, 37, 8, null, null, collisionGroupB)//Top tri-lane\r\n    new StaticShape(this, 'circle', 392, 37, 8, null, null, collisionGroupB)//Top tri-lane\r\n    new StaticShape(this, 'circle', 292, 59, 8, null, null, collisionGroupB)//Top tri-lane\r\n    new StaticShape(this, 'circle', 326, 59, 8, null, null, collisionGroupB)//Top tri-lane\r\n    new StaticShape(this, 'circle', 360, 58, 8, null, null, collisionGroupB)//Top tri-lane\r\n    new StaticShape(this, 'circle', 394, 58, 8, null, null, collisionGroupB)//Top tri-lane\r\n\r\n    //Second level (collision group C)\r\n    new StaticCustomShape(this, 45, 500, 'leftLaneBottomLeft', collisionGroupC) // Left Lane bottom L\r\n    new StaticCustomShape(this, 92, 450, 'leftLaneBottomRight', collisionGroupC) // Left lane bottom R\r\n    new StaticCustomShape(this, 150, 110, 'rightRampDivider', collisionGroupC) // Ramp divider\r\n    new StaticCustomShape(this, 135, 7, 'leftRampTop', collisionGroupC) // Left ramp top\r\n    //leftRampDiverter = new StaticCustomShape(this, 130, 10, 'leftRampDiverter', collisionGroupC)\r\n    leftRampBottom = new StaticShape(this, 'circle', 128, 50, 25, null, null, collisionGroupC) // Left ramp bottom\r\n    new StaticShape(this, 'circle', 365, 80, 50, null, null, collisionGroupC) //Right ramp bottom\r\n    new StaticCustomShape(this, 345, 16, 'rightRampTop', collisionGroupC) // Right ramp top\r\n    new StaticShape(this, 'rectangle', 55, 228, 15, 360, 0.095, collisionGroupC) // Left lane L\r\n    new StaticShape(this, 'rectangle', 92, 228, 15, 360, 0.095, collisionGroupC) // Left lane R\r\n    new StaticShape(this, 'rectangle', 100, 522, 15, 25, 1, collisionGroupC) // Left ramp termination\r\n    new StaticShape(this, 'rectangle', 200, 72, 15, 150, -0.2, collisionGroupC) // Mid ramp right\r\n    new StaticShape(this, 'rectangle', 275, 90, 15, 110, -0.2, collisionGroupC) // Right ramp left\r\n    new StaticShape(this, 'rectangle', 325, 95, 15, 80, -0.2, collisionGroupC) // Right ramp right\r\n    new StaticShape(this, 'rectangle', 422, 228, 15, 345, -0.095, collisionGroupC) // Right lane L\r\n    new StaticShape(this, 'rectangle', 464, 228, 15, 360, -0.095, collisionGroupC) // Right lane R\r\n    new StaticShape(this, 'rectangle', 401, 449, 140, 15, -1, collisionGroupC) // Right lane Bottom L\r\n    new StaticShape(this, 'rectangle', 438, 469, 150, 15, -1, collisionGroupC) // Right lane Bottom R\r\n    new StaticShape(this, 'rectangle', 376, 523, 15, 25, -1, collisionGroupC) // Right lane termination\r\n\r\n    \r\n\r\n    //Sensors \r\n\r\n    //Ramp on / off sensors\r\n    new Sensor(this, 126, 170, 0, 'ramp', 'leftRampOn', sensorGroupA)\r\n    new Sensor(this, 187, 146, 0, 'ramp', 'centerRampOn', sensorGroupA)\r\n    new Sensor(this, 309, 135, 0, 'ramp', 'rightRampOn', sensorGroupA)  \r\n    new Sensor(this, 89, 506, 0, 'ramp', 'leftRampOff', sensorGroupB)  \r\n    new Sensor(this, 386, 507, 0, 'ramp', 'rightRampOff', sensorGroupB)  \r\n\r\n\r\n\r\n    //Collision events\r\n    /*********************************************************/\r\n\r\n\r\n    this.matter.world.on('collisionstart', function(event, bodyA, bodyB){\r\n\r\n        //Sensors\r\n        if (bodyB.label === 'Ball' && bodyA.isSensor) {\r\n\r\n            //Toggles the balls isOnRamp state\r\n            if (bodyA.type === 'ramp') {\r\n                bodyB.isOnRamp = !bodyB.isOnRamp\r\n                console.log(bodyB.isOnRamp)\r\n            }\r\n        }\r\n        \r\n        //Slingshots\r\n        if (bodyB.label === 'Ball' && bodyA.label === 'Slingshot'){\r\n            slingshotA.fire()\r\n            slingshotB.fire()\r\n        }\r\n\r\n        //Pop bumpers\r\n        let canCallA = true\r\n        let canCallB = true\r\n        let canCallC = true\r\n        if ( bodyA.label === \"bumperA\" && bodyB.label  === 'Ball' && canCallA) {\r\n            canCallA = false\r\n            bumperA.fire(bodyB.position, \"bumperA\")\r\n            setTimeout(()=>{\r\n                canCallA = true\r\n            }, 100)\r\n        }\r\n        if ( bodyA.label === \"bumperB\" && bodyB.label  === 'Ball' && canCallB) {\r\n            canCallB = false\r\n            bumperB.fire(bodyB.position, \"bumperB\")\r\n            setTimeout(()=>{\r\n                canCallB = true\r\n            }, 100)\r\n        }\r\n        if ( bodyA.label === \"bumperC\" && bodyB.label  === 'Ball' && canCallC) {\r\n            canCallC = false\r\n            bumperC.fire(bodyB.position, \"bumperC\")\r\n            setTimeout(()=>{\r\n                canCallC = true\r\n            }, 100)\r\n        }\r\n    })\r\n}\r\n\r\nfunction update() {\r\n    \r\n    leftFlipper.hold()\r\n    rightFlipper.hold()\r\n\r\n    \r\n    if(Phaser.Input.Keyboard.JustDown(spacebar)){\r\n        ball = new Ball(this, 416, 773, 'ball') \r\n        ball.launch()\r\n    }\r\n    \r\n    if (Phaser.Input.Keyboard.JustDown(left)){\r\n        leftFlipper.flip() \r\n        leftFlipper.isFlipping = true\r\n    } \r\n    \r\n    if (Phaser.Input.Keyboard.JustUp(left)){\r\n        leftFlipper.isFlipping = false\r\n        leftFlipper.release()\r\n    } \r\n\r\n    if (Phaser.Input.Keyboard.JustDown(right)){\r\n        rightFlipper.flip()\r\n        rightFlipper.isFlipping = true\r\n    } \r\n\r\n    if (Phaser.Input.Keyboard.JustUp(right)){\r\n        rightFlipper.isFlipping = false\r\n        rightFlipper.release()\r\n    } \r\n\r\n    //Changes what bodies the ball collides depending on whether it went up a ramp or not. \r\n    if (balls.length && !isOnRamp){\r\n        balls.forEach(ball => {\r\n            ball.collisionFilter.mask = 14\r\n        })\r\n    } else if (balls.length && isOnRamp){\r\n        balls.forEach(ball => {\r\n            ball.collisionFilter.mask = 18\r\n        })\r\n    }\r\n\r\n    // if (!leftRampDivert) {\r\n    //     leftRampDiverter.setCollidesWith(collisionGroupB)\r\n    // } else if (leftRampDivert){\r\n    //     leftRampDiverter.setCollidesWith(collisionGroupA)\r\n    // }\r\n\r\n\r\n    \r\n\r\n\r\n} "],"file":"game.js"}