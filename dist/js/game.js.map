{"version":3,"sources":["game.js"],"names":["config","type","Phaser","CANVAS","width","height","physics","default","matter","debug","gravity","x","y","scene","preload","create","update","Bodies","Physics","Matter","balls","spacebar","left","right","ball","bounds","leftFlipper","rightFlipper","bumperA","leftRampRight","rightLane","rightTrapCowl","farRightWall","leftRampLeft","rightRampLeft","rightWallA","killZone","leftSlingshot","rightRampRight","rightWallB","leftLane","leftWall","rightSlingshot","topLoop","leftLoopTop","midTargetLeft","rightTargets","playfield","plastics","collisionGroupA","collisionGroupB","collisionGroupC","collisionGroupD","collisionGroupE","test","tween","game","Game","load","image","world","nextCategory","setBounds","input","keyboard","addKey","Input","Keyboard","KeyCodes","LEFT","RIGHT","SPACE","on","pointer","Ball","console","log","blueprint","add","LeftFlipper","RightFlipper","StaticCustomShape","setScale","canCallA","canCallB","canCallC","event","bodyA","bodyB","label","slingshotA","fire","slingshotB","position","setTimeout","bumperB","bumperC","hold","JustDown","launch","flip","isFlipping","JustUp"],"mappings":"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","sourcesContent":["\r\n//Initial config\r\n\r\nconst config = {\r\n    type: Phaser.CANVAS,\r\n    width: 520,\r\n    height: 800,\r\n    physics: {\r\n        default: 'matter',\r\n        matter: {\r\n            debug: true,\r\n            gravity: {\r\n                x: 0,\r\n                y: 0.35\r\n            }\r\n        }\r\n    },\r\n    scene: {\r\n        preload: preload, \r\n        create: create,\r\n        update: update \r\n    }\r\n}\r\n\r\n//Declare global variables \r\n\r\nconst Bodies = Phaser.Physics.Matter.Matter.Bodies\r\n\r\nlet \r\n    balls, \r\n    spacebar, \r\n    left,\r\n    right,\r\n    ball, \r\n    bounds, \r\n    leftFlipper, \r\n    rightFlipper, \r\n\r\n    //Static Objects\r\n    bumperA,\r\n    leftRampRight,\r\n    rightLane,\r\n    rightTrapCowl,\r\n    farRightWall,\r\n    leftRampLeft,\r\n    rightRampLeft,\r\n    rightWallA,\r\n    killZone,\r\n    leftSlingshot,\r\n    rightRampRight,\r\n    rightWallB,\r\n    leftLane,\r\n    leftWall,\r\n    rightSlingshot,\r\n    topLoop,\r\n    leftLoopTop,\r\n    midTargetLeft,\r\n    rightTargets,\r\n\r\n    //Background\r\n    playfield,\r\n    plastics,\r\n\r\n    //Utilities\r\n    collisionGroupA,\r\n    collisionGroupB,\r\n    collisionGroupC,\r\n    collisionGroupD,\r\n    collisionGroupE,\r\n    test,\r\n    tween\r\n    \r\nconst game = new Phaser.Game(config)\r\n\r\n//Load assets\r\n\r\nfunction preload() {\r\n    this.load.image('ball', 'dist/assets/sprites/wizball.png')\r\n    this.load.image('rectA', 'dist/assets/solids/grey-solid.svg')\r\n    this.load.image('schematic', 'dist/assets/schematic.jpg')\r\n    this.load.image('blueprint', 'dist/assets/blueprint.png')\r\n    this.load.image('plastics', 'dist/assets/Plasticos.png')\r\n    this.load.image('playfield', 'dist/assets/Playfield.png')\r\n}\r\n\r\n//Initialize table\r\n\r\nfunction create() {\r\n\r\n    //Set some things up, inputs, collisiongroups, etc. \r\n    collisionGroupA = this.matter.world.nextCategory()\r\n    collisionGroupB = this.matter.world.nextCategory()\r\n    collisionGroupC = this.matter.world.nextCategory()\r\n    collisionGroupD = this.matter.world.nextCategory()\r\n    collisionGroupE = this.matter.world.nextCategory()\r\n    test = this\r\n    bounds = this.matter.world.setBounds(0, 0, 520, 800, 30, true, true, true, true)\r\n    left = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.LEFT)\r\n    right = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.RIGHT)\r\n    spacebar = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE)\r\n    \r\n    //Add a ball where you click\r\n    this.input.on('pointerdown', function(pointer){\r\n        ball = new Ball(this, pointer.x, pointer.y, 'ball') \r\n        console.log(pointer.x + ',', pointer.y)\r\n    }, this)\r\n\r\n    \r\n    //Layout overlay\r\n    let blueprint = this.add.image(260,400, 'blueprint')\r\n    \r\n    // playfield = this.add.image(220, 445, 'playfield')\r\n    // playfield.setScale(0.21)\r\n    // playfield.setDepth(1)\r\n    \r\n    // plastics = this.add.image(220, 445, 'plastics')\r\n    // plastics.setScale(0.21)\r\n    // plastics.setDepth(1)\r\n    \r\n    //Flippers\r\n    leftFlipper = new LeftFlipper(this, 118, 725)\r\n    rightFlipper = new RightFlipper(this, 274, 725)\r\n    \r\n    //Static Objects\r\n    /*********************************************************/\r\n    \r\n    leftRampRight = new StaticCustomShape(this, 160, 168, 'leftRampRight', collisionGroupA)\r\n    rightLane = new StaticCustomShape(this, 378, 591, 'rightLane', collisionGroupA)\r\n    leftLane = new StaticCustomShape(this, 97, 591, 'leftLane', collisionGroupA)\r\n    rightTrapCowl = new StaticCustomShape(this, 369, 185, 'rightTrapCowl', collisionGroupA)\r\n    farRightWall = new StaticCustomShape(this, 481, 455, 'farRightWall', collisionGroupA)\r\n    leftRampLeft = new StaticCustomShape(this, 135, 222, 'leftRampLeft', collisionGroupA)\r\n    rightRampLeft = new StaticCustomShape(this, 282, 112, 'rightRampLeft', collisionGroupA)\r\n    rightWallA = new StaticCustomShape(this, 445, 530, 'rightWallA', collisionGroupA).setScale(1, 1.1)\r\n    rightWallB = new StaticCustomShape(this, 431, 310, 'rightWallB', collisionGroupA)\r\n    killZone = new StaticCustomShape(this, 250, 740, 'killZone', collisionGroupA)\r\n    leftSlingshot = new StaticCustomShape(this, 120, 535, 'leftSlingshot', collisionGroupA)\r\n    rightSlingshot = new StaticCustomShape(this, 355, 535, 'rightSlingshot', collisionGroupA)\r\n    rightRampRight = new StaticCustomShape(this, 342, 137, 'rightRampRight', collisionGroupA)\r\n    leftWall = new StaticCustomShape(this, 40, 488, 'leftWall', collisionGroupA).setScale(1,1.1)\r\n    topLoop = new StaticCustomShape(this, 130, 170, 'topLoop', collisionGroupA)\r\n    leftLoopTop = new StaticCustomShape(this, 125, 110, 'leftLoopTop', collisionGroupA)\r\n    midTargetLeft = new StaticCustomShape(this, 218, 90, 'midTargetLeft', collisionGroupA)\r\n    rightTargets = new StaticCustomShape(this, 398, 392, 'rightTargets', collisionGroupA)\r\n    \r\n    //Setup collision events\r\n    //Change to one <------------\r\n    let canCallA = true\r\n    let canCallB = true\r\n    let canCallC = true\r\n    this.matter.world.on('collisionstart', function(event, bodyA, bodyB){\r\n\r\n        if (bodyB.label === 'Ball' && bodyA.label === 'Slingshot'){\r\n            slingshotA.fire()\r\n            slingshotB.fire()\r\n        }\r\n        //Change to one <------------------\r\n        if ( bodyA.label === \"bumperA\" && bodyB.label  === 'Ball' && canCallA) {\r\n            canCallA = false\r\n            bumperA.fire(bodyB.position, \"bumperA\")\r\n            setTimeout(()=>{\r\n                canCallA = true\r\n            }, 100)\r\n        }\r\n        if ( bodyA.label === \"bumperB\" && bodyB.label  === 'Ball' && canCallB) {\r\n            canCallB = false\r\n            bumperB.fire(bodyB.position, \"bumperB\")\r\n            setTimeout(()=>{\r\n                canCallB = true\r\n            }, 100)\r\n        }\r\n        if ( bodyA.label === \"bumperC\" && bodyB.label  === 'Ball' && canCallC) {\r\n            canCallC = false\r\n            bumperC.fire(bodyB.position, \"bumperC\")\r\n            setTimeout(()=>{\r\n                canCallC = true\r\n            }, 100)\r\n        }\r\n    })\r\n}\r\n\r\nfunction update() {\r\n    \r\n    leftFlipper.hold()\r\n    rightFlipper.hold()\r\n    \r\n    if(Phaser.Input.Keyboard.JustDown(spacebar)){\r\n        ball = new Ball(this, 416, 773, 'ball') \r\n        ball.launch()\r\n    }\r\n    \r\n    if (Phaser.Input.Keyboard.JustDown(left)){\r\n        leftFlipper.flip() \r\n        leftFlipper.isFlipping = true\r\n    } \r\n    \r\n    if (Phaser.Input.Keyboard.JustUp(left)){\r\n        leftFlipper.isFlipping = false\r\n    } \r\n\r\n    if (Phaser.Input.Keyboard.JustDown(right)){\r\n        rightFlipper.flip()\r\n        rightFlipper.isFlipping = true\r\n    } \r\n\r\n    if (Phaser.Input.Keyboard.JustUp(right)){\r\n        rightFlipper.isFlipping = false\r\n    } \r\n\r\n\r\n    \r\n\r\n\r\n} "],"file":"game.js"}