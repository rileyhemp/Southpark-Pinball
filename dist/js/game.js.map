{"version":3,"sources":["game.js"],"names":["Ball","scene","x","y","texture","matter","world","body","friction","frictionAir","console","log","frictionStatic","sys","displayList","add","setCollisionCategory","collisionGroupA","density","Phaser","Physics","Matter","Image","StaticObject","name","setExistingBody","Bodies","fromVertices","PATHS","setStatic","config","type","AUTO","width","height","physics","default","debug","gravity","preload","create","update","balls","spacebar","left","right","ball","bounds","leftFlipper","rightFlipper","dome","center","wallRight","collisionGroupB","test","game","Game","load","image","nextCategory","LeftFlipper","RightFlipper","setBounds","input","keyboard","addKey","Input","Keyboard","KeyCodes","LEFT","RIGHT","SPACE","on","pointer","blueprint","setScale","hold","JustDown","flip","isFlipping","JustUp"],"mappings":"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","sourcesContent":["class Ball extends Phaser.Physics.Matter.Image {\r\n    constructor(scene, x, y, texture) {\r\n        super(scene.matter.world, x, y, texture)\r\n        super.setScale(.17)\r\n        super.setCircle(8.657)\r\n        this.body.friction = 0\r\n        this.body.frictionAir = 0\r\n        console.log(this.body.frictionStatic)\r\n        scene.sys.displayList.add(this)\r\n        this.setCollisionCategory(collisionGroupA)\r\n        this.body.density = 0.75\r\n    }\r\n    launch(){\r\n        super.setVelocityY(-30)\r\n    }\r\n}\r\n\r\nclass StaticObject extends Phaser.Physics.Matter.Image {\r\n    constructor(scene, x, y, name){\r\n        super(scene.matter.world, 0, 0, name)\r\n        scene.sys.displayList.add(this)\r\n        this.scene = scene\r\n        this.setExistingBody(Bodies.fromVertices(0,0, PATHS[`${name}`]))\r\n        this.setStatic(true)\r\n        this.x = x\r\n        this.y = y\r\n    }\r\n}\r\n\r\nconst config = {\r\n    type: Phaser.AUTO,\r\n    width: 440,\r\n    height: 875,\r\n    physics: {\r\n        default: 'matter',\r\n        matter: {\r\n            debug: true,\r\n            gravity: {\r\n                x: 0,\r\n                y: 0.35\r\n            }\r\n        }\r\n    },\r\n    scene: {\r\n        preload: preload, \r\n        create: create,\r\n        update: update \r\n    }\r\n}\r\n\r\nconst Bodies = Phaser.Physics.Matter.Matter.Bodies\r\n\r\nlet \r\n    balls, \r\n    spacebar, \r\n    left,\r\n    right,\r\n    ball, \r\n    bounds, \r\n    leftFlipper, \r\n    rightFlipper, \r\n    dome,\r\n    center,\r\n    wallRight,\r\n    collisionGroupA,\r\n    collisionGroupB,\r\n    test\r\n    \r\nconst game = new Phaser.Game(config)\r\n\r\nfunction preload() {\r\n    this.load.image('ball', 'dist/assets/sprites/wizball.png')\r\n    this.load.image('rectA', 'dist/assets/solids/grey-solid.svg')\r\n    this.load.image('schematic', 'dist/assets/schematic.jpg')\r\n    this.load.image('blueprint', 'dist/assets/blueprint.png')\r\n}\r\n\r\n//***************************************************************************************//\r\n\r\nfunction create() {\r\n\r\n    //Define collision groups\r\n    collisionGroupA = this.matter.world.nextCategory()\r\n    collisionGroupB = this.matter.world.nextCategory()\r\n\r\n    //Add the flippers\r\n    leftFlipper = new LeftFlipper(this, 150, 710)\r\n    rightFlipper = new RightFlipper(this, 290, 710)\r\n\r\n    test = this\r\n\r\n    //Set world bounds\r\n    bounds = this.matter.world.setBounds(0, 0, 440, 800, 30, true, true, true, true)\r\n\r\n    //Define inputs\r\n    left = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.LEFT)\r\n    right = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.RIGHT)\r\n    spacebar = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE)\r\n\r\n    this.input.on('pointerdown', function(pointer){\r\n        ball = new Ball(this, pointer.x, pointer.y, 'ball') \r\n    }, this)\r\n    \r\n    //Layout overlay\r\n    let blueprint = this.add.image(220,437.5, 'blueprint')\r\n    blueprint.setScale(0.9)\r\n\r\n   \r\n    //Create the ball\r\n\r\n    ball = new Ball(this, 100, 625, 'ball') \r\n    \r\n    //Place static objects\r\n\r\n    dome = new StaticObject(this, 250, 250, 'dome')\r\n    center = new StaticObject(this, 197, 275, 'center')\r\n    wallRight = new StaticObject(this, 370, 315, 'wallRight')\r\n\r\n    \r\n}\r\n\r\nfunction update() {\r\n\r\n    leftFlipper.hold()\r\n    rightFlipper.hold()\r\n    \r\n    if(Phaser.Input.Keyboard.JustDown(spacebar)){\r\n        ball = new Ball(this, 130, 625, 'ball') \r\n    }\r\n\r\n    if (Phaser.Input.Keyboard.JustDown(left)){\r\n        leftFlipper.flip() \r\n        leftFlipper.isFlipping = true\r\n    } \r\n    \r\n    if (Phaser.Input.Keyboard.JustUp(left)){\r\n        leftFlipper.isFlipping = false\r\n    } \r\n\r\n    if (Phaser.Input.Keyboard.JustDown(right)){\r\n        rightFlipper.flip()\r\n        rightFlipper.isFlipping = true\r\n    } \r\n\r\n    if (Phaser.Input.Keyboard.JustUp(right)){\r\n        rightFlipper.isFlipping = false\r\n    } \r\n    \r\n\r\n\r\n} \r\n\r\n\r\n\r\n\r\n\r\n///The base of the flipper is a 15mm diameter circle, sloping down to a 5mm diameter circle at the tip. Overall length is 71mm, "],"file":"game.js"}