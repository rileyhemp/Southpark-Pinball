{"version":3,"sources":["game.js"],"names":["config","type","Phaser","CANVAS","width","height","physics","default","matter","debug","gravity","x","y","game","balls","scene","preload","create","update","table","ramps","characters","leftFlipper","rightFlipper","sideFlipper","bumperA","bumperB","bumperC","leftSlingshot","rightSlingshot","launcher","ball","spacebar","left","right","down","collisionGroupA","collisionGroupB","collisionGroupC","collisionGroupD","collisionGroupE","sensorGroupA","sensorGroupB","cartmanLeft","cartmanCenter","cartmanRight","cartmanBlock","rampsCartmanActive","objectives","gameActive","backgroundMusic","eventMusic","currentBall","multiplier","score","Bodies","Physics","Matter","Game","input","on","pointer","console","log","Ball","setVelocityY","world","nextCategory","keyboard","addKey","Input","Keyboard","KeyCodes","LEFT","DOWN","RIGHT","SPACE","add","image","setDepth","LeftFlipper","RightFlipper","SideFlipper","Bumper","Slingshot","Launcher","createStaticObjects","initCollisionListeners","JustDown","flip","JustUp","release","charge","fire","length","getNewBall","startEvent","newGame","sound","endGame","pause","playAudioSprite","document","querySelector","textContent","addScore","name","amount","total","registerHit","bodyA","bodyB","playRandomSound","volume","render","visible","isDestroyed","destroy","setTimeout","setVelocityX","sprite","delay","spritemap","Object","keys","cache","json","get","Math","floor","random"],"mappings":"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","sourcesContent":["/* \n\nSouth Park Pinball v1.0\n\nBuilt by Riley Hemphill @ The Creative Circus, 2019\n\n*/\n\n//Initial config\nconst config = \n{\n    type: Phaser.CANVAS,\n    width: 520,\n    height: 800,\n    physics: {\n        default: 'matter',\n        matter: {\n            debug: true,\n            gravity: \n            {\n                x: 0,\n                y: .9\n            }\n        }\n    },\n    game: \n    {\n        balls: 3\n    },\n    scene: \n    {\n        preload: preload, \n        create: create,\n        update: update \n    }\n}\n\n//Declare global variables \n\nlet table, ramps, characters, \nleftFlipper, rightFlipper, sideFlipper,\nbumperA, bumperB, bumperC,\nleftSlingshot, rightSlingshot,\nlauncher, ball,\nspacebar, left, right, down,\ncollisionGroupA, collisionGroupB, collisionGroupC, collisionGroupD, collisionGroupE,\nsensorGroupA, sensorGroupB,\ncartmanLeft, cartmanCenter, cartmanRight, cartmanBlock, rampsCartmanActive,\nobjectives, \ngameActive,\nbackgroundMusic, eventMusic\n\nlet balls = []\nlet currentBall = 1\nlet multiplier = 1\nlet score = 0\n\nconst Bodies = Phaser.Physics.Matter.Matter.Bodies\nconst game = new Phaser.Game(config)\n\nfunction create() {\n\n    //Development multitool\n    this.input.on('pointerdown', function(pointer)\n    {\n        //Log the mouse coordinates\n        console.log(pointer.x+\",\", pointer.y)\n\n        //Make a ball where you click\n        ball = new Ball(this, pointer.x, pointer.y, 'ball') \n\n        //Set velocity for testing ramps etc\n        ball.setVelocityY(-10)\n\n        //Start a new game\n        // newGame(this)\n    }, this)\n\n    //Setup collision groups \n    sensorGroupA = this.matter.world.nextCategory() // Ground level sensors\n    sensorGroupB = this.matter.world.nextCategory() // Upper level sensors\n    collisionGroupA = this.matter.world.nextCategory() // Ball\n    collisionGroupB = this.matter.world.nextCategory() // Walls\n    collisionGroupC = this.matter.world.nextCategory() \n    collisionGroupD = this.matter.world.nextCategory()\n    collisionGroupE = this.matter.world.nextCategory()\n\n    //Setup controls\n    left = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.LEFT)\n    down = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.DOWN)\n    right = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.RIGHT)\n    spacebar = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE)\n    \n    //Create object to store hit counts for each objective\n    objectives = \n    {\n        'cartman-left': 0,\n        'cartman-center': 0,\n        'cartman-right': 0,\n        'cartman-himself': 0,\n        'loop-hit': 0\n    }\n\n    //Textures\n    table = this.add.image(260, 400, 'table').setDepth(1)\n    ramps = this.add.image(260, 400, 'ramps').setDepth(2)\n    rampsCartmanActive =  this.add.image(260, 400, 'ramps_cartman_active').setDepth(0)\n    characters = this.add.image(260, 400, 'characters').setDepth(4)\n    \n    //Flippers\n    leftFlipper = new LeftFlipper(this, 150, 632) \n    rightFlipper = new RightFlipper(this, 327, 632)\n    sideFlipper = new SideFlipper(this, 407, 313)\n\n    //Pop bumpers\n    bumperA = new Bumper(this, 308, 125, 'bumper')\n    bumperB = new Bumper(this, 365, 135, 'bumper')\n    bumperC = new Bumper(this, 335, 190, 'bumper')\n\n    //Slingshots\n    leftSlingshot = new Slingshot(this, 121, 490, 152, 574, 177, 510, 5, 'leftSlingshot')\n    rightSlingshot = new Slingshot(this, 353, 491, 324, 574, 298, 510, 5, 'rightSlingshot')\n\n    //Launcher\n    launcher = new Launcher(this, 455, 755)\n    \n    //Static Objects\n    /*********************************************************/\n    //See static-objects.js\n\n    createStaticObjects(this)\n\n    //Collision events\n    /*********************************************************/\n    //See collisions.js\n\n    initCollisionListeners(this) \n}\n\n//Update\n/*********************************************************/\n\nfunction update() {\n    \n    if (Phaser.Input.Keyboard.JustDown(left))\n    {\n        leftFlipper.flip() \n    } \n    \n    if (Phaser.Input.Keyboard.JustUp(left))\n    {\n        leftFlipper.release()\n    } \n\n    if (Phaser.Input.Keyboard.JustDown(right))\n    {\n        rightFlipper.flip()\n        sideFlipper.flip()\n    } \n\n    if (Phaser.Input.Keyboard.JustUp(right))\n    {\n        rightFlipper.release()\n        sideFlipper.release()\n    } \n\n    if (Phaser.Input.Keyboard.JustDown(down))\n    {\n        launcher.charge()\n    }\n\n    if (Phaser.Input.Keyboard.JustUp(down))\n    {\n        launcher.fire()\n    }\n\n    //Round is over when no balls are in play\n    if (balls.length === 0)\n    {\n        //Get a new ball if there are any remaining. Otherwise end the game.\n        if ( currentBall <= config.game.balls && gameActive)\n        {\n            getNewBall(this)\n        }\n        else\n        { \n            gameActive = false\n        }\n    }\n\n    //Events\n    if (objectives['cartman-left'] && objectives['cartman-center'] && objectives['cartman-right'])\n    {\n        startEvent('cartman', this)\n    }\n} \n\n//Functions \n/*********************************************************/\n\nfunction newGame(scene)\n{\n    gameActive = true\n    score = 0\n    multiplier = 1\n    backgroundMusic = scene.sound.add('background_music')\n    getNewBall(scene)\n}\n\nfunction endGame()\n{\n    console.log('game over')\n    score = 0\n}\n\nfunction getNewBall(scene)\n{\n    backgroundMusic.pause()\n    ball = new Ball(scene, 455, 689, 'ball') \n    scene.sound.playAudioSprite('sound_effects', \"rollover\")\n        currentBall++\n        document.querySelector('.balls-remaining').textContent = currentBall\n}\n\nfunction addScore(name)\n{\n    let amount\n    switch(name)\n    {\n        case \"bumper\" : amount = 1000 \n            break\n        case \"butters\" : amount = 10000\n            break\n        case \"ramp\" : amount = 5000\n            break\n        case \"cartman-win\" : amount = 100000\n            break\n        case \"randy\" : amount = 2500\n            break\n        case \"loop\" : amount = 10000\n            break\n    }\n    let total = amount * multiplier\n    score += total\n    document.querySelector('.score').textContent = score\n}\n\n    //Hit registration\n    /*********************************************************/\n\nfunction registerHit(scene, bodyA, bodyB) {\n    switch(bodyA)\n    {\n        case \"butters\" :\n            playRandomSound('butters_hit', scene)  \n            scene.sound.playAudioSprite('sound_effects', 'hole_enter')\n            scene.sound.playAudioSprite('sound_effects', 'thunder', {volume: 0.5})\n            bodyB.render.visible = false\n            bodyB.isDestroyed = true\n            bodyB.destroy()\n            //Holds the ball for 3 seconds and shoots back to left flipper\n            setTimeout(()=>\n            {\n                ball = new Ball(scene, 340, 259, 'ball') \n                ball.setVelocityY(3.3)\n                ball.setVelocityX(-3.3)\n                scene.sound.playAudioSprite('sound_effects', 'ExitSandman')\n                addScore('butters')\n            }, 3000)     \n            break     \n\n        case \"cartman-hit\" :\n            if (!objectives[bodyB] && bodyB != 'cartman-himself')\n            {\n                objectives[bodyB]++\n                scene.sound.playAudioSprite('sound_effects', 'target')\n            } \n            break          \n        \n        case \"cartman-himself\" :\n            objectives[bodyB]++\n            playRandomSound('cartman_damage', scene)\n            scene.sound.playAudioSprite('sound_effects', 'rubber_hit_2')\n            break\n\n        case \"rightTargets\" :\n            console.log('asdad')\n            playRandomSound('randy_hit', scene)\n            scene.sound.playAudioSprite('sound_effects', 'rubber_hit_1')    \n            addScore('randy')\n            break\n        \n        case \"loop-hit\" :\n            playRandomSound('loop_hit', scene)\n            addScore('loop')\n            objectives[bodyA]++\n            console.log(objectives)\n    }\n}\n\nfunction playRandomSound(sprite, scene, delay)\n{\n    let spritemap = Object.keys(scene.cache.json.get(sprite).spritemap)\n    setTimeout(()=>{\n        scene.sound.playAudioSprite(sprite, spritemap[Math.floor(Math.random()*spritemap.length)])\n    }, delay)\n}\n\n\n"],"file":"game.js"}