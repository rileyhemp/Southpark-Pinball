{"version":3,"sources":["game.js"],"names":["config","type","Phaser","AUTO","width","height","physics","default","matter","debug","scene","preload","create","update","Bodies","Physics","Matter","balls","spacebar","left","right","ball","bounds","leftFlipper","leftBlock","leftPivot","leftFlipperPin","rightFlipper","rightBlock","rightPivot","rightFlipperPin","game","Game","load","image","world","setBounds","setGravity","input","keyboard","addKey","Input","Keyboard","KeyCodes","LEFT","RIGHT","schematic","add","scale","Ball","x","y","texture","sys","displayList","Image","Bumper","Sprite","Flipper","orientation","setScale","rotation","console","log","setFrictionStatic","setMass","setFrictionAir","setBounce","isStatic","scaleX","scaleY","setCircle","setStatic","rectA","rectangle","circleA","circle","mass","circleB","Body","parts","setExistingBody","constraint","stiffness","length","pointA","pointB","rectB","circleC","circleD","JustDown","torque","angle","body","velocity"],"mappings":"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","sourcesContent":["const config = {\r\n    type: Phaser.AUTO,\r\n    width: 440,\r\n    height: 800,\r\n    physics: {\r\n        default: 'matter',\r\n        matter: {\r\n            debug: true\r\n        }\r\n    },\r\n    scene: {\r\n        preload: preload, \r\n        create: create,\r\n        update: update \r\n    }\r\n}\r\n\r\nconst Bodies = Phaser.Physics.Matter.Matter.Bodies\r\n\r\nlet \r\n    balls, \r\n    spacebar, \r\n    left,\r\n    right,\r\n    ball, \r\n    bounds, \r\n    leftFlipper, \r\n    leftBlock, \r\n    leftPivot, \r\n    leftFlipperPin, \r\n    rightFlipper, \r\n    rightBlock, \r\n    rightPivot, \r\n    rightFlipperPin\r\n\r\nconst game = new Phaser.Game(config)\r\n\r\n\r\n\r\nfunction preload() {\r\n    this.load.image('ball', 'dist/assets/sprites/wizball.png')\r\n    this.load.image('rectA', 'dist/assets/solids/grey-solid.svg')\r\n    this.load.image('schematic', 'dist/assets/schematic.jpg')\r\n}\r\n\r\n\r\n//***************************************************************************************//\r\n\r\n\r\nfunction create() {\r\n    bounds = this.matter.world.setBounds(0, 0, 440, 800, 30, true, true, true, true)\r\n    this.matter.world.setGravity(0,1)\r\n\r\n    left = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.LEFT)\r\n    right = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.RIGHT)\r\n    \r\n    let schematic = this.add.image(220,400, 'schematic')\r\n    schematic.scale = 0.8\r\n    \r\n    class Ball extends Phaser.Physics.Matter.Image {\r\n        constructor(scene, x, y, texture) {\r\n            super(scene.matter.world, x, y, texture)\r\n            super.setScale(.17)\r\n            super.setCircle(8.657)\r\n            scene.sys.displayList.add(this)\r\n        }\r\n        launch(){\r\n            super.setVelocityY(-30)\r\n        }\r\n    }\r\n    \r\n    class Bumper extends Phaser.Physics.Matter.Sprite {\r\n        constructor(scene, x, y, texture){\r\n            super(scene.matter.world, x, y, texture)\r\n            super.setStatic(true)\r\n            scene.sys.displayList.add(this)\r\n        }\r\n    }\r\n\r\n    class Flipper extends Phaser.Physics.Matter.Image {\r\n        constructor(scene, x, y, texture, orientation) {\r\n            super(scene.matter.world, x, y, texture)\r\n           // super.setStatic(true)\r\n            super.setFriction(.2)\r\n            scene.sys.displayList.add(this)\r\n            this.setScale(0.15, .15)\r\n            this.rotation = 0.55\r\n            console.log(this.width)\r\n        }\r\n    }\r\n    \r\n    //Create the ball\r\n    ball = new Ball(this, 152, 625, 'ball') \r\n    ball.setFrictionStatic(0.02)\r\n    ball.setMass(.25)\r\n    ball.setFrictionAir(0)\r\n    ball.setBounce(0.25)\r\n\r\n\r\n\r\n    //Left flipper mechanism\r\n    \r\n    //Create bottom block to stop flipper from going too low\r\n    leftBlock = this.matter.add.image(170,727 ,'rectA', this, {\r\n        isStatic: true\r\n    })\r\n    leftBlock.scaleX = .1,\r\n    leftBlock.scaleY = .1,\r\n    leftBlock.rotation = .55\r\n    \r\n    //Create a pivot point to attach the constraint to\r\n    leftPivot = this.matter.add.image(145, 695, null, this)\r\n    leftPivot.setScale(.2)\r\n    leftPivot.setCircle(1)\r\n    leftPivot.setStatic(true)\r\n\r\n    //Create the left flipper components \r\n    let rectA = Bodies.rectangle(170 , 699, 70, 16)\r\n    let circleA = Bodies.circle(150, 699, 5)\r\n    circleA.mass = 2\r\n    let circleB = Bodies.circle(188, 695, 4)\r\n\r\n    \r\n    //Create left flipper compound body\r\n    leftFlipper = Phaser.Physics.Matter.Matter.Body.create({\r\n        parts: [ circleA, circleB, rectA  ]\r\n    });\r\n    this.matter.add.image(150, 0, null).setScale(0.2).setExistingBody(leftFlipper)\r\n\r\n    //Add the pivot constraint\r\n    leftFlipperPin = this.matter.add.constraint(leftPivot, leftFlipper)    \r\n    leftFlipperPin.stiffness = .9\r\n    leftFlipperPin.length = 0\r\n    leftFlipperPin.pointA = {\r\n        x: 5, \r\n        y: 5\r\n    }\r\n    leftFlipperPin.pointB = {\r\n        x: -15, \r\n        y: 0\r\n    }\r\n\r\n    //Right flipper mechanism\r\n    \r\n    //Create bottom block to stop flipper from going too low\r\n    rightBlock = this.matter.add.image(260,727 ,'rectA', this, {\r\n        isStatic: true\r\n    })\r\n    rightBlock.scaleX = .1,\r\n    rightBlock.scaleY = .1,\r\n    rightBlock.rotation = -.55\r\n    //345 286\r\n    //Create a pivot point to attach the flipper to\r\n    rightPivot = this.matter.add.image(286, 695, null, this)\r\n    rightPivot.setScale(.2)\r\n    rightPivot.setCircle(1)\r\n    rightPivot.setStatic(true)\r\n\r\n    //Create the right flipper components \r\n    let rectB = Bodies.rectangle(250 , 699, 70, 16)\r\n    let circleC = Bodies.circle(270, 699, 5)\r\n    circleC.mass = 2\r\n    let circleD = Bodies.circle(229, 695, 4)\r\n\r\n    \r\n    //Create right flipper compound body\r\n    rightFlipper = Phaser.Physics.Matter.Matter.Body.create({\r\n        parts: [ circleC, circleD, rectB  ]\r\n    });\r\n    this.matter.add.image(350, 0, null).setScale(0.2).setExistingBody(rightFlipper)\r\n\r\n    //Add the pivot constraint\r\n    rightFlipperPin = this.matter.add.constraint(rightPivot, rightFlipper)    \r\n    rightFlipperPin.stiffness = .9\r\n    rightFlipperPin.length = 0\r\n    rightFlipperPin.pointA = {\r\n        x: -5, \r\n        y: 5\r\n    }\r\n    rightFlipperPin.pointB = {\r\n        x: 15, \r\n        y: 0\r\n    }\r\n\r\n    //Increase mass of the flippers\r\n    leftFlipper.mass = 50\r\n\r\n    //rightFlipper.isStatic = true\r\n\r\n}\r\n\r\nfunction update() {\r\n    \r\n    //Input control of left flipper\r\n    if (Phaser.Input.Keyboard.JustDown(left)){\r\n        leftFlipper.torque = -3\r\n    } \r\n    //Apply torque in opposite direction after left flipper reaches max angle\r\n    if(leftFlipper.angle <= -.5 ){\r\n        leftFlipper.torque = 1\r\n    } \r\n\r\n    //Input control of right flipper\r\n    if (Phaser.Input.Keyboard.JustDown(right)){\r\n        rightFlipper.torque = 3\r\n    } \r\n    //Apply torque in opposite direction after right flipper reaches max angle\r\n    if(rightFlipper.angle >= .5 ){\r\n         rightFlipper.torque = -1\r\n     } \r\n    \r\n    //This function lowers the gravity when the ball is going up and raises it on the way down.\r\n    if(ball.body.velocity.y < 0){\r\n        this.matter.world.setGravity(0,0.2)\r\n    } else {\r\n        this.matter.world.setGravity(0,.35)\r\n    }\r\n\r\n} \r\n\r\n\r\n\r\n\r\n\r\n///The base of the flipper is a 15mm diameter circle, sloping down to a 5mm diameter circle at the tip. Overall length is 71mm, "],"file":"game.js"}