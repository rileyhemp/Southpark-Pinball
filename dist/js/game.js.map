{"version":3,"sources":["game.js"],"names":["config","type","Phaser","CANVAS","width","height","physics","default","matter","debug","gravity","x","y","scene","preload","create","update","Bodies","Physics","Matter","balls","spacebar","left","right","ball","bounds","leftFlipper","rightFlipper","testShape","bumperA","bumperB","bumperC","playfield","plastics","collisionGroupA","collisionGroupB","collisionGroupC","collisionGroupD","collisionGroupE","sensors","isOnRamp","flipperCollisionGroup","test","tween","game","Game","load","image","world","nextCategory","setBounds","input","keyboard","addKey","Input","Keyboard","KeyCodes","LEFT","RIGHT","SPACE","on","pointer","Ball","setCollidesWith","blueprint","add","LeftFlipper","RightFlipper","Bumper","StaticCustomShape","StaticShape","Sensor","event","bodyA","bodyB","label","isSensor","console","log","slingshotA","fire","slingshotB","canCallA","canCallB","canCallC","position","setTimeout","hold","JustDown","launch","flip","isFlipping","JustUp","release","length","forEach","collisionFilter","mask"],"mappings":"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","sourcesContent":["\r\n//Initial config\r\n\r\nconst config = {\r\n    type: Phaser.CANVAS,\r\n    width: 520,\r\n    height: 800,\r\n    physics: {\r\n        default: 'matter',\r\n        matter: {\r\n            debug: true,\r\n            gravity: {\r\n                x: 0,\r\n                y: 0.35\r\n            }\r\n        }\r\n    },\r\n    scene: {\r\n        preload: preload, \r\n        create: create,\r\n        update: update \r\n    }\r\n}\r\n\r\n//Declare global variables \r\n\r\nconst Bodies = Phaser.Physics.Matter.Matter.Bodies\r\n\r\nlet balls = []\r\n\r\nlet \r\n    spacebar, \r\n    left,\r\n    right,\r\n    ball, \r\n    bounds, \r\n    leftFlipper, \r\n    rightFlipper, \r\n    testShape,\r\n    bumperA, bumperB, bumperC,\r\n\r\n    //Background\r\n    playfield,\r\n    plastics,\r\n\r\n    //Utilities\r\n    collisionGroupA,\r\n    collisionGroupB,\r\n    collisionGroupC,\r\n    collisionGroupD,\r\n    collisionGroupE,\r\n    sensors,\r\n    isOnRamp,\r\n    flipperCollisionGroup,\r\n    test,\r\n    tween\r\n    \r\nconst game = new Phaser.Game(config)\r\n\r\n//Load assets\r\n\r\nfunction preload() {\r\n    this.load.image('ball', 'dist/assets/sprites/wizball.png')\r\n    this.load.image('rectA', 'dist/assets/solids/grey-solid.svg')\r\n    this.load.image('schematic', 'dist/assets/schematic.jpg')\r\n    this.load.image('blueprint', 'dist/assets/blueprint.png')\r\n    this.load.image('plastics', 'dist/assets/Plasticos.png')\r\n    this.load.image('playfield', 'dist/assets/Playfield.png')\r\n}\r\n\r\n//Initialize table\r\n\r\nfunction create() {\r\n\r\n    //Set some things up, inputs, collisiongroups, etc. \r\n    sensors = this.matter.world.nextCategory() // Sensors collision group\r\n    collisionGroupA = this.matter.world.nextCategory() // Ball\r\n    collisionGroupB = this.matter.world.nextCategory() // Walls\r\n    collisionGroupC = this.matter.world.nextCategory()\r\n    collisionGroupD = this.matter.world.nextCategory()\r\n    collisionGroupE = this.matter.world.nextCategory()\r\n    flipperCollisionGroup = this.matter.world.nextCategory()\r\n    isOnRamp = false\r\n\r\n    test = this\r\n    bounds = this.matter.world.setBounds(0, 0, 520, 800, 30, true, true, true, true)\r\n    left = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.LEFT)\r\n    right = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.RIGHT)\r\n    spacebar = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE)\r\n    \r\n    //Add a ball where you click\r\n    this.input.on('pointerdown', function(pointer){\r\n        ball = new Ball(this, pointer.x, pointer.y, 'ball') \r\n        //ball.setCollisionCategory(sensors)\r\n        ball.setCollidesWith([collisionGroupC, sensors])\r\n    }, this)\r\n\r\n    \r\n    //Layout overlay\r\n    let blueprint = this.add.image(260,400, 'blueprint')\r\n    \r\n    // playfield = this.add.image(220, 445, 'playfield')\r\n    // playfield.setScale(0.21)\r\n    // playfield.setDepth(1)\r\n    \r\n    // plastics = this.add.image(220, 445, 'plastics')\r\n    // plastics.setScale(0.21)\r\n    // plastics.setDepth(1)\r\n    \r\n    //Flippers\r\n    leftFlipper = new LeftFlipper(this, 147, 634) \r\n    rightFlipper = new RightFlipper(this, 330, 634)\r\n\r\n    //Pop bumpers\r\n    bumperA = new Bumper(this, 305, 100, 'bumperA')\r\n    bumperB = new Bumper(this, 392, 95, 'bumperB')\r\n    bumperC = new Bumper(this, 360, 149, 'bumperC')\r\n    \r\n    //Static Objects\r\n    /*********************************************************/\r\n    //StaticCustomShape(scene, x, y, path, collision group)\r\n    //StaticShape(scene, type, x, y, width, height, rotation, collision group)\r\n\r\n    //First level (collision group B)\r\n    // new StaticCustomShape(this, 160, 168, 'leftRampRight', collisionGroupB)\r\n    // new StaticCustomShape(this, 378, 591, 'rightLane', collisionGroupB)\r\n    // new StaticCustomShape(this, 97, 591, 'leftLane', collisionGroupB)\r\n    // new StaticCustomShape(this, 369, 185, 'rightTrapCowl', collisionGroupB)\r\n    // new StaticCustomShape(this, 481, 455, 'farRightWall', collisionGroupB)\r\n    // new StaticCustomShape(this, 135, 222, 'leftRampLeft', collisionGroupB)\r\n    // new StaticCustomShape(this, 282, 112, 'rightRampLeft', collisionGroupB)\r\n    // new StaticCustomShape(this, 445, 530, 'rightWallA', collisionGroupB).setScale(1, 1.1)\r\n    // new StaticCustomShape(this, 431, 310, 'rightWallB', collisionGroupB)\r\n    // new StaticCustomShape(this, 250, 740, 'killZone', collisionGroupB)\r\n    // new StaticCustomShape(this, 120, 535, 'leftSlingshot', collisionGroupB)\r\n    // new StaticCustomShape(this, 355, 535, 'rightSlingshot', collisionGroupB)\r\n    // new StaticCustomShape(this, 342, 140, 'rightRampRight', collisionGroupB).setBounce(1)\r\n    // new StaticCustomShape(this, 40, 488, 'leftWall', collisionGroupB).setScale(1,1.1)\r\n    // new StaticCustomShape(this, 130, 170, 'topLoop', collisionGroupB)\r\n    // new StaticCustomShape(this, 125, 110, 'leftLoopTop', collisionGroupB)\r\n    // new StaticCustomShape(this, 218, 90, 'midTargetLeft', collisionGroupB)\r\n    // new StaticCustomShape(this, 398, 392, 'rightTargets', collisionGroupB) \r\n    // new StaticShape(this, 'rectangle', 260, 197, 75, 15, .02, 3) \r\n    // new StaticShape(this, 'rectangle', 156, 110, 90, 15, 1.45, 3) \r\n\r\n    //Second level (collision group C)\r\n    new StaticCustomShape(this, 24, 491, 'leftRampBottomLeft', collisionGroupC)\r\n    new StaticCustomShape(this, 113, 437, 'leftRampBottomRight', collisionGroupC)\r\n    new StaticCustomShape(this, 349, 83, 'rightRampBottom', collisionGroupC) //change to big circle\r\n    new StaticCustomShape(this, 354, 2, 'rightRampTop', collisionGroupC)\r\n    new StaticCustomShape(this, 181, 110, 'rightRampDivider', collisionGroupC)\r\n    new StaticCustomShape(this, 115, 7, 'leftRampTop', collisionGroupC)\r\n    new StaticCustomShape(this, 128, 83, 'leftRampBottom', collisionGroupC)\r\n    new StaticCustomShape(this, 126, 25, 'leftRampDiverter', collisionGroupC)\r\n    \r\n    //Small round rubbers\r\n    new StaticShape(this, 'circle', 403, 482, 5, null, null, 3) \r\n    new StaticShape(this, 'circle', 72, 482, 5, null, null, 3) \r\n    new StaticShape(this, 'circle', 298, 73, 5, null, null, 3) \r\n    new StaticShape(this, 'circle', 405, 121, 5, null, null, 3)  \r\n\r\n    //Medium round rubbers\r\n    new StaticShape(this, 'circle', 236, 698, 8, null, null, 3) // Center post\r\n    new StaticShape(this, 'circle', 88, 421, 8, null, null, 3) \r\n    new StaticShape(this, 'circle', 140, 571, 8, null, null, 3) //Slingshot corners\r\n    new StaticShape(this, 'circle', 365, 487, 8, null, null, 3) // \r\n    new StaticShape(this, 'circle', 331, 570, 8, null, null, 3) // \r\n    new StaticShape(this, 'circle', 108, 487, 8, null, null, 3) // \r\n    new StaticShape(this, 'circle', 291, 38, 8, null, null, 3)//Top tri-lane\r\n    new StaticShape(this, 'circle', 325, 39, 8, null, null, 3)//Top tri-lane\r\n    new StaticShape(this, 'circle', 359, 37, 8, null, null, 3)//Top tri-lane\r\n    new StaticShape(this, 'circle', 392, 37, 8, null, null, 3)//Top tri-lane\r\n    new StaticShape(this, 'circle', 292, 59, 8, null, null, 3)//Top tri-lane\r\n    new StaticShape(this, 'circle', 326, 59, 8, null, null, 3)//Top tri-lane\r\n    new StaticShape(this, 'circle', 360, 58, 8, null, null, 3)//Top tri-lane\r\n    new StaticShape(this, 'circle', 394, 58, 8, null, null, 3)//Top tri-lane\r\n\r\n    //Sensors \r\n\r\n    //Ramp on / off sensors\r\n    new Sensor(this, 126, 170, 'ramp', 1, 'leftRampOn')\r\n    new Sensor(this, 187, 146, 'ramp', 1, 'centerRampOn')\r\n    new Sensor(this, 20, 700, 'ramp', 2, 'leftRampOff')  //90, 508,\r\n\r\n    //Collision events\r\n    /*********************************************************/\r\n\r\n\r\n    this.matter.world.on('collisionstart', function(event, bodyA, bodyB){\r\n\r\n        //Sensors\r\n        if (bodyB.label === 'Ball' && bodyA.isSensor) {\r\n            if (bodyA.type === 'ramp') {\r\n                if (!isOnRamp) {\r\n                    isOnRamp = true\r\n                    console.log('fizz')\r\n                    // bodyB.collisionFilter.mask = 18\r\n                } else if (isOnRamp){\r\n                    isOnRamp = false\r\n                    console.log('buzz')\r\n                    // bodyB.collisionFilter.mask = 14\r\n                }\r\n                console.log(isOnRamp)\r\n            }\r\n        }\r\n        \r\n        //Slingshots\r\n        if (bodyB.label === 'Ball' && bodyA.label === 'Slingshot'){\r\n            slingshotA.fire()\r\n            slingshotB.fire()\r\n        }\r\n\r\n        //Pop bumpers\r\n        let canCallA = true\r\n        let canCallB = true\r\n        let canCallC = true\r\n        if ( bodyA.label === \"bumperA\" && bodyB.label  === 'Ball' && canCallA) {\r\n            canCallA = false\r\n            bumperA.fire(bodyB.position, \"bumperA\")\r\n            setTimeout(()=>{\r\n                canCallA = true\r\n            }, 100)\r\n        }\r\n        if ( bodyA.label === \"bumperB\" && bodyB.label  === 'Ball' && canCallB) {\r\n            canCallB = false\r\n            bumperB.fire(bodyB.position, \"bumperB\")\r\n            setTimeout(()=>{\r\n                canCallB = true\r\n            }, 100)\r\n        }\r\n        if ( bodyA.label === \"bumperC\" && bodyB.label  === 'Ball' && canCallC) {\r\n            canCallC = false\r\n            bumperC.fire(bodyB.position, \"bumperC\")\r\n            setTimeout(()=>{\r\n                canCallC = true\r\n            }, 100)\r\n        }\r\n    })\r\n}\r\n\r\nfunction update() {\r\n    \r\n    leftFlipper.hold()\r\n    rightFlipper.hold()\r\n    \r\n    if(Phaser.Input.Keyboard.JustDown(spacebar)){\r\n        ball = new Ball(this, 416, 773, 'ball') \r\n        ball.launch()\r\n    }\r\n    \r\n    if (Phaser.Input.Keyboard.JustDown(left)){\r\n        leftFlipper.flip() \r\n        leftFlipper.isFlipping = true\r\n    } \r\n    \r\n    if (Phaser.Input.Keyboard.JustUp(left)){\r\n        leftFlipper.isFlipping = false\r\n        leftFlipper.release()\r\n    } \r\n\r\n    if (Phaser.Input.Keyboard.JustDown(right)){\r\n        rightFlipper.flip()\r\n        rightFlipper.isFlipping = true\r\n    } \r\n\r\n    if (Phaser.Input.Keyboard.JustUp(right)){\r\n        rightFlipper.isFlipping = false\r\n        rightFlipper.release()\r\n    } \r\n\r\n    if (balls.length && !isOnRamp){\r\n        balls.forEach(ball => {\r\n            ball.collisionFilter.mask = 14\r\n        })\r\n    } else if (balls.length && isOnRamp){\r\n        balls.forEach(ball => {\r\n            ball.collisionFilter.mask = 18\r\n        })\r\n    }\r\n\r\n\r\n    \r\n\r\n\r\n} "],"file":"game.js"}