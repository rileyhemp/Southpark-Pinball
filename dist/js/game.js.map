{"version":3,"sources":["game.js"],"names":["Ball","scene","x","y","texture","matter","world","body","friction","frictionAir","console","log","frictionStatic","sys","displayList","add","setCollisionCategory","collisionGroupA","density","Phaser","Physics","Matter","Image","StaticShape","name","StaticCustomShape","setExistingBody","Bodies","fromVertices","PATHS","setStatic","Peg","setCircle","config","type","AUTO","width","height","physics","default","debug","gravity","preload","create","update","balls","spacebar","left","right","ball","bounds","leftFlipper","rightFlipper","dome","bottomFrame","center","wallRight","wallRightInner","chuteLeft","chuteRight","bumperLeft","bumperRight","ballStashInner","ballStashOuter","pillA","pillB","pillC","pillD","pegA","pegB","pegC","rightWall","rightDivider","leftDivider","rightTrapDoor","collisionGroupB","test","game","Game","load","image","nextCategory","setBounds","input","keyboard","addKey","Input","Keyboard","KeyCodes","LEFT","RIGHT","SPACE","on","pointer","LeftFlipper","RightFlipper","setScale","rotation","hold","JustDown","flip","isFlipping","JustUp"],"mappings":"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","sourcesContent":["class Ball extends Phaser.Physics.Matter.Image {\r\n    constructor(scene, x, y, texture) {\r\n        super(scene.matter.world, x, y, texture)\r\n        super.setScale(.17)\r\n        super.setCircle(8.657)\r\n        this.body.friction = 0\r\n        this.body.frictionAir = 0\r\n        console.log(this.body.frictionStatic)\r\n        scene.sys.displayList.add(this)\r\n        this.setCollisionCategory(collisionGroupA)\r\n        this.body.density = 0.75\r\n    }\r\n    launch(){\r\n        super.setVelocityY(-30)\r\n    }\r\n}\r\n\r\nclass StaticShape extends Phaser.Physics.Matter.Image {\r\n    constructor(scene, x, y, name){\r\n        super(scene.matter.world, 0, 0, name)\r\n        scene.sys.displayList.add(this) \r\n    }\r\n}\r\n\r\nclass StaticCustomShape extends StaticShape {\r\n    constructor(scene, x, y, name){\r\n        super(scene, x, y, name)\r\n        this.setExistingBody(Bodies.fromVertices(0,0, PATHS[`${name}`]))\r\n        this.setStatic(true)\r\n        this.x = x\r\n        this.y = y\r\n    }\r\n}\r\n\r\nclass Peg extends StaticShape {\r\n    constructor(scene, x, y, name){\r\n        super(scene, x, y, name)\r\n        this.setCircle(24)\r\n        this.setStatic(true)\r\n        this.x = x\r\n        this.y = y\r\n    }\r\n}\r\n\r\n\r\nconst config = {\r\n    type: Phaser.AUTO,\r\n    width: 440,\r\n    height: 875,\r\n    physics: {\r\n        default: 'matter',\r\n        matter: {\r\n            debug: true,\r\n            gravity: {\r\n                x: 0,\r\n                y: 0.35\r\n            }\r\n        }\r\n    },\r\n    scene: {\r\n        preload: preload, \r\n        create: create,\r\n        update: update \r\n    }\r\n}\r\n\r\nconst Bodies = Phaser.Physics.Matter.Matter.Bodies\r\n\r\nlet \r\n    balls, \r\n    spacebar, \r\n    left,\r\n    right,\r\n    ball, \r\n    bounds, \r\n    leftFlipper, \r\n    rightFlipper, \r\n\r\n    //Static Objects\r\n    dome, bottomFrame,\r\n    center,\r\n    wallRight, wallRightInner,\r\n    chuteLeft, chuteRight,\r\n    bumperLeft, bumperRight,\r\n    ballStashInner, ballStashOuter,\r\n    pillA, pillB, pillC, pillD,\r\n    pegA, pegB, pegC, \r\n    rightWall,\r\n    rightDivider,\r\n    leftDivider,\r\n    rightTrapDoor, \r\n\r\n    //Utilities\r\n    collisionGroupA,\r\n    collisionGroupB,\r\n    test\r\n    \r\nconst game = new Phaser.Game(config)\r\n\r\nfunction preload() {\r\n    this.load.image('ball', 'dist/assets/sprites/wizball.png')\r\n    this.load.image('rectA', 'dist/assets/solids/grey-solid.svg')\r\n    this.load.image('schematic', 'dist/assets/schematic.jpg')\r\n    this.load.image('blueprint', 'dist/assets/blueprint.png')\r\n}\r\n\r\n//***************************************************************************************//\r\n\r\nfunction create() {\r\n\r\n    //Set some things up, inputs, collisiongroups, etc. \r\n    collisionGroupA = this.matter.world.nextCategory()\r\n    collisionGroupB = this.matter.world.nextCategory()\r\n    test = this\r\n    bounds = this.matter.world.setBounds(0, 0, 440, 875, 30, true, true, true, true)\r\n    left = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.LEFT)\r\n    right = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.RIGHT)\r\n    spacebar = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE)\r\n    \r\n    //Add a ball where you click\r\n    this.input.on('pointerdown', function(pointer){\r\n        ball = new Ball(this, pointer.x, pointer.y, 'ball') \r\n    }, this)\r\n    \r\n    //Layout overlay\r\n    // let blueprint = this.add.image(220,437.5, 'blueprint')\r\n    // blueprint.setScale(0.9)\r\n    \r\n\r\n    //Add the flippers\r\n    leftFlipper = new LeftFlipper(this, 118, 725)\r\n    rightFlipper = new RightFlipper(this, 274, 725)\r\n    \r\n    //Place static objects\r\n\r\n    dome = new StaticCustomShape(this, 250, 250, 'dome')\r\n    bottomFrame = new StaticCustomShape(this, 210, 830, 'bottomFrame')\r\n\r\n    center = new StaticCustomShape(this, 197, 275, 'center')\r\n\r\n    wallRight = new StaticCustomShape(this, 370, 315, 'wallRight')\r\n    wallRightInner = new StaticCustomShape(this, 305, 170, 'wallRightInner')\r\n\r\n    ballStashInner = new StaticCustomShape(this, 107, 130, 'ballStashInner')\r\n    ballStashOuter = new StaticCustomShape(this, 72, 150, 'ballStashOuter')\r\n\r\n    chuteLeft = new StaticCustomShape(this, 80, 705, 'chuteLeft')\r\n    chuteRight = new StaticCustomShape(this, 315, 705, 'chuteRight')\r\n\r\n    bumperLeft = new StaticCustomShape(this, 90, 635, 'bumperLeft')\r\n    bumperRight = new StaticCustomShape(this, 305, 625, 'bumperRight')\r\n\r\n    pillA = new StaticCustomShape(this, 130, 125, 'pill')\r\n    pillB = new StaticCustomShape(this, 175, 125, 'pill')\r\n    pillC = new StaticCustomShape(this, 220, 125, 'pill')\r\n    pillD = new StaticCustomShape(this, 265, 125, 'pill')\r\n\r\n    pegA = new Peg(this, 200, 240, 'pegA')\r\n    pegB = new Peg(this, 150, 190, 'pegB')\r\n    pegC = new Peg(this, 250, 190, 'pegC')\r\n\r\n    rightWall = this.matter.add.image(390, 595, 'rectA').setScale(0.02, 4.2).setStatic(true)\r\n\r\n    leftDivider = this.matter.add.image(40, 630, 'rectA').setScale(0.01, 1.7).setStatic(true)\r\n    rightDivider = this.matter.add.image(352, 600, 'rectA').setScale(0.01, 1).setStatic(true)\r\n    \r\n    rightTrapDoor = this.matter.add.image(365, 660, 'rectA').setScale(0.01, .9)\r\n    rightTrapDoor.rotation = .8\r\n    rightTrapDoor.setStatic(true)\r\n}\r\n\r\nfunction update() {\r\n\r\n    leftFlipper.hold()\r\n    rightFlipper.hold()\r\n    \r\n    if(Phaser.Input.Keyboard.JustDown(spacebar)){\r\n        ball = new Ball(this, 130, 625, 'ball') \r\n    }\r\n\r\n    if (Phaser.Input.Keyboard.JustDown(left)){\r\n        leftFlipper.flip() \r\n        leftFlipper.isFlipping = true\r\n    } \r\n    \r\n    if (Phaser.Input.Keyboard.JustUp(left)){\r\n        leftFlipper.isFlipping = false\r\n    } \r\n\r\n    if (Phaser.Input.Keyboard.JustDown(right)){\r\n        rightFlipper.flip()\r\n        rightFlipper.isFlipping = true\r\n    } \r\n\r\n    if (Phaser.Input.Keyboard.JustUp(right)){\r\n        rightFlipper.isFlipping = false\r\n    } \r\n    \r\n\r\n\r\n} \r\n\r\n\r\n\r\n\r\n\r\n///The base of the flipper is a 15mm diameter circle, sloping down to a 5mm diameter circle at the tip. Overall length is 71mm, "],"file":"game.js"}