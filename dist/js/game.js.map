{"version":3,"sources":["game.js"],"names":["config","type","Phaser","CANVAS","width","height","physics","default","matter","debug","gravity","x","y","scene","preload","create","update","Bodies","Physics","Matter","balls","spacebar","left","right","ball","bounds","leftFlipper","rightFlipper","testShape","playfield","plastics","collisionGroupA","collisionGroupB","collisionGroupC","collisionGroupD","collisionGroupE","flipperCollisionGroup","test","tween","game","Game","load","image","world","nextCategory","setBounds","input","keyboard","addKey","Input","Keyboard","KeyCodes","LEFT","RIGHT","SPACE","on","pointer","Ball","console","log","blueprint","add","LeftFlipper","RightFlipper","StaticCustomShape","setScale","StaticShape","canCallA","canCallB","canCallC","event","bodyA","bodyB","label","slingshotA","fire","slingshotB","bumperA","position","setTimeout","bumperB","bumperC","hold","JustDown","launch","flip","isFlipping","JustUp","release"],"mappings":"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","sourcesContent":["\r\n//Initial config\r\n\r\nconst config = {\r\n    type: Phaser.CANVAS,\r\n    width: 520,\r\n    height: 800,\r\n    physics: {\r\n        default: 'matter',\r\n        matter: {\r\n            debug: true,\r\n            gravity: {\r\n                x: 0,\r\n                y: 0.35\r\n            }\r\n        }\r\n    },\r\n    scene: {\r\n        preload: preload, \r\n        create: create,\r\n        update: update \r\n    }\r\n}\r\n\r\n//Declare global variables \r\n\r\nconst Bodies = Phaser.Physics.Matter.Matter.Bodies\r\n\r\nlet \r\n    balls, \r\n    spacebar, \r\n    left,\r\n    right,\r\n    ball, \r\n    bounds, \r\n    leftFlipper, \r\n    rightFlipper, \r\n    testShape,\r\n\r\n    //Background\r\n    playfield,\r\n    plastics,\r\n\r\n    //Utilities\r\n    collisionGroupA,\r\n    collisionGroupB,\r\n    collisionGroupC,\r\n    collisionGroupD,\r\n    collisionGroupE,\r\n    flipperCollisionGroup,\r\n    test,\r\n    tween\r\n    \r\nconst game = new Phaser.Game(config)\r\n\r\n//Load assets\r\n\r\nfunction preload() {\r\n    this.load.image('ball', 'dist/assets/sprites/wizball.png')\r\n    this.load.image('rectA', 'dist/assets/solids/grey-solid.svg')\r\n    this.load.image('schematic', 'dist/assets/schematic.jpg')\r\n    this.load.image('blueprint', 'dist/assets/blueprint.png')\r\n    this.load.image('plastics', 'dist/assets/Plasticos.png')\r\n    this.load.image('playfield', 'dist/assets/Playfield.png')\r\n}\r\n\r\n//Initialize table\r\n\r\nfunction create() {\r\n\r\n    //Set some things up, inputs, collisiongroups, etc. \r\n    collisionGroupA = this.matter.world.nextCategory()\r\n    collisionGroupB = this.matter.world.nextCategory()\r\n    collisionGroupC = this.matter.world.nextCategory()\r\n    collisionGroupD = this.matter.world.nextCategory()\r\n    collisionGroupE = this.matter.world.nextCategory()\r\n    flipperCollisionGroup = this.matter.world.nextCategory()\r\n\r\n    test = this\r\n    bounds = this.matter.world.setBounds(0, 0, 520, 800, 30, true, true, true, true)\r\n    left = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.LEFT)\r\n    right = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.RIGHT)\r\n    spacebar = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE)\r\n    \r\n    //Add a ball where you click\r\n    this.input.on('pointerdown', function(pointer){\r\n        ball = new Ball(this, pointer.x, pointer.y, 'ball') \r\n        console.log(pointer.x + ',', pointer.y)\r\n    }, this)\r\n\r\n    \r\n    //Layout overlay\r\n    let blueprint = this.add.image(260,400, 'blueprint')\r\n    \r\n    // playfield = this.add.image(220, 445, 'playfield')\r\n    // playfield.setScale(0.21)\r\n    // playfield.setDepth(1)\r\n    \r\n    // plastics = this.add.image(220, 445, 'plastics')\r\n    // plastics.setScale(0.21)\r\n    // plastics.setDepth(1)\r\n    \r\n    //Flippers\r\n    leftFlipper = new LeftFlipper(this, 147, 634) \r\n    rightFlipper = new RightFlipper(this, 330, 634)\r\n    \r\n    //Static Objects\r\n    /*********************************************************/\r\n    //Remove variable names later if unused in global scope\r\n    new StaticCustomShape(this, 160, 168, 'leftRampRight', collisionGroupB)\r\n    new StaticCustomShape(this, 378, 591, 'rightLane', collisionGroupB)\r\n    testShape = new StaticCustomShape(this, 97, 591, 'leftLane', collisionGroupB)\r\n    new StaticCustomShape(this, 369, 185, 'rightTrapCowl', collisionGroupB)\r\n    new StaticCustomShape(this, 481, 455, 'farRightWall', collisionGroupB)\r\n    new StaticCustomShape(this, 135, 222, 'leftRampLeft', collisionGroupB)\r\n    new StaticCustomShape(this, 282, 112, 'rightRampLeft', collisionGroupB)\r\n    new StaticCustomShape(this, 445, 530, 'rightWallA', collisionGroupB).setScale(1, 1.1)\r\n    new StaticCustomShape(this, 431, 310, 'rightWallB', collisionGroupB)\r\n    new StaticCustomShape(this, 250, 740, 'killZone', collisionGroupB)\r\n    new StaticCustomShape(this, 120, 535, 'leftSlingshot', collisionGroupB)\r\n    new StaticCustomShape(this, 355, 535, 'rightSlingshot', collisionGroupB)\r\n    new StaticCustomShape(this, 342, 137, 'rightRampRight', collisionGroupB)\r\n    new StaticCustomShape(this, 40, 488, 'leftWall', collisionGroupB).setScale(1,1.1)\r\n    new StaticCustomShape(this, 130, 170, 'topLoop', collisionGroupB)\r\n    new StaticCustomShape(this, 125, 110, 'leftLoopTop', collisionGroupB)\r\n    new StaticCustomShape(this, 218, 90, 'midTargetLeft', collisionGroupB)\r\n    new StaticCustomShape(this, 398, 392, 'rightTargets', collisionGroupB)\r\n    new StaticShape(this, 'rectangle', 260, 197, 75, 15, .02, 3) // top middle\r\n    new StaticShape(this, 'rectangle', 156, 110, 90, 15, 1.45, 3) // left center\r\n\r\n    //Collision events\r\n    /*********************************************************/\r\n    //Change to one <------------\r\n    let canCallA = true\r\n    let canCallB = true\r\n    let canCallC = true\r\n    this.matter.world.on('collisionstart', function(event, bodyA, bodyB){\r\n\r\n        if (bodyB.label === 'Ball' && bodyA.label === 'Slingshot'){\r\n            slingshotA.fire()\r\n            slingshotB.fire()\r\n        }\r\n        //Change to one <------------------\r\n        if ( bodyA.label === \"bumperA\" && bodyB.label  === 'Ball' && canCallA) {\r\n            canCallA = false\r\n            bumperA.fire(bodyB.position, \"bumperA\")\r\n            setTimeout(()=>{\r\n                canCallA = true\r\n            }, 100)\r\n        }\r\n        if ( bodyA.label === \"bumperB\" && bodyB.label  === 'Ball' && canCallB) {\r\n            canCallB = false\r\n            bumperB.fire(bodyB.position, \"bumperB\")\r\n            setTimeout(()=>{\r\n                canCallB = true\r\n            }, 100)\r\n        }\r\n        if ( bodyA.label === \"bumperC\" && bodyB.label  === 'Ball' && canCallC) {\r\n            canCallC = false\r\n            bumperC.fire(bodyB.position, \"bumperC\")\r\n            setTimeout(()=>{\r\n                canCallC = true\r\n            }, 100)\r\n        }\r\n    })\r\n}\r\n\r\nfunction update() {\r\n    \r\n    leftFlipper.hold()\r\n    rightFlipper.hold()\r\n    \r\n    if(Phaser.Input.Keyboard.JustDown(spacebar)){\r\n        ball = new Ball(this, 416, 773, 'ball') \r\n        ball.launch()\r\n    }\r\n    \r\n    if (Phaser.Input.Keyboard.JustDown(left)){\r\n        leftFlipper.flip() \r\n        leftFlipper.isFlipping = true\r\n    } \r\n    \r\n    if (Phaser.Input.Keyboard.JustUp(left)){\r\n        leftFlipper.isFlipping = false\r\n        leftFlipper.release()\r\n    } \r\n\r\n    if (Phaser.Input.Keyboard.JustDown(right)){\r\n        rightFlipper.flip()\r\n        rightFlipper.isFlipping = true\r\n    } \r\n\r\n    if (Phaser.Input.Keyboard.JustUp(right)){\r\n        rightFlipper.isFlipping = false\r\n        rightFlipper.release()\r\n    } \r\n\r\n\r\n    \r\n\r\n\r\n} "],"file":"game.js"}