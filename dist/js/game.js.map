{"version":3,"sources":["game.js"],"names":["config","type","Phaser","CANVAS","width","height","physics","default","matter","debug","gravity","x","y","game","balls","scene","preload","create","update","table","ramps","characters","leftFlipper","rightFlipper","sideFlipper","bumperA","bumperB","bumperC","leftSlingshot","rightSlingshot","launcher","ball","spacebar","left","right","down","collisionGroupA","collisionGroupB","collisionGroupC","collisionGroupD","collisionGroupE","sensorGroupA","sensorGroupB","cartmanLeft","cartmanCenter","cartmanRight","cartmanBlock","rampsCartmanActive","objectives","gameActive","backgroundMusic","eventMusic","lights","currentBall","multiplier","score","Bodies","Physics","Matter","Game","playRandomSound","input","on","pointer","Ball","setVelocityY","world","nextCategory","keyboard","addKey","Input","Keyboard","KeyCodes","LEFT","DOWN","RIGHT","SPACE","initLights","add","image","setDepth","LeftFlipper","RightFlipper","SideFlipper","Bumper","Slingshot","Launcher","createStaticObjects","initCollisionListeners","JustDown","flip","JustUp","release","charge","fire","length","getNewBall","startEvent","newGame","sound","endGame","console","log","stop","pause","playAudioSprite","document","querySelector","textContent","addScore","name","amount","total","registerHit","bodyA","bodyB","volume","render","visible","isDestroyed","destroy","setTimeout","setVelocityX","cartman","one","active","two","three","sprite","delay","spritemap","Object","keys","cache","json","get","Math","floor","random","comboCounter"],"mappings":"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","sourcesContent":["/* \n\nSouth Park Pinball v1.0\n\nBuilt by Riley Hemphill @ The Creative Circus, 2019\n\n*/\n\n//Initial config\nconst config = \n{\n    type: Phaser.CANVAS,\n    width: 520,\n    height: 800,\n    physics: {\n        default: 'matter',\n        matter: {\n            debug: false,\n            gravity: \n            {\n                x: 0,\n                y: .9\n            }\n        }\n    },\n    game: \n    {\n        balls: 3\n    },\n    scene: \n    {\n        preload: preload, \n        create: create,\n        update: update \n    }\n}\n\n//Declare global variables \n\nlet table, ramps, characters, \nleftFlipper, rightFlipper, sideFlipper,\nbumperA, bumperB, bumperC,\nleftSlingshot, rightSlingshot,\nlauncher, ball,\nspacebar, left, right, down,\ncollisionGroupA, collisionGroupB, collisionGroupC, collisionGroupD, collisionGroupE,\nsensorGroupA, sensorGroupB,\ncartmanLeft, cartmanCenter, cartmanRight, cartmanBlock, rampsCartmanActive,\nobjectives, \ngameActive,\nbackgroundMusic, eventMusic, \nlights\n\nlet balls = []\nlet currentBall = 1\nlet multiplier = 1\nlet score = 0\n\nconst Bodies = Phaser.Physics.Matter.Matter.Bodies\nconst game = new Phaser.Game(config)\n\nfunction create() {\n\n\tplayRandomSound('intro_music', this)\n\n    //What to do on click\n    this.input.on('pointerdown', function(pointer)\n    {\n\n        // console.log(pointer.x+\",\", pointer.y)\n\n\n        ball = new Ball(this, pointer.x, pointer.y, 'ball') \n        ball.setVelocityY(-10)\n\n\n\n        //Start a new game\n        // newGame(this)\n    }, this)\n\n    //Setup collision groups \n    sensorGroupA = this.matter.world.nextCategory() // Ground level sensors\n    sensorGroupB = this.matter.world.nextCategory() // Upper level sensors\n    collisionGroupA = this.matter.world.nextCategory() // Ball\n    collisionGroupB = this.matter.world.nextCategory() // Walls\n    collisionGroupC = this.matter.world.nextCategory() \n    collisionGroupD = this.matter.world.nextCategory()\n    collisionGroupE = this.matter.world.nextCategory()\n\n    //Setup controls\n    left = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.LEFT)\n    down = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.DOWN)\n    right = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.RIGHT)\n    spacebar = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE)\n\n    initLights(this)\n    \n    //Create object to store hit counts for each objective\n    objectives = \n    {\n        'cartman-left': 0,\n        'cartman-center': 0,\n        'cartman-right': 0,\n        'cartman-himself': 0,\n        'loop-hit': 0\n    }\n\n    //Textures\n    table = this.add.image(260, 400, 'table').setDepth(1)\n    ramps = this.add.image(260, 400, 'ramps').setDepth(2)\n    rampsCartmanActive =  this.add.image(260, 400, 'ramps_cartman_active').setDepth(0)\n    characters = this.add.image(260, 400, 'characters').setDepth(4)\n    \n    //Flippers\n    leftFlipper = new LeftFlipper(this, 150, 632) \n    rightFlipper = new RightFlipper(this, 327, 632)\n    sideFlipper = new SideFlipper(this, 407, 313)\n\n    //Pop bumpers\n    bumperA = new Bumper(this, 308, 125, 'bumper')\n    bumperB = new Bumper(this, 365, 135, 'bumper')\n    bumperC = new Bumper(this, 335, 190, 'bumper')\n\n    //Slingshots\n    leftSlingshot = new Slingshot(this, 121, 490, 152, 574, 177, 510, 5, 'leftSlingshot')\n    rightSlingshot = new Slingshot(this, 353, 491, 324, 574, 298, 510, 5, 'rightSlingshot')\n\n    //Launcher\n    launcher = new Launcher(this, 455, 755)\n    \n    //Static Objects\n    /*********************************************************/\n    //See static-objects.js\n\n    createStaticObjects(this)\n\n    //Collision events\n    /*********************************************************/\n    //See collisions.js\n\n    initCollisionListeners(this) \n}\n\n//Update\n/*********************************************************/\n\nfunction update() {\n    \n    if (Phaser.Input.Keyboard.JustDown(left))\n    {\n        leftFlipper.flip() \n    } \n    \n    if (Phaser.Input.Keyboard.JustUp(left))\n    {\n        leftFlipper.release()\n    } \n\n    if (Phaser.Input.Keyboard.JustDown(right))\n    {\n        rightFlipper.flip()\n        sideFlipper.flip()\n    } \n\n    if (Phaser.Input.Keyboard.JustUp(right))\n    {\n        rightFlipper.release()\n        sideFlipper.release()\n    } \n\n    if (Phaser.Input.Keyboard.JustDown(down))\n    {\n        launcher.charge()\n    }\n\n    if (Phaser.Input.Keyboard.JustUp(down))\n    {\n        launcher.fire()\n    }\n\n    //Round is over when no balls are in play\n    if (balls.length === 0)\n    {\n        //Get a new ball if there are any remaining. Otherwise end the game.\n        if ( currentBall <= config.game.balls && gameActive)\n        {\n            getNewBall(this)\n        }\n        else\n        { \n            gameActive = false\n        }\n    }\n\n    //Events\n    if (objectives['cartman-left'] && objectives['cartman-center'] && objectives['cartman-right'])\n    {\n        startEvent('cartman', this)\n    }\n} \n\n//Functions \n/*********************************************************/\n\nfunction newGame(scene)\n{\n    gameActive = true\n    score = 0\n    multiplier = 1\n    backgroundMusic = scene.sound.add('background_music')\n\tgetNewBall(scene)\n}\n\nfunction endGame()\n{\n    console.log('game over')\n    backgroundMusic.stop()\n    score = 0\n}\n\nfunction getNewBall(scene)\n{\n    backgroundMusic.pause()\n    ball = new Ball(scene, 455, 689, 'ball') \n    scene.sound.playAudioSprite('sound_effects', \"rollover\")\n        currentBall++\n        document.querySelector('.balls-remaining').textContent = currentBall\n}\n\nfunction addScore(name)\n{\n    let amount\n    switch(name)\n    {\n        case \"bumper\" : amount = 1000 \n            break\n        case \"butters\" : amount = 10000\n            break\n        case \"ramp\" : amount = 5000\n            break\n        case \"cartman-win\" : amount = 100000\n            break\n        case \"randy\" : amount = 2500\n            break\n        case \"loop\" : amount = 10000\n            break\n    }\n    let total = amount * multiplier\n    score += total\n    document.querySelector('.score').textContent = score\n}\n\n    //Hit registration\n    /*********************************************************/\n\nfunction registerHit(scene, bodyA, bodyB) {\n    switch(bodyA)\n    {\n        case \"butters\" :\n            playRandomSound('butters_hit', scene)  \n            scene.sound.playAudioSprite('sound_effects', 'thunder', {volume: 0.5})\n            scene.sound.playAudioSprite('sound_effects', 'hole_enter')\n            bodyB.render.visible = false\n            bodyB.isDestroyed = true\n            bodyB.destroy()\n            //Holds the ball for 3 seconds and shoots back to left flipper\n            setTimeout(()=>\n            {\n                ball = new Ball(scene, 340, 259, 'ball') \n                ball.setVelocityY(3.3)\n                ball.setVelocityX(-3.3)\n                scene.sound.playAudioSprite('sound_effects', 'ExitSandman')\n                addScore('butters')\n            }, 3000)     \n            break     \n\n        case \"cartman-hit\" :\n            if (!objectives[bodyB] && bodyB != 'cartman-himself')\n            {\n                objectives[bodyB]++\n\t\t\t\tscene.sound.playAudioSprite('sound_effects', 'target')\n\n\t\t\t\tswitch(bodyB) \n\t\t\t\t{\n\t\t\t\t\tcase \"cartman-left\" : lights.cartman.one.active = true \n\t\t\t\t\tbreak\n\t\t\t\t\tcase \"cartman-center\" : lights.cartman.two.active = true \n\t\t\t\t\tbreak\n\t\t\t\t\tcase \"cartman-right\" : lights.cartman.three.active = true \n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\t// lights.cartman.bodyB.active = true\n\t\t\t\tconsole.log(bodyB)\n            } \n            break          \n        \n        case \"cartman-himself\" :\n            objectives[bodyB]++\n            // playRandomSound('cartman_damage', scene)\n            scene.sound.playAudioSprite('sound_effects', 'rubber_hit_2')\n            break\n\n        case \"rightTargets\" :\n            scene.sound.playAudioSprite('sound_effects', 'rubber_hit_1')    \n            addScore('randy')\n            break\n        \n        case \"loop-hit\" :\n            addScore('loop')\n            objectives[bodyA]++\n            console.log(objectives)\n    }\n}\n\nfunction playRandomSound(sprite, scene, delay)\n{\n\tlet spritemap = Object.keys(scene.cache.json.get(sprite).spritemap)\n\tconsole.log(spritemap)\n    setTimeout(()=>{\n        scene.sound.playAudioSprite(sprite, spritemap[Math.floor(Math.random()*spritemap.length)])\n    }, delay)\n}\n\nfunction comboCounter(scene)\n{\n\n    //ball hits flippers\n    //ball speed exceeds a certain threshold \n    //score points\n    \n}\n\n"],"file":"game.js"}