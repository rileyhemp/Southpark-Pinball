{"version":3,"sources":["slingshot.js"],"names":["Slingshot","scene","x1","y1","x2","y2","x3","y3","links","name","group","matter","world","nextGroup","width","height","boxes","add","stack","x","y","Phaser","Physics","Matter","Bodies","rectangle","collisionFilter","category","chamfer","density","frictionAir","bounce","friction","i","bodies","label","chain","stiffness","length","render","visible","worldConstraint","pointA","pointB","block","image","isStatic","scaleX","scaleY","setCollidesWith","collisionGroupB","constraint","Math","floor","sounds","sound","playAudioSprite","random","setTimeout"],"mappings":";;;;;;;;IAAMA,S;;;AAEF,qBAAYC,KAAZ,EAAmBC,EAAnB,EAAuBC,EAAvB,EAA2BC,EAA3B,EAA+BC,EAA/B,EAAmCC,EAAnC,EAAuCC,EAAvC,EAA2CC,KAA3C,EAAkDC,IAAlD,EAAuD;AAAA;;AAEnD,SAAKR,KAAL,GAAaA,KAAb;AACA,SAAKC,EAAL,GAAUA,EAAV;AACA,SAAKE,EAAL,GAAUA,EAAV;AACA,SAAKD,EAAL,GAAUA,EAAV;AACA,SAAKE,EAAL,GAAUA,EAAV;AAEA,QAAIK,KAAK,GAAGT,KAAK,CAACU,MAAN,CAAaC,KAAb,CAAmBC,SAAnB,CAA6B,IAA7B,CAAZ;AAEA,QAAIC,KAAK,GAAG,EAAZ;AACA,QAAIC,MAAM,GAAG,EAAb;AAEA,SAAKC,KAAL,GAAaf,KAAK,CAACU,MAAN,CAAaM,GAAb,CAAiBC,KAAjB,CAAuBhB,EAAvB,EAA2BC,EAA3B,EAA+BK,KAA/B,EAAsC,CAAtC,EAAyC,CAAzC,EAA4C,CAA5C,EAA+C,UAASW,CAAT,EAAYC,CAAZ,EAAe;AACvE,aAAOC,MAAM,CAACC,OAAP,CAAeC,MAAf,CAAsBA,MAAtB,CAA6BC,MAA7B,CAAoCC,SAApC,CAA8CN,CAAC,GAAG,EAAlD,EAAsDC,CAAtD,EAAyDN,KAAzD,EAAgEC,MAAhE,EAAwE;AAC3EW,QAAAA,eAAe,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAD0D;AAE3EC,QAAAA,OAAO,EAAE,CAFkE;AAG3EC,QAAAA,OAAO,EAAE,GAHkE;AAI3EC,QAAAA,WAAW,EAAE,CAJ8D;AAK3EC,QAAAA,MAAM,EAAE,KALmE;AAM3EC,QAAAA,QAAQ,EAAE;AANiE,OAAxE,CAAP;AAQH,KATY,CAAb;;AAWA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGzB,KAApB,EAA2ByB,CAAC,EAA5B,EAA+B;AAC3B;AACA,WAAKjB,KAAL,CAAWkB,MAAX,CAAkBD,CAAlB,EAAqBE,KAArB,GAA6B1B,IAA7B;AACH;;AAED,SAAK2B,KAAL,GAAanC,KAAK,CAACU,MAAN,CAAaM,GAAb,CAAiBmB,KAAjB,CAAuB,KAAKpB,KAA5B,EAAmC,GAAnC,EAAwC,CAAxC,EAA2C,CAAC,GAA5C,EAAiD,CAAjD,EAAoD;AAC7DqB,MAAAA,SAAS,EAAE,CADkD;AAE7DC,MAAAA,MAAM,EAAE,EAFqD;AAG7DC,MAAAA,MAAM,EAAE;AACJC,QAAAA,OAAO,EAAE;AADL;AAHqD,KAApD,CAAb;AAQAvC,IAAAA,KAAK,CAACU,MAAN,CAAaM,GAAb,CAAiBwB,eAAjB,CAAiC,KAAKzB,KAAL,CAAWkB,MAAX,CAAkB,CAAlB,CAAjC,EAAuD,EAAvD,EAA2D,GAA3D,EAAgE;AAC5DQ,MAAAA,MAAM,EAAE;AAAEvB,QAAAA,CAAC,EAAEjB,EAAL;AAASkB,QAAAA,CAAC,EAAEjB;AAAZ,OADoD;AAE5DwC,MAAAA,MAAM,EAAE;AAAExB,QAAAA,CAAC,EAAC,CAACL,KAAD,GAAO,CAAX;AAAcM,QAAAA,CAAC,EAAC,CAACL,MAAD,GAAQ,CAAR,GAAW;AAA3B;AAFoD,KAAhE;AAKAd,IAAAA,KAAK,CAACU,MAAN,CAAaM,GAAb,CAAiBwB,eAAjB,CAAiC,KAAKzB,KAAL,CAAWkB,MAAX,CAAkB,KAAKlB,KAAL,CAAWkB,MAAX,CAAkBI,MAAlB,GAA0B,CAA5C,CAAjC,EAAiF,EAAjF,EAAqF,GAArF,EAA0F;AACtFI,MAAAA,MAAM,EAAE;AAAEvB,QAAAA,CAAC,EAAEf,EAAL;AAASgB,QAAAA,CAAC,EAAEf;AAAZ,OAD8E;AAEtFsC,MAAAA,MAAM,EAAE;AAAExB,QAAAA,CAAC,EAAEL,KAAK,GAAC,CAAX;AAAcM,QAAAA,CAAC,EAAC,CAACL,MAAD,GAAQ,CAAR,GAAW;AAA3B;AAF8E,KAA1F;AAKA,SAAK6B,KAAL,GAAa,KAAK3C,KAAL,CAAWU,MAAX,CAAkBM,GAAlB,CAAsB4B,KAAtB,CAA4BvC,EAA5B,EAAgCC,EAAhC,EAAoC,OAApC,EAA6C,KAAKN,KAAlD,EAAyD;AAClE6C,MAAAA,QAAQ,EAAE;AADwD,KAAzD,CAAb;AAGA,SAAKF,KAAL,CAAWG,MAAX,GAAoB,GAApB;AACA,SAAKH,KAAL,CAAWI,MAAX,GAAoB,GAApB;AACA,SAAKJ,KAAL,CAAWJ,OAAX,GAAqB,KAArB;AACA,SAAKI,KAAL,CAAWK,eAAX,CAA2BC,eAA3B;AAGA,SAAKC,UAAL,GAAkBlD,KAAK,CAACU,MAAN,CAAaM,GAAb,CAAiBkC,UAAjB,CAA6B,KAAKP,KAAlC,EAAyC,KAAK5B,KAAL,CAAWkB,MAAX,CAAkBkB,IAAI,CAACC,KAAL,CAAW,KAAKrC,KAAL,CAAWkB,MAAX,CAAkBI,MAAlB,GAAyB,CAApC,CAAlB,CAAzC,EAAoG,CAApG,EAAuG,MAAvG,EAA+G;AAC7HI,MAAAA,MAAM,EAAE;AAACvB,QAAAA,CAAC,EAAE,CAAJ;AAAOC,QAAAA,CAAC,EAAE;AAAV,OADqH;AAE7HuB,MAAAA,MAAM,EAAE;AAACxB,QAAAA,CAAC,EAAE,CAAJ;AAAOC,QAAAA,CAAC,EAAE;AAAV;AAFqH,KAA/G,CAAlB;AAKH;;;;2BAEK;AAAA;;AACF,UAAIkC,MAAM,GAAG,CAAC,eAAD,EAAkB,gBAAlB,CAAb;AACA,WAAKrD,KAAL,CAAWsD,KAAX,CAAiBC,eAAjB,CAAiC,eAAjC,EAAkDF,MAAM,CAACF,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACK,MAAL,KAAcH,MAAM,CAAChB,MAAhC,CAAD,CAAxD;AACA,WAAKa,UAAL,CAAgBd,SAAhB,GAA4B,EAA5B;AAEAqB,MAAAA,UAAU,CAAC,YAAI;AACX,QAAA,KAAI,CAACP,UAAL,CAAgBd,SAAhB,GAA4B,KAA5B;AACH,OAFS,EAEP,EAFO,CAAV;AAGH;;;6BAEO,CAEP;;;8BAEQ;AACL,WAAKc,UAAL,CAAgBd,SAAhB,GAA4B,MAA5B;AACH","sourcesContent":["class Slingshot {\n\n    constructor(scene, x1, y1, x2, y2, x3, y3, links, name){\n\n        this.scene = scene\n        this.x1 = x1\n        this.x2 = x2\n        this.y1 = y1\n        this.y2 = y2\n\n        var group = scene.matter.world.nextGroup(true)\n\n        let width = 10\n        let height = 20\n\n        this.boxes = scene.matter.add.stack(x1, y1, links, 1, 0, 0, function(x, y) {\n            return Phaser.Physics.Matter.Matter.Bodies.rectangle(x - 20, y, width, height, { \n                collisionFilter: { category: 16 },\n                chamfer: 0,\n                density: .01,\n                frictionAir: 0,\n                bounce: 0.001,\n                friction: 0,\n            })\n        })\n\n        for (let i = 1; i < links; i++){\n            //Only fire on bottom 4 blocks. The top one is too powerful. \n            this.boxes.bodies[i].label = name\n        }\n\n        this.chain = scene.matter.add.chain(this.boxes, 0.5, 0, -0.5, 0, {\n            stiffness: 1,\n            length: .2,\n            render: {\n                visible: false\n            }\n        })\n\n        scene.matter.add.worldConstraint(this.boxes.bodies[0], .2, 0.9, {\n            pointA: { x: x1, y: y1},\n            pointB: { x:-width/2, y:-height/2 +10 }\n        })\n\n        scene.matter.add.worldConstraint(this.boxes.bodies[this.boxes.bodies.length -1], .2, 0.9, {\n            pointA: { x: x2, y: y2},\n            pointB: { x: width/2, y:-height/2 +10}\n        })\n\n        this.block = this.scene.matter.add.image(x3, y3, 'rectA', this.scene, {\n            isStatic: true,\n        })\n        this.block.scaleX = .02\n        this.block.scaleY = 0.1\n        this.block.visible = false\n        this.block.setCollidesWith(collisionGroupB)\n\n\n        this.constraint = scene.matter.add.constraint( this.block, this.boxes.bodies[Math.floor(this.boxes.bodies.length/2)], 2, 0.0001, {\n            pointA: {x: 0, y: 0},\n            pointB: {x: 0, y: 0},\n        })\n\n    }\n\n    fire(){\n        let sounds = [\"SlingshotLeft\", \"SlingshotRight\"]\n        this.scene.sound.playAudioSprite('sound_effects', sounds[Math.floor(Math.random()*sounds.length)])\n        this.constraint.stiffness = .5\n\n        setTimeout(()=>{\n            this.constraint.stiffness = .0001\n        }, 20)\n    }\n\n    charge(){\n        \n    }\n\n    release(){\n        this.constraint.stiffness = 0.0001\n    }\n\n}"],"file":"slingshot.js"}