{"version":3,"sources":["classes.js"],"names":["Ball","scene","x","y","texture","matter","world","id","body","label","setupBall","update","setCollisions","isOnRamp","friction","frictionAir","setDensity","setDepth","setCollisionCategory","collisionGroupA","balls","push","sys","displayList","add","level","setCollidesWith","collisionGroupB","sensorGroupA","collisionGroupC","sensorGroupB","i","setInterval","destroy","clearInterval","Phaser","Physics","Matter","Image","StaticShape","type","width","height","rotation","collisionGroup","drawShape","object","image","setExistingBody","setVisible","rectangle","isStatic","angle","circle","alert","StaticCustomShape","name","Bodies","fromVertices","PATHS","restitution","setStatic","Bumper","setCircle","setScale","mass","canAnimate","position","startPosition","targetX","targetY","tweens","targets","yoyo","duration","repeat","setTimeout","Sensor","isSensor"],"mappings":"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","sourcesContent":["class Ball extends Phaser.Physics.Matter.Image {\r\n    constructor(scene, x, y, texture) {\r\n        super(scene.matter.world, x, y, texture)\r\n        super.setScale(.8) \r\n        super.setCircle(8.75)\r\n        this.id = this.body.id\r\n        this.scene = scene\r\n        this.body.label = 'Ball'\r\n        this.setupBall()\r\n        this.update()\r\n    }\r\n    setupBall(){\r\n        this.setCollisions('table')\r\n        this.body.isOnRamp = false\r\n        this.body.friction = 0\r\n        this.body.frictionAir = 0.0001\r\n        this.setDensity(.0009)\r\n        this.setDepth(1)\r\n        this.setCollisionCategory(collisionGroupA)\r\n        balls.push(this.body)\r\n        this.scene.sys.displayList.add(this)\r\n    }\r\n    setCollisions(level){ \r\n        //Changes what the ball can collide with depending on where it is\r\n        if ( level === 'table' ){\r\n            this.setCollidesWith([collisionGroupA, collisionGroupB, sensorGroupA])\r\n        } else if ( level === 'ramps' ){\r\n            this.setCollidesWith([collisionGroupA, collisionGroupC, sensorGroupB])\r\n        }\r\n    }\r\n    launch(){\r\n        super.setVelocityY(-20.5)\r\n    }\r\n    update(){\r\n        let i = setInterval(()=>{\r\n            //Check if the ball is on a ramp\r\n            if (this.body.isOnRamp){\r\n                this.setCollisions('ramps')\r\n                this.setDepth(3)\r\n                this.setDensity(0.00108)\r\n            } else if (!this.body.isOnRamp){\r\n                this.setCollisions('table')\r\n                this.setDepth(1)\r\n            } \r\n            //Check if the ball is in killzone\r\n            if (this.y > 720){\r\n                this.destroy()\r\n                clearInterval(i)\r\n            }\r\n        }, 16.66666)\r\n    }\r\n}\r\n\r\nclass StaticShape {\r\n    constructor(scene, type, x, y, width, height, rotation, collisionGroup){\r\n        this.body = {}\r\n        this.scene = scene\r\n        this.type = type\r\n        this.x = x\r\n        this.y = y\r\n        this.width = width\r\n        this.height = height\r\n        this.rotation = rotation\r\n        this.drawShape()\r\n        //this.body.collisionFilter.category = collisionGroup\r\n        this.object = this.scene.matter.add.image(this.x, this.y, null).setExistingBody(this.body).setVisible(false)\r\n        this.object.setCollisionCategory(collisionGroup)\r\n    }\r\n    drawShape(){\r\n        if (this.type === 'rectangle'){\r\n            this.body = this.scene.matter.add.rectangle(this.x, this.y, this.width, this.height, {\r\n                isStatic: true,\r\n                angle: this.rotation\r\n            })\r\n        } else if (this.type === 'circle'){\r\n            this.body = this.scene.matter.add.circle(this.x, this.y, this.width, {\r\n                isStatic: true\r\n            })\r\n        } else {\r\n            alert `${this.type} is not a supported shape`\r\n        }\r\n    }\r\n}\r\n\r\nclass StaticCustomShape extends Phaser.Physics.Matter.Image {\r\n    constructor(scene, x, y, name, collisionGroup){\r\n        super(scene.matter.world, x, y, name)\r\n        this.setExistingBody(Bodies.fromVertices(0,0, PATHS[`${name}`]))\r\n        this.body.restitution = 0\r\n        this.setVisible(false)\r\n        this.setStatic(true)\r\n        this.x = x\r\n        this.y = y\r\n        this.setCollisionCategory(collisionGroup)\r\n    }\r\n}\r\n\r\nclass Bumper extends Phaser.Physics.Matter.Image {\r\n    constructor(scene, x, y, name){\r\n        super(scene.matter.world, x, y, name)\r\n        this.setCircle(24)\r\n        this.setStatic(true)\r\n        this.setScale(0.85)\r\n        this.body.mass = .999\r\n        this.x = x\r\n        this.y = y\r\n        this.body.label = name\r\n        this.scene = scene\r\n        this.body.restitution = 1\r\n        this.setCollisionCategory(collisionGroupB)\r\n        this.canAnimate = true\r\n    }\r\n    fire(position){\r\n        //Grab the starting position\r\n        if (this.canAnimate) {\r\n\r\n            this.canAnimate = false\r\n\r\n            let startPosition = {\r\n                x: this.x,\r\n                y: this.y\r\n            }\r\n            //Calculate the midpoint between the ball and bumper\r\n            let targetX = (this.x + position.x) / 2\r\n            let targetY = (this.y + position.y) / 2\r\n\r\n    \r\n            //Tween to that point\r\n            this.scene.tweens.add({\r\n                targets: this,\r\n                x: targetX,\r\n                y: targetY,\r\n                yoyo: true,\r\n                duration: 40,\r\n                repeat: 0\r\n            })\r\n\r\n            setTimeout(()=>{\r\n                this.x = startPosition.x\r\n                this.y = startPosition.y\r\n                setTimeout(()=>{\r\n                    this.canAnimate = true\r\n                }, 100)\r\n            }, 40)\r\n\r\n            \r\n\r\n\r\n        }\r\n    }\r\n}\r\n\r\nclass Sensor extends StaticShape {\r\n    constructor(scene, x, y, rotation, type, name, collisionGroup){\r\n        super(scene, 'rectangle', x, y, 30, 1, rotation, collisionGroup)\r\n        this.body.isSensor = true\r\n        this.body.type = type\r\n        this.body.label = name\r\n    }\r\n}"],"file":"classes.js"}