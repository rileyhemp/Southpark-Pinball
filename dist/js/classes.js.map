{"version":3,"sources":["classes.js"],"names":["Ball","scene","x","y","texture","matter","world","id","body","label","setupBall","update","setCollisions","isOnRamp","isOnCenterRamp","isOnLauncher","friction","frictionAir","inertia","Infinity","setDensity","setDepth","setCollisionCategory","collisionGroupA","balls","push","sys","displayList","add","level","setCollidesWith","collisionGroupB","collisionGroupD","sensorGroupA","collisionGroupE","collisionGroupC","sensorGroupB","i","setInterval","game","config","width","height","readyBall","destroy","clearInterval","Phaser","Physics","Matter","Image","StaticShape","type","rotation","collisionGroup","drawShape","object","image","setExistingBody","setVisible","rectangle","isStatic","angle","circle","alert","StaticCustomShape","name","Bodies","fromVertices","PATHS","restitution","setStatic","Bumper","setCircle","setScale","mass","canAnimate","position","startPosition","targetX","targetY","tweens","targets","yoyo","duration","repeat","setTimeout","Sensor","isSensor","Launcher","createComponents","rectA","create","parts","top","bottom","left","right","spring","constraint","length"],"mappings":"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","sourcesContent":["class Ball extends Phaser.Physics.Matter.Image {\n    constructor(scene, x, y, texture) {\n        super(scene.matter.world, x, y, texture)\n        super.setScale(.8) \n        super.setCircle(8.75)\n        this.id = this.body.id\n        this.scene = scene\n        this.body.label = 'Ball'\n        this.setupBall()\n        this.update()\n    }\n    setupBall(){\n        this.setCollisions('table')\n        this.body.isOnRamp = false\n        this.body.isOnCenterRamp = false\n        this.body.isOnLauncher = false\n        this.body.friction = 0\n        this.body.frictionAir = 0\n        this.body.inertia = Infinity\n        this.setDensity(.001)\n        this.setDepth(1)\n        this.setCollisionCategory(collisionGroupA)\n        balls.push(this.body)\n        this.scene.sys.displayList.add(this)\n    }\n    setCollisions(level){ \n        //Changes what the ball can collide with depending on where it is\n        if ( level === 'table' ){\n            this.setCollidesWith([collisionGroupA, collisionGroupB, collisionGroupD, sensorGroupA])\n        } else if ( level === 'launcher' ) {\n            this.setCollidesWith([collisionGroupA, collisionGroupB, collisionGroupE, sensorGroupA])\n        } else if ( level === 'ramps' ){\n            this.setCollidesWith([collisionGroupA, collisionGroupC, collisionGroupE, sensorGroupB])\n        } else if ( level === 'centerRamp' ){\n            this.setCollidesWith([collisionGroupA, collisionGroupC, collisionGroupD, sensorGroupB])\n        }\n    }\n    launch(){\n        super.setVelocityY(-20.5)\n    }\n    readyBall(){\n        this.x = 455\n        this.y = 690\n    }\n    update(){\n        let i = setInterval(()=>{\n            //Check if the ball is on a ramp\n            if (this.body.isOnRamp && this.body.isOnCenterRamp){\n                this.setCollisions('centerRamp')\n                this.setDepth(3)\n            } else if (this.body.isOnRamp){\n                this.setCollisions('ramps')\n                this.setDepth(3)\n            } else if (!this.body.isOnRamp && this.body.isOnLauncher){\n                this.setCollisions('launcher')\n                this.setDepth(1)\n            } else {\n                this.setCollisions('table')\n                this.setDepth(1)\n            } \n            //Checks if the ball has escaped the map\n            if (this.x < 0 || this.x > game.config.width || this.y < 0 || this.y > game.config.height){\n                this.readyBall()\n            }\n\n            //Check if the ball is in a killzone\n            if (this.x < 425 && (this.y > 650 && (this.x < 192 || this.x > 330)) || this.y > 720) {\n                this.destroy()\n                clearInterval(i)\n            }\n        }, 16.66666)\n    }\n}\n\nclass StaticShape {\n    constructor(scene, type, x, y, width, height, rotation, collisionGroup){\n        this.body = {}\n        this.scene = scene\n        this.type = type\n        this.x = x\n        this.y = y\n        this.width = width\n        this.height = height\n        this.rotation = rotation\n        this.drawShape()\n        //this.body.collisionFilter.category = collisionGroup\n        this.object = this.scene.matter.add.image(this.x, this.y, null).setExistingBody(this.body).setVisible(false)\n        this.object.setCollisionCategory(collisionGroup)\n    }\n    drawShape(){\n        if (this.type === 'rectangle'){\n            this.body = this.scene.matter.add.rectangle(this.x, this.y, this.width, this.height, {\n                isStatic: true,\n                angle: this.rotation\n            })\n        } else if (this.type === 'circle'){\n            this.body = this.scene.matter.add.circle(this.x, this.y, this.width, {\n                isStatic: true\n            })\n        } else {\n            alert `${this.type} is not a supported shape`\n        }\n    }\n}\n\nclass StaticCustomShape extends Phaser.Physics.Matter.Image {\n    constructor(scene, x, y, name, collisionGroup){\n        super(scene.matter.world, x, y, name)\n        this.setExistingBody(Bodies.fromVertices(0,0, PATHS[`${name}`]))\n        this.body.restitution = 0\n        this.setVisible(false)\n        this.setStatic(true)\n        this.x = x\n        this.y = y\n        this.setCollisionCategory(collisionGroup)\n    }\n}\n\nclass Bumper extends Phaser.Physics.Matter.Image {\n    constructor(scene, x, y, name){\n        super(scene.matter.world, x, y, name)\n        this.setCircle(24)\n        this.setStatic(true)\n        this.setScale(0.75)\n        this.body.mass = .999\n        this.x = x\n        this.y = y\n        this.body.label = name\n        this.scene = scene\n        this.body.restitution = 1\n        this.setCollisionCategory(collisionGroupB)\n        this.canAnimate = true\n    }\n    fire(position){\n        //Grab the starting position\n        if (this.canAnimate) {\n\n            this.canAnimate = false\n\n            let startPosition = {\n                x: this.x,\n                y: this.y\n            }\n            //Calculate the midpoint between the ball and bumper\n            let targetX = (this.x + position.x) / 2\n            let targetY = (this.y + position.y) / 2\n\n    \n            //Tween to that point\n            this.scene.tweens.add({\n                targets: this,\n                x: targetX,\n                y: targetY,\n                yoyo: true,\n                duration: 20,\n                repeat: 0\n            })\n\n            setTimeout(()=>{\n                this.x = startPosition.x\n                this.y = startPosition.y\n                setTimeout(()=>{\n                    this.canAnimate = true\n                }, 100)\n            }, 40)\n\n            \n\n\n        }\n    }\n}\n\nclass Sensor extends StaticShape {\n    constructor(scene, x, y, width, rotation, type, name, collisionGroup){\n        super(scene, 'rectangle', x, y, width, 20, rotation, collisionGroup)\n        this.body.isSensor = true\n        this.body.type = type\n        this.body.label = name\n    }\n}\n\nclass Launcher {\n    constructor(scene, x, y) {\n        this.x = x\n        this.y = y\n        this.scene = scene\n        this.createComponents()\n    }\n\n    createComponents() {\n\n        //Create a dynamic body for the top\n        let rectA = Phaser.Physics.Matter.Matter.Bodies.circle(this.x , this.y, 15)\n\n        let body = this.scene.matter.body.create({\n            parts: [ rectA ]\n        })\n        this.top = this.scene.matter.add.image(150, 0, null).setExistingBody(body).setVisible(false)\n        this.top.setCollisionCategory(collisionGroupA)\n        this.top.setCollidesWith(collisionGroupA)\n        this.top.body.inertia = Infinity\n        this.bottom = new StaticShape(this.scene, 'rectangle', this.x, this.y + 50, 40, 20, 0, collisionGroupA )\n        this.left = new StaticShape(this.scene, 'rectangle', this.x - 10, this.y, 10, 100, 0, collisionGroupA )\n        this.right = new StaticShape(this.scene, 'rectangle', this.x + 10, this.y, 10, 100, 0, collisionGroupA )\n        this.spring = this.scene.matter.add.constraint(this.bottom, this.top)\n        this.spring.length = 90\n    }\n    charge() {\n        this.update = setInterval(() => {\n            this.spring.length--\n            if (this.spring.length < 70){\n                clearInterval(this.update)\n            }\n        }, 40)\n    }\n    fire() {\n        clearInterval(this.update)\n        this.scene.tweens.add({\n            targets: this.spring,\n            length: 102,\n            duration: 20\n        })\n        //Reset the spring\n        setTimeout(() => {\n            this.spring.length = 90\n        }, 50)\n    }\n}"],"file":"classes.js"}