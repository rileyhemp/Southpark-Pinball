{"version":3,"sources":["classes.js"],"names":["Ball","scene","x","y","texture","matter","world","id","body","label","setupBall","update","friction","frictionAir","setDensity","setDepth","setCollisions","setCollisionCategory","collisionGroupA","isOnRamp","isOnCenterRamp","isOnLauncher","balls","push","inertia","Infinity","sys","displayList","add","table_sfx","sound","loop","play","ramp_sfx","level","setCollidesWith","collisionGroupB","collisionGroupD","sensorGroupA","collisionGroupE","collisionGroupC","sensorGroupB","setVelocityX","setVelocityY","i","setInterval","isOnPlastic","volume","speed","isDestroyed","stop","game","config","width","height","readyBall","pop","playAudioSprite","playRandomSound","destroy","clearInterval","Phaser","Physics","Matter","Image","StaticShape","type","rotation","collisionGroup","drawShape","object","image","setExistingBody","setVisible","rectangle","isStatic","angle","circle","alert","StaticCustomShape","name","Bodies","fromVertices","PATHS","restitution","setStatic","Bumper","setCircle","setScale","mass","canAnimate","canPlaySound","position","sounds","Math","floor","random","length","startPosition","targetX","targetY","tweens","targets","yoyo","duration","repeat","setTimeout","Sensor","isSensor","Launcher","createComponents","rectA","create","parts","top","bottom","left","right","spring","constraint","backgroundMusic"],"mappings":"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","sourcesContent":["class Ball extends Phaser.Physics.Matter.Image \n{\n    constructor(scene, x, y, texture) \n    {\n        super(scene.matter.world, x, y, texture)\n        super.setScale(.8) \n        super.setCircle(8.75)\n        this.id = this.body.id\n        this.scene = scene\n        this.body.label = 'Ball'\n        this.setupBall()\n        this.update()\n    }\n\n    setupBall()\n    {\n        this.body.friction = 0\n        this.body.frictionAir = 0\n        this.setDensity(.001)\n        this.setDepth(1)\n        //Set what the ball can collide with\n        this.setCollisions('table')\n        //Set the ball's own collision category\n        this.setCollisionCategory(collisionGroupA)\n        //Initialize variables \n        this.body.isOnRamp = false\n        this.body.isOnCenterRamp = false\n        this.body.isOnLauncher = false\n        //Add ball to array\n        balls.push(this.body)\n        //Prevents the ball from spinning\n        this.body.inertia = Infinity\n        //Add the ball to the display list\n        this.scene.sys.displayList.add(this)\n        //Add rolling table sounds\n        this.table_sfx = this.scene.sound.add('ball_rolling', { loop: true })\n        this.table_sfx.play() \n        //Add rolling ramp sounds\n        this.ramp_sfx = this.scene.sound.add('ramp_rolling', { loop: true })\n        this.ramp_sfx.play() \n    }\n\n    setCollisions(level)\n    { \n        //Changes what the ball can collide with depending on where it is\n        if ( level === 'table' ){\n            this.setCollidesWith([collisionGroupA, collisionGroupB, collisionGroupD, sensorGroupA])\n        } else if ( level === 'launcher' ) {\n            this.setCollidesWith([collisionGroupA, collisionGroupB, collisionGroupE, sensorGroupA])\n        } else if ( level === 'ramps' ){\n            this.setCollidesWith([collisionGroupA, collisionGroupC, collisionGroupE, sensorGroupB])\n        } else if ( level === 'centerRamp' ){\n            this.setCollidesWith([collisionGroupA, collisionGroupC, collisionGroupD, sensorGroupB])\n        }\n    }\n\n    readyBall()\n    {\n        //Loads a ball on the launcher\n        this.setVelocityX(0)\n        this.setVelocityY(0)\n        this.x = 455\n        this.y = 689\n    }\n\n    update()\n    {\n        //Watch for changes\n        let i = setInterval(()=>\n        {\n            //Changes sound when ball is on a ramp\n            if (this.body.isOnPlastic) \n            {\n                this.table_sfx.volume = this.table_sfx.volume - .1\n                this.ramp_sfx.volume = .1\n            }\n            //Sets the volume of the ball rolling to the balls speed. \n            else\n            {\n                this.ramp_sfx.volume = 0\n                this.table_sfx.volume = this.body.speed/8.5\n            }\n            \n            //Kills the sound if the ball has been destroyed (by butters' target)\n            if (this.body.isDestroyed)\n            {\n                this.table_sfx.stop()\n                this.ramp_sfx.stop()\n            }\n\n            //Check balls status and adjust collisions accordingly\n            if (this.body.isOnRamp && this.body.isOnCenterRamp)\n            {\n                this.setCollisions('centerRamp')\n                this.setDepth(3)\n            } \n            else if (this.body.isOnRamp)\n            {\n                this.setCollisions('ramps')\n                this.setDepth(3)\n            } \n            else if (!this.body.isOnRamp && this.body.isOnLauncher)\n            {\n                this.setCollisions('launcher')\n                this.setDepth(1)\n            } \n            else \n            {\n                this.setCollisions('table')\n                this.setDepth(1)\n            } \n\n            //Checks if the ball has escaped the map and puts it back on the launcher\n            if (this.x < 0 || this.x > game.config.width || this.y < 0 || this.y > game.config.height)\n            {\n                this.readyBall()\n            }\n\n            //Check if the ball is in a killzone\n            if (this.x < 425 && (this.y > 650 && (this.x < 192 || this.x > 330)) || this.y > 720) \n            {\n                //Remove ball from array\n                balls.pop()\n                //Play sound\n                this.scene.sound.playAudioSprite('sound_effects', 'Drain')\n                playRandomSound('generic_negative', this.scene, 400)\n                //Stop rolling sounds\n                this.table_sfx.stop()\n                this.ramp_sfx.stop()\n                //Destroy and stop watching for changes\n                this.destroy()\n                clearInterval(i)\n            }\n        }, 16.66666)\n    }\n}\n\nclass StaticShape \n{\n    constructor(scene, type, x, y, width, height, rotation, collisionGroup, label)\n    {\n        this.body = {}\n        this.scene = scene\n        this.type = type\n        this.x = x\n        this.y = y\n        this.width = width\n        this.height = height\n        this.rotation = rotation\n        this.drawShape()\n        this.object = this.scene.matter.add.image(this.x, this.y, null).setExistingBody(this.body).setVisible(false)\n        this.object.setCollisionCategory(collisionGroup)\n        this.body.label = label\n    }\n\n    drawShape()\n    {\n        if (this.type === 'rectangle')\n        {\n            this.body = this.scene.matter.add.rectangle(this.x, this.y, this.width, this.height, {\n                isStatic: true,\n                angle: this.rotation\n                }\n            )\n        } \n        else if (this.type === 'circle')\n        {\n            this.body = this.scene.matter.add.circle(this.x, this.y, this.width, {\n                isStatic: true\n                }\n            )\n        } \n        else {alert `${this.type} is not a supported shape`}\n    }\n}\n\nclass StaticCustomShape extends Phaser.Physics.Matter.Image \n{\n    constructor(scene, x, y, name, collisionGroup)\n    {\n        super(scene.matter.world, x, y, name)\n        this.setExistingBody(Bodies.fromVertices(0,0, PATHS[`${name}`]))\n        this.body.restitution = 0\n        this.body.label = name\n        this.setVisible(false)\n        this.setStatic(true)\n        this.x = x\n        this.y = y\n        this.setCollisionCategory(collisionGroup)\n    }\n}\n\nclass Bumper extends Phaser.Physics.Matter.Image \n{\n    constructor(scene, x, y, name)\n    {\n        super(scene.matter.world, x, y, name)\n        this.setCircle(24)\n        this.setStatic(true)\n        this.setScale(0.75)\n        this.body.mass = .999\n        this.x = x\n        this.y = y\n        this.body.label = name\n        this.scene = scene\n        this.body.restitution = 1\n        this.setCollisionCategory(collisionGroupB)\n        this.canAnimate = true\n        this.canPlaySound = true\n    }\n\n    fire(position)\n    {\n        let sounds = ['Bumper', 'BumperLeft', 'BumperMiddle', 'BumperRight']\n\n        if (this.canAnimate) \n        {\n            //Play a random bumper sound & a bell\n            this.scene.sound.playAudioSprite('sound_effects', sounds[Math.floor(Math.random()*sounds.length)])\n            this.scene.sound.playAudioSprite('sound_effects', 'bell_ding', {\n                volume: 0.2\n            })\n            \n            //Restrict firing \n            this.canAnimate = false\n            \n            //Grab the starting position\n            let startPosition = \n            {\n                x: this.x,\n                y: this.y\n            }\n            //Calculate the midpoint between the ball and bumper\n            let targetX = (this.x + position.x) / 2\n            let targetY = (this.y + position.y) / 2\n\n            //Tween to that point\n            this.scene.tweens.add(\n            {\n                targets: this,\n                x: targetX,\n                y: targetY,\n                yoyo: true,\n                duration: 20,\n                repeat: 0\n            })\n\n            //Move the bumper back to the starting position and un-restrict firing shortly thereafter. \n            setTimeout(()=>\n            {\n                this.x = startPosition.x\n                this.y = startPosition.y\n                setTimeout(()=>\n                {\n                    this.canAnimate = true\n                }, 100)\n            }, 40)\n        }\n    }\n}\n\nclass Sensor extends StaticShape \n{\n    constructor(scene, x, y, width, height, rotation, type, name, collisionGroup)\n    {\n        super(scene, 'rectangle', x, y, width, height, rotation, collisionGroup)\n        this.body.isSensor = true\n        this.body.type = type\n        this.body.label = name\n    }\n}\n\nclass Launcher \n{\n    constructor(scene, x, y) \n    {\n        this.x = x\n        this.y = y\n        this.scene = scene\n        this.createComponents()\n    }\n\n    createComponents() \n    {\n        //Create the top of the launcher\n        let rectA = Phaser.Physics.Matter.Matter.Bodies.circle(this.x , this.y, 15)\n        let body = this.scene.matter.body.create({\n            parts: [ rectA ]\n        })\n        this.top = this.scene.matter.add.image(150, 0, null).setExistingBody(body).setVisible(false)\n        this.top.setCollisionCategory(collisionGroupA)\n        this.top.setCollidesWith(collisionGroupA)\n        this.top.body.inertia = Infinity\n        //Create the rest of the launcher\n        this.bottom = new StaticShape(this.scene, 'rectangle', this.x, this.y + 50, 40, 20, 0, collisionGroupA )\n        this.left = new StaticShape(this.scene, 'rectangle', this.x - 10, this.y, 10, 100, 0, collisionGroupA )\n        this.right = new StaticShape(this.scene, 'rectangle', this.x + 10, this.y, 10, 100, 0, collisionGroupA )\n        this.spring = this.scene.matter.add.constraint(this.bottom, this.top)\n        this.spring.length = 90\n    }\n\n    charge() \n    {\n        //Starts the music\n        backgroundMusic.play()\n\n        //Pulls back the spring until it reaches desired length\n        this.update = setInterval(() => \n        {\n            this.spring.length--\n            if (this.spring.length < 70)\n            {\n                clearInterval(this.update)\n            }\n        }, 40)\n    }\n\n    fire() \n    {\n        //Play sound\n        this.scene.sound.playAudioSprite('sound_effects', \"Plunger\")\n\n        //Stop pulling the spring back\n        clearInterval(this.update)\n\n        //Tween back to the starting position. The time is constant, so the greater distance the greater the impact. \n        this.scene.tweens.add(\n        {\n            targets: this.spring,\n            length: 102,\n            duration: 20\n        })\n\n        //Reset the spring\n        setTimeout(() => \n        {\n            this.spring.length = 90\n        }, 50)\n    }\n}\n"],"file":"classes.js"}