{"version":3,"sources":["classes.js"],"names":["Ball","scene","x","y","texture","matter","world","id","body","label","setupBall","update","setCollisions","hasCollided","isOnRamp","isOnCenterRamp","isOnLauncher","friction","frictionAir","inertia","Infinity","setDensity","setDepth","setCollisionCategory","collisionGroupA","balls","push","sys","displayList","add","sfx","sound","loop","play","console","log","level","setCollidesWith","collisionGroupB","collisionGroupD","sensorGroupA","collisionGroupE","collisionGroupC","sensorGroupB","i","setInterval","volume","speed","game","config","width","height","readyBall","pop","destroy","stop","clearInterval","Phaser","Physics","Matter","Image","StaticShape","type","rotation","collisionGroup","drawShape","object","image","setExistingBody","setVisible","rectangle","isStatic","angle","circle","alert","StaticCustomShape","name","Bodies","fromVertices","PATHS","restitution","setStatic","Bumper","setCircle","setScale","mass","canAnimate","canPlaySound","position","sounds","playAudioSprite","Math","floor","random","length","startPosition","targetX","targetY","tweens","targets","yoyo","duration","repeat","setTimeout","Sensor","isSensor","Launcher","createComponents","rectA","create","parts","top","bottom","left","right","spring","constraint"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAMA,I;;;;;AACF,gBAAYC,KAAZ,EAAmBC,CAAnB,EAAsBC,CAAtB,EAAyBC,OAAzB,EAAkC;AAAA;;AAAA;;AAC9B,8EAAMH,KAAK,CAACI,MAAN,CAAaC,KAAnB,EAA0BJ,CAA1B,EAA6BC,CAA7B,EAAgCC,OAAhC;;AACA,yHAAe,EAAf;;AACA,0HAAgB,IAAhB;;AACA,UAAKG,EAAL,GAAU,MAAKC,IAAL,CAAUD,EAApB;AACA,UAAKN,KAAL,GAAaA,KAAb;AACA,UAAKO,IAAL,CAAUC,KAAV,GAAkB,MAAlB;;AACA,UAAKC,SAAL;;AACA,UAAKC,MAAL;;AAR8B;AASjC;;;;gCACU;AACP,WAAKC,aAAL,CAAmB,OAAnB;AACA,WAAKJ,IAAL,CAAUK,WAAV,GAAwB,KAAxB;AACA,WAAKL,IAAL,CAAUM,QAAV,GAAqB,KAArB;AACA,WAAKN,IAAL,CAAUO,cAAV,GAA2B,KAA3B;AACA,WAAKP,IAAL,CAAUQ,YAAV,GAAyB,KAAzB;AACA,WAAKR,IAAL,CAAUS,QAAV,GAAqB,CAArB;AACA,WAAKT,IAAL,CAAUU,WAAV,GAAwB,CAAxB;AACA,WAAKV,IAAL,CAAUW,OAAV,GAAoBC,QAApB;AACA,WAAKC,UAAL,CAAgB,IAAhB;AACA,WAAKC,QAAL,CAAc,CAAd;AACA,WAAKC,oBAAL,CAA0BC,eAA1B;AACAC,MAAAA,KAAK,CAACC,IAAN,CAAW,KAAKlB,IAAhB,EAZO,CAaP;;AACA,WAAKP,KAAL,CAAW0B,GAAX,CAAeC,WAAf,CAA2BC,GAA3B,CAA+B,IAA/B,EAdO,CAeP;;AACA,WAAKC,GAAL,GAAW,KAAK7B,KAAL,CAAW8B,KAAX,CAAiBF,GAAjB,CAAqB,cAArB,EAAqC;AAAEG,QAAAA,IAAI,EAAE;AAAR,OAArC,CAAX;AACA,WAAKF,GAAL,CAASG,IAAT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACH;;;kCACaC,K,EACd;AACI;AACA,UAAKA,KAAK,KAAK,OAAf,EAAwB;AACpB,aAAKC,eAAL,CAAqB,CAACb,eAAD,EAAkBc,eAAlB,EAAmCC,eAAnC,EAAoDC,YAApD,CAArB;AACH,OAFD,MAEO,IAAKJ,KAAK,KAAK,UAAf,EAA4B;AAC/B,aAAKC,eAAL,CAAqB,CAACb,eAAD,EAAkBc,eAAlB,EAAmCG,eAAnC,EAAoDD,YAApD,CAArB;AACH,OAFM,MAEA,IAAKJ,KAAK,KAAK,OAAf,EAAwB;AAC3B,aAAKC,eAAL,CAAqB,CAACb,eAAD,EAAkBkB,eAAlB,EAAmCD,eAAnC,EAAoDE,YAApD,CAArB;AACH,OAFM,MAEA,IAAKP,KAAK,KAAK,YAAf,EAA6B;AAChC,aAAKC,eAAL,CAAqB,CAACb,eAAD,EAAkBkB,eAAlB,EAAmCH,eAAnC,EAAoDI,YAApD,CAArB;AACH;AACJ;;;6BAED;AACI,6EAAmB,CAAC,EAApB;;AACA,6EAAmB,CAAC,CAApB;AACH;;;gCAED;AACI,WAAKzC,CAAL,GAAS,GAAT;AACA,WAAKC,CAAL,GAAS,GAAT;AACH;;;6BAED;AAAA;;AACI,UAAIyC,CAAC,GAAGC,WAAW,CAAC,YACpB;AACI,QAAA,MAAI,CAACf,GAAL,CAASgB,MAAT,GAAkB,MAAI,CAACtC,IAAL,CAAUuC,KAAV,GAAgB,CAAlC,CADJ,CAGI;;AACA,YAAI,MAAI,CAACvC,IAAL,CAAUM,QAAV,IAAsB,MAAI,CAACN,IAAL,CAAUO,cAApC,EAAmD;AAC/C,UAAA,MAAI,CAACH,aAAL,CAAmB,YAAnB;;AACA,UAAA,MAAI,CAACU,QAAL,CAAc,CAAd;AACH,SAHD,MAGO,IAAI,MAAI,CAACd,IAAL,CAAUM,QAAd,EAAuB;AAC1B,UAAA,MAAI,CAACF,aAAL,CAAmB,OAAnB;;AACA,UAAA,MAAI,CAACU,QAAL,CAAc,CAAd;AACH,SAHM,MAGA,IAAI,CAAC,MAAI,CAACd,IAAL,CAAUM,QAAX,IAAuB,MAAI,CAACN,IAAL,CAAUQ,YAArC,EAAkD;AACrD,UAAA,MAAI,CAACJ,aAAL,CAAmB,UAAnB;;AACA,UAAA,MAAI,CAACU,QAAL,CAAc,CAAd;AACH,SAHM,MAGA;AACH,UAAA,MAAI,CAACV,aAAL,CAAmB,OAAnB;;AACA,UAAA,MAAI,CAACU,QAAL,CAAc,CAAd;AACH,SAhBL,CAiBI;;;AACA,YAAI,MAAI,CAACpB,CAAL,GAAS,CAAT,IAAc,MAAI,CAACA,CAAL,GAAS8C,IAAI,CAACC,MAAL,CAAYC,KAAnC,IAA4C,MAAI,CAAC/C,CAAL,GAAS,CAArD,IAA0D,MAAI,CAACA,CAAL,GAAS6C,IAAI,CAACC,MAAL,CAAYE,MAAnF,EAA0F;AACtF,UAAA,MAAI,CAACC,SAAL;AACH,SApBL,CAsBI;;;AACA,YAAI,MAAI,CAAClD,CAAL,GAAS,GAAT,IAAiB,MAAI,CAACC,CAAL,GAAS,GAAT,KAAiB,MAAI,CAACD,CAAL,GAAS,GAAT,IAAgB,MAAI,CAACA,CAAL,GAAS,GAA1C,CAAjB,IAAoE,MAAI,CAACC,CAAL,GAAS,GAAjF,EAAsF;AAClFsB,UAAAA,KAAK,CAAC4B,GAAN;;AACA,UAAA,MAAI,CAACC,OAAL;;AACA,UAAA,MAAI,CAACxB,GAAL,CAASyB,IAAT;;AACAC,UAAAA,aAAa,CAACZ,CAAD,CAAb;AACH;AACJ,OA9BkB,EA8BhB,QA9BgB,CAAnB;AA+BH;;;;EAvFca,MAAM,CAACC,OAAP,CAAeC,MAAf,CAAsBC,K;;IA0FnCC,W;;;AACF,uBAAY5D,KAAZ,EAAmB6D,IAAnB,EAAyB5D,CAAzB,EAA4BC,CAA5B,EAA+B+C,KAA/B,EAAsCC,MAAtC,EAA8CY,QAA9C,EAAwDC,cAAxD,EAAwEvD,KAAxE,EAA8E;AAAA;;AAC1E,SAAKD,IAAL,GAAY,EAAZ;AACA,SAAKP,KAAL,GAAaA,KAAb;AACA,SAAK6D,IAAL,GAAYA,IAAZ;AACA,SAAK5D,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAK+C,KAAL,GAAaA,KAAb;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKY,QAAL,GAAgBA,QAAhB;AACA,SAAKE,SAAL,GAT0E,CAU1E;;AACA,SAAKC,MAAL,GAAc,KAAKjE,KAAL,CAAWI,MAAX,CAAkBwB,GAAlB,CAAsBsC,KAAtB,CAA4B,KAAKjE,CAAjC,EAAoC,KAAKC,CAAzC,EAA4C,IAA5C,EAAkDiE,eAAlD,CAAkE,KAAK5D,IAAvE,EAA6E6D,UAA7E,CAAwF,KAAxF,CAAd;AACA,SAAKH,MAAL,CAAY3C,oBAAZ,CAAiCyC,cAAjC;AACA,SAAKxD,IAAL,CAAUC,KAAV,GAAkBA,KAAlB;AACH;;;;gCACU;AACP,UAAI,KAAKqD,IAAL,KAAc,WAAlB,EAA8B;AAC1B,aAAKtD,IAAL,GAAY,KAAKP,KAAL,CAAWI,MAAX,CAAkBwB,GAAlB,CAAsByC,SAAtB,CAAgC,KAAKpE,CAArC,EAAwC,KAAKC,CAA7C,EAAgD,KAAK+C,KAArD,EAA4D,KAAKC,MAAjE,EAAyE;AACjFoB,UAAAA,QAAQ,EAAE,IADuE;AAEjFC,UAAAA,KAAK,EAAE,KAAKT;AAFqE,SAAzE,CAAZ;AAIH,OALD,MAKO,IAAI,KAAKD,IAAL,KAAc,QAAlB,EAA2B;AAC9B,aAAKtD,IAAL,GAAY,KAAKP,KAAL,CAAWI,MAAX,CAAkBwB,GAAlB,CAAsB4C,MAAtB,CAA6B,KAAKvE,CAAlC,EAAqC,KAAKC,CAA1C,EAA6C,KAAK+C,KAAlD,EAAyD;AACjEqB,UAAAA,QAAQ,EAAE;AADuD,SAAzD,CAAZ;AAGH,OAJM,MAIA;AACHG,QAAAA,KAAK,oBAAI,KAAKZ,IAAT,CAAL;AACH;AACJ;;;;;;IAGCa,iB;;;;;AACF,6BAAY1E,KAAZ,EAAmBC,CAAnB,EAAsBC,CAAtB,EAAyByE,IAAzB,EAA+BZ,cAA/B,EAA8C;AAAA;;AAAA;;AAC1C,4FAAM/D,KAAK,CAACI,MAAN,CAAaC,KAAnB,EAA0BJ,CAA1B,EAA6BC,CAA7B,EAAgCyE,IAAhC;;AACA,WAAKR,eAAL,CAAqBS,MAAM,CAACC,YAAP,CAAoB,CAApB,EAAsB,CAAtB,EAAyBC,KAAK,WAAIH,IAAJ,EAA9B,CAArB;;AACA,WAAKpE,IAAL,CAAUwE,WAAV,GAAwB,CAAxB;AACA,WAAKxE,IAAL,CAAUC,KAAV,GAAkB,mBAAlB;;AACA,WAAK4D,UAAL,CAAgB,KAAhB;;AACA,WAAKY,SAAL,CAAe,IAAf;;AACA,WAAK/E,CAAL,GAASA,CAAT;AACA,WAAKC,CAAL,GAASA,CAAT;;AACA,WAAKoB,oBAAL,CAA0ByC,cAA1B;;AAT0C;AAU7C;;;EAX2BP,MAAM,CAACC,OAAP,CAAeC,MAAf,CAAsBC,K;;IAchDsB,M;;;;;AACF,kBAAYjF,KAAZ,EAAmBC,CAAnB,EAAsBC,CAAtB,EAAyByE,IAAzB,EAA8B;AAAA;;AAAA;;AAC1B,iFAAM3E,KAAK,CAACI,MAAN,CAAaC,KAAnB,EAA0BJ,CAA1B,EAA6BC,CAA7B,EAAgCyE,IAAhC;;AACA,WAAKO,SAAL,CAAe,EAAf;;AACA,WAAKF,SAAL,CAAe,IAAf;;AACA,WAAKG,QAAL,CAAc,IAAd;;AACA,WAAK5E,IAAL,CAAU6E,IAAV,GAAiB,IAAjB;AACA,WAAKnF,CAAL,GAASA,CAAT;AACA,WAAKC,CAAL,GAASA,CAAT;AACA,WAAKK,IAAL,CAAUC,KAAV,GAAkBmE,IAAlB;AACA,WAAK3E,KAAL,GAAaA,KAAb;AACA,WAAKO,IAAL,CAAUwE,WAAV,GAAwB,CAAxB;;AACA,WAAKzD,oBAAL,CAA0Be,eAA1B;;AACA,WAAKgD,UAAL,GAAkB,IAAlB;AACA,WAAKC,YAAL,GAAoB,IAApB;AAb0B;AAc7B;;;;yBACIC,Q,EAAS;AAAA;;AAEV,UAAIC,MAAM,GAAG,CAAC,QAAD,EAAW,YAAX,EAAyB,cAAzB,EAAyC,aAAzC,CAAb,CAFU,CAIV;;AACA,UAAI,KAAKH,UAAT,EAAqB;AACjB,aAAKrF,KAAL,CAAW8B,KAAX,CAAiB2D,eAAjB,CAAiC,eAAjC,EAAkDD,MAAM,CAACE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcJ,MAAM,CAACK,MAAhC,CAAD,CAAxD;AAEA,aAAKR,UAAL,GAAkB,KAAlB;AAEA,YAAIS,aAAa,GAAG;AAChB7F,UAAAA,CAAC,EAAE,KAAKA,CADQ;AAEhBC,UAAAA,CAAC,EAAE,KAAKA;AAFQ,SAApB,CALiB,CASjB;;AACA,YAAI6F,OAAO,GAAG,CAAC,KAAK9F,CAAL,GAASsF,QAAQ,CAACtF,CAAnB,IAAwB,CAAtC;AACA,YAAI+F,OAAO,GAAG,CAAC,KAAK9F,CAAL,GAASqF,QAAQ,CAACrF,CAAnB,IAAwB,CAAtC,CAXiB,CAcjB;;AACA,aAAKF,KAAL,CAAWiG,MAAX,CAAkBrE,GAAlB,CAAsB;AAClBsE,UAAAA,OAAO,EAAE,IADS;AAElBjG,UAAAA,CAAC,EAAE8F,OAFe;AAGlB7F,UAAAA,CAAC,EAAE8F,OAHe;AAIlBG,UAAAA,IAAI,EAAE,IAJY;AAKlBC,UAAAA,QAAQ,EAAE,EALQ;AAMlBC,UAAAA,MAAM,EAAE;AANU,SAAtB;AASAC,QAAAA,UAAU,CAAC,YAAI;AACX,UAAA,MAAI,CAACrG,CAAL,GAAS6F,aAAa,CAAC7F,CAAvB;AACA,UAAA,MAAI,CAACC,CAAL,GAAS4F,aAAa,CAAC5F,CAAvB;AACAoG,UAAAA,UAAU,CAAC,YAAI;AACX,YAAA,MAAI,CAACjB,UAAL,GAAkB,IAAlB;AACH,WAFS,EAEP,GAFO,CAAV;AAGH,SANS,EAMP,EANO,CAAV;AAWH;AACJ;;;;EAzDgB7B,MAAM,CAACC,OAAP,CAAeC,MAAf,CAAsBC,K;;IA4DrC4C,M;;;;;AACF,kBAAYvG,KAAZ,EAAmBC,CAAnB,EAAsBC,CAAtB,EAAyB+C,KAAzB,EAAgCC,MAAhC,EAAwCY,QAAxC,EAAkDD,IAAlD,EAAwDc,IAAxD,EAA8DZ,cAA9D,EAA6E;AAAA;;AAAA;;AACzE,iFAAM/D,KAAN,EAAa,WAAb,EAA0BC,CAA1B,EAA6BC,CAA7B,EAAgC+C,KAAhC,EAAuCC,MAAvC,EAA+CY,QAA/C,EAAyDC,cAAzD;AACA,WAAKxD,IAAL,CAAUiG,QAAV,GAAqB,IAArB;AACA,WAAKjG,IAAL,CAAUsD,IAAV,GAAiBA,IAAjB;AACA,WAAKtD,IAAL,CAAUC,KAAV,GAAkBmE,IAAlB;AAJyE;AAK5E;;;EANgBf,W;;IASf6C,Q;;;AACF,oBAAYzG,KAAZ,EAAmBC,CAAnB,EAAsBC,CAAtB,EAAyB;AAAA;;AACrB,SAAKD,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKF,KAAL,GAAaA,KAAb;AACA,SAAK0G,gBAAL;AACH;;;;uCAEkB;AAEf;AACA,UAAIC,KAAK,GAAGnD,MAAM,CAACC,OAAP,CAAeC,MAAf,CAAsBA,MAAtB,CAA6BkB,MAA7B,CAAoCJ,MAApC,CAA2C,KAAKvE,CAAhD,EAAoD,KAAKC,CAAzD,EAA4D,EAA5D,CAAZ;AAEA,UAAIK,IAAI,GAAG,KAAKP,KAAL,CAAWI,MAAX,CAAkBG,IAAlB,CAAuBqG,MAAvB,CAA8B;AACrCC,QAAAA,KAAK,EAAE,CAAEF,KAAF;AAD8B,OAA9B,CAAX;AAGA,WAAKG,GAAL,GAAW,KAAK9G,KAAL,CAAWI,MAAX,CAAkBwB,GAAlB,CAAsBsC,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,EAAoC,IAApC,EAA0CC,eAA1C,CAA0D5D,IAA1D,EAAgE6D,UAAhE,CAA2E,KAA3E,CAAX;AACA,WAAK0C,GAAL,CAASxF,oBAAT,CAA8BC,eAA9B;AACA,WAAKuF,GAAL,CAAS1E,eAAT,CAAyBb,eAAzB;AACA,WAAKuF,GAAL,CAASvG,IAAT,CAAcW,OAAd,GAAwBC,QAAxB;AACA,WAAK4F,MAAL,GAAc,IAAInD,WAAJ,CAAgB,KAAK5D,KAArB,EAA4B,WAA5B,EAAyC,KAAKC,CAA9C,EAAiD,KAAKC,CAAL,GAAS,EAA1D,EAA8D,EAA9D,EAAkE,EAAlE,EAAsE,CAAtE,EAAyEqB,eAAzE,CAAd;AACA,WAAKyF,IAAL,GAAY,IAAIpD,WAAJ,CAAgB,KAAK5D,KAArB,EAA4B,WAA5B,EAAyC,KAAKC,CAAL,GAAS,EAAlD,EAAsD,KAAKC,CAA3D,EAA8D,EAA9D,EAAkE,GAAlE,EAAuE,CAAvE,EAA0EqB,eAA1E,CAAZ;AACA,WAAK0F,KAAL,GAAa,IAAIrD,WAAJ,CAAgB,KAAK5D,KAArB,EAA4B,WAA5B,EAAyC,KAAKC,CAAL,GAAS,EAAlD,EAAsD,KAAKC,CAA3D,EAA8D,EAA9D,EAAkE,GAAlE,EAAuE,CAAvE,EAA0EqB,eAA1E,CAAb;AACA,WAAK2F,MAAL,GAAc,KAAKlH,KAAL,CAAWI,MAAX,CAAkBwB,GAAlB,CAAsBuF,UAAtB,CAAiC,KAAKJ,MAAtC,EAA8C,KAAKD,GAAnD,CAAd;AACA,WAAKI,MAAL,CAAYrB,MAAZ,GAAqB,EAArB;AACH;;;6BACQ;AAAA;;AACL,WAAKnF,MAAL,GAAckC,WAAW,CAAC,YAAM;AAC5B,QAAA,MAAI,CAACsE,MAAL,CAAYrB,MAAZ;;AACA,YAAI,MAAI,CAACqB,MAAL,CAAYrB,MAAZ,GAAqB,EAAzB,EAA4B;AACxBtC,UAAAA,aAAa,CAAC,MAAI,CAAC7C,MAAN,CAAb;AACH;AACJ,OALwB,EAKtB,EALsB,CAAzB;AAMH;;;2BACM;AAAA;;AACH,WAAKV,KAAL,CAAW8B,KAAX,CAAiB2D,eAAjB,CAAiC,eAAjC,EAAkD,SAAlD;AACAlC,MAAAA,aAAa,CAAC,KAAK7C,MAAN,CAAb;AACA,WAAKV,KAAL,CAAWiG,MAAX,CAAkBrE,GAAlB,CAAsB;AAClBsE,QAAAA,OAAO,EAAE,KAAKgB,MADI;AAElBrB,QAAAA,MAAM,EAAE,GAFU;AAGlBO,QAAAA,QAAQ,EAAE;AAHQ,OAAtB,EAHG,CAQH;;AACAE,MAAAA,UAAU,CAAC,YAAM;AACb,QAAA,MAAI,CAACY,MAAL,CAAYrB,MAAZ,GAAqB,EAArB;AACH,OAFS,EAEP,EAFO,CAAV;AAGH","sourcesContent":["class Ball extends Phaser.Physics.Matter.Image {\n    constructor(scene, x, y, texture) {\n        super(scene.matter.world, x, y, texture)\n        super.setScale(.8) \n        super.setCircle(8.75)\n        this.id = this.body.id\n        this.scene = scene\n        this.body.label = 'Ball'\n        this.setupBall()\n        this.update()\n    }\n    setupBall(){\n        this.setCollisions('table')\n        this.body.hasCollided = false\n        this.body.isOnRamp = false\n        this.body.isOnCenterRamp = false\n        this.body.isOnLauncher = false\n        this.body.friction = 0\n        this.body.frictionAir = 0\n        this.body.inertia = Infinity\n        this.setDensity(.001)\n        this.setDepth(1)\n        this.setCollisionCategory(collisionGroupA)\n        balls.push(this.body)\n        //Add the ball to the display list\n        this.scene.sys.displayList.add(this)\n        //Add sound\n        this.sfx = this.scene.sound.add('ball_rolling', { loop: true })\n        this.sfx.play() \n        console.log(this)\n    }\n    setCollisions(level)\n    { \n        //Changes what the ball can collide with depending on where it is\n        if ( level === 'table' ){\n            this.setCollidesWith([collisionGroupA, collisionGroupB, collisionGroupD, sensorGroupA])\n        } else if ( level === 'launcher' ) {\n            this.setCollidesWith([collisionGroupA, collisionGroupB, collisionGroupE, sensorGroupA])\n        } else if ( level === 'ramps' ){\n            this.setCollidesWith([collisionGroupA, collisionGroupC, collisionGroupE, sensorGroupB])\n        } else if ( level === 'centerRamp' ){\n            this.setCollidesWith([collisionGroupA, collisionGroupC, collisionGroupD, sensorGroupB])\n        }\n    }\n    launch()\n    {\n        super.setVelocityY(-20)\n        super.setVelocityX(-1)\n    }\n    readyBall()\n    {\n        this.x = 455\n        this.y = 690\n    }\n    update()\n    {\n        let i = setInterval(()=>\n        {\n            this.sfx.volume = this.body.speed/8\n\n            //Check if the ball is on a ramp\n            if (this.body.isOnRamp && this.body.isOnCenterRamp){\n                this.setCollisions('centerRamp')\n                this.setDepth(3)\n            } else if (this.body.isOnRamp){\n                this.setCollisions('ramps')\n                this.setDepth(3)\n            } else if (!this.body.isOnRamp && this.body.isOnLauncher){\n                this.setCollisions('launcher')\n                this.setDepth(1)\n            } else {\n                this.setCollisions('table')\n                this.setDepth(1)\n            } \n            //Checks if the ball has escaped the map\n            if (this.x < 0 || this.x > game.config.width || this.y < 0 || this.y > game.config.height){\n                this.readyBall()\n            }\n\n            //Check if the ball is in a killzone\n            if (this.x < 425 && (this.y > 650 && (this.x < 192 || this.x > 330)) || this.y > 720) {\n                balls.pop()\n                this.destroy()\n                this.sfx.stop()\n                clearInterval(i)\n            }\n        }, 16.66666)\n    }\n}\n\nclass StaticShape {\n    constructor(scene, type, x, y, width, height, rotation, collisionGroup, label){\n        this.body = {}\n        this.scene = scene\n        this.type = type\n        this.x = x\n        this.y = y\n        this.width = width\n        this.height = height\n        this.rotation = rotation\n        this.drawShape()\n        //this.body.collisionFilter.category = collisionGroup\n        this.object = this.scene.matter.add.image(this.x, this.y, null).setExistingBody(this.body).setVisible(false)\n        this.object.setCollisionCategory(collisionGroup)\n        this.body.label = label\n    }\n    drawShape(){\n        if (this.type === 'rectangle'){\n            this.body = this.scene.matter.add.rectangle(this.x, this.y, this.width, this.height, {\n                isStatic: true,\n                angle: this.rotation\n            })\n        } else if (this.type === 'circle'){\n            this.body = this.scene.matter.add.circle(this.x, this.y, this.width, {\n                isStatic: true\n            })\n        } else {\n            alert `${this.type} is not a supported shape`\n        }\n    }\n}\n\nclass StaticCustomShape extends Phaser.Physics.Matter.Image {\n    constructor(scene, x, y, name, collisionGroup){\n        super(scene.matter.world, x, y, name)\n        this.setExistingBody(Bodies.fromVertices(0,0, PATHS[`${name}`]))\n        this.body.restitution = 0\n        this.body.label = \"StaticCustomShape\"\n        this.setVisible(false)\n        this.setStatic(true)\n        this.x = x\n        this.y = y\n        this.setCollisionCategory(collisionGroup)\n    }\n}\n\nclass Bumper extends Phaser.Physics.Matter.Image {\n    constructor(scene, x, y, name){\n        super(scene.matter.world, x, y, name)\n        this.setCircle(24)\n        this.setStatic(true)\n        this.setScale(0.75)\n        this.body.mass = .999\n        this.x = x\n        this.y = y\n        this.body.label = name\n        this.scene = scene\n        this.body.restitution = 1\n        this.setCollisionCategory(collisionGroupB)\n        this.canAnimate = true\n        this.canPlaySound = true\n    }\n    fire(position){\n\n        let sounds = ['Bumper', 'BumperLeft', 'BumperMiddle', 'BumperRight']\n        \n        //Grab the starting position\n        if (this.canAnimate) {\n            this.scene.sound.playAudioSprite('sound_effects', sounds[Math.floor(Math.random()*sounds.length)])\n            \n            this.canAnimate = false\n            \n            let startPosition = {\n                x: this.x,\n                y: this.y\n            }\n            //Calculate the midpoint between the ball and bumper\n            let targetX = (this.x + position.x) / 2\n            let targetY = (this.y + position.y) / 2\n\n    \n            //Tween to that point\n            this.scene.tweens.add({\n                targets: this,\n                x: targetX,\n                y: targetY,\n                yoyo: true,\n                duration: 20,\n                repeat: 0\n            })\n\n            setTimeout(()=>{\n                this.x = startPosition.x\n                this.y = startPosition.y\n                setTimeout(()=>{\n                    this.canAnimate = true\n                }, 100)\n            }, 40)\n\n            \n\n\n        }\n    }\n}\n\nclass Sensor extends StaticShape {\n    constructor(scene, x, y, width, height, rotation, type, name, collisionGroup){\n        super(scene, 'rectangle', x, y, width, height, rotation, collisionGroup)\n        this.body.isSensor = true\n        this.body.type = type\n        this.body.label = name\n    }\n}\n\nclass Launcher {\n    constructor(scene, x, y) {\n        this.x = x\n        this.y = y\n        this.scene = scene\n        this.createComponents()\n    }\n\n    createComponents() {\n\n        //Create a dynamic body for the top\n        let rectA = Phaser.Physics.Matter.Matter.Bodies.circle(this.x , this.y, 15)\n\n        let body = this.scene.matter.body.create({\n            parts: [ rectA ]\n        })\n        this.top = this.scene.matter.add.image(150, 0, null).setExistingBody(body).setVisible(false)\n        this.top.setCollisionCategory(collisionGroupA)\n        this.top.setCollidesWith(collisionGroupA)\n        this.top.body.inertia = Infinity\n        this.bottom = new StaticShape(this.scene, 'rectangle', this.x, this.y + 50, 40, 20, 0, collisionGroupA )\n        this.left = new StaticShape(this.scene, 'rectangle', this.x - 10, this.y, 10, 100, 0, collisionGroupA )\n        this.right = new StaticShape(this.scene, 'rectangle', this.x + 10, this.y, 10, 100, 0, collisionGroupA )\n        this.spring = this.scene.matter.add.constraint(this.bottom, this.top)\n        this.spring.length = 90\n    }\n    charge() {\n        this.update = setInterval(() => {\n            this.spring.length--\n            if (this.spring.length < 70){\n                clearInterval(this.update)\n            }\n        }, 40)\n    }\n    fire() {\n        this.scene.sound.playAudioSprite('sound_effects', \"Plunger\")\n        clearInterval(this.update)\n        this.scene.tweens.add({\n            targets: this.spring,\n            length: 102,\n            duration: 20\n        })\n        //Reset the spring\n        setTimeout(() => {\n            this.spring.length = 90\n        }, 50)\n    }\n}\n"],"file":"classes.js"}