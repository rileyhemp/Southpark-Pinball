{"version":3,"sources":["classes.js"],"names":["Ball","scene","x","y","texture","matter","world","id","body","label","setupBall","update","setCollisions","hasCollided","isOnRamp","isOnCenterRamp","isOnLauncher","friction","frictionAir","inertia","Infinity","setDensity","setDepth","setCollisionCategory","collisionGroupA","balls","push","sys","displayList","add","table_sfx","sound","loop","ramp_sfx","play","level","setCollidesWith","collisionGroupB","collisionGroupD","sensorGroupA","collisionGroupE","collisionGroupC","sensorGroupB","setVelocityX","setVelocityY","i","setInterval","isOnPlastic","volume","speed","isDestroyed","stop","game","config","width","height","readyBall","pop","playAudioSprite","playRandomSound","destroy","clearInterval","Phaser","Physics","Matter","Image","StaticShape","type","rotation","collisionGroup","drawShape","object","image","setExistingBody","setVisible","rectangle","isStatic","angle","circle","alert","StaticCustomShape","name","Bodies","fromVertices","PATHS","restitution","setStatic","Bumper","setCircle","setScale","mass","canAnimate","canPlaySound","position","sounds","Math","floor","random","length","startPosition","targetX","targetY","tweens","targets","yoyo","duration","repeat","setTimeout","Sensor","isSensor","Launcher","createComponents","rectA","create","parts","top","bottom","left","right","spring","constraint","backgroundMusic"],"mappings":"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","sourcesContent":["class Ball extends Phaser.Physics.Matter.Image {\n    constructor(scene, x, y, texture) {\n        super(scene.matter.world, x, y, texture)\n        super.setScale(.8) \n        super.setCircle(8.75)\n        this.id = this.body.id\n        this.scene = scene\n        this.body.label = 'Ball'\n        this.setupBall()\n        this.update()\n    }\n    setupBall(){\n        this.setCollisions('table')\n        this.body.hasCollided = false\n        this.body.isOnRamp = false\n        this.body.isOnCenterRamp = false\n        this.body.isOnLauncher = false\n        this.body.friction = 0\n        this.body.frictionAir = 0\n        this.body.inertia = Infinity\n        this.setDensity(.001)\n        this.setDepth(1)\n        this.setCollisionCategory(collisionGroupA)\n        balls.push(this.body)\n        //Add the ball to the display list\n        this.scene.sys.displayList.add(this)\n        //Add sound\n        this.table_sfx = this.scene.sound.add('ball_rolling', { loop: true })\n        this.ramp_sfx = this.scene.sound.add('ramp_rolling', { loop: true })\n        this.table_sfx.play() \n        this.ramp_sfx.play() \n    }\n    setCollisions(level)\n    { \n        //Changes what the ball can collide with depending on where it is\n        if ( level === 'table' ){\n            this.setCollidesWith([collisionGroupA, collisionGroupB, collisionGroupD, sensorGroupA])\n        } else if ( level === 'launcher' ) {\n            this.setCollidesWith([collisionGroupA, collisionGroupB, collisionGroupE, sensorGroupA])\n        } else if ( level === 'ramps' ){\n            this.setCollidesWith([collisionGroupA, collisionGroupC, collisionGroupE, sensorGroupB])\n        } else if ( level === 'centerRamp' ){\n            this.setCollidesWith([collisionGroupA, collisionGroupC, collisionGroupD, sensorGroupB])\n        }\n    }\n    readyBall()\n    {\n        this.setVelocityX(0)\n        this.setVelocityY(0)\n        this.x = 455\n        this.y = 689\n    }\n    update()\n    {\n        let i = setInterval(()=>\n        {\n            //Changes sound when ball is on a ramp\n            if (this.body.isOnPlastic) \n            {\n                this.table_sfx.volume = this.table_sfx.volume - .1\n                this.ramp_sfx.volume = .1\n            }\n            //Sets the volume of the ball rolling to the balls speed. \n            else\n            {\n                this.ramp_sfx.volume = 0\n                this.table_sfx.volume = this.body.speed/8.5\n            }\n            \n            //Kills the sound if the ball has been destroyed (by the butters target)\n            if (this.body.isDestroyed)\n            {\n                this.table_sfx.stop()\n                this.ramp_sfx.stop()\n            }\n\n            //Check balls status and adjust collisions accordingly\n            if (this.body.isOnRamp && this.body.isOnCenterRamp)\n            {\n                this.setCollisions('centerRamp')\n                this.setDepth(3)\n            } \n            else if (this.body.isOnRamp)\n            {\n                this.setCollisions('ramps')\n                this.setDepth(3)\n            } \n            else if (!this.body.isOnRamp && this.body.isOnLauncher)\n            {\n                this.setCollisions('launcher')\n                this.setDepth(1)\n            } \n            else \n            {\n                this.setCollisions('table')\n                this.setDepth(1)\n            } \n            //Checks if the ball has escaped the map\n            if (this.x < 0 || this.x > game.config.width || this.y < 0 || this.y > game.config.height)\n            {\n                this.readyBall()\n            }\n\n            //Check if the ball is in a killzone\n            if (this.x < 425 && (this.y > 650 && (this.x < 192 || this.x > 330)) || this.y > 720) \n            {\n                balls.pop()\n                this.scene.sound.playAudioSprite('sound_effects', 'Drain')\n                playRandomSound('generic_negative', this.scene, 400)\n                this.destroy()\n                this.table_sfx.stop()\n                this.ramp_sfx.stop()\n                clearInterval(i)\n            }\n        }, 16.66666)\n    }\n}\n\nclass StaticShape {\n    constructor(scene, type, x, y, width, height, rotation, collisionGroup, label){\n        this.body = {}\n        this.scene = scene\n        this.type = type\n        this.x = x\n        this.y = y\n        this.width = width\n        this.height = height\n        this.rotation = rotation\n        this.drawShape()\n        this.object = this.scene.matter.add.image(this.x, this.y, null).setExistingBody(this.body).setVisible(false)\n        this.object.setCollisionCategory(collisionGroup)\n        this.body.label = label\n    }\n    drawShape(){\n        if (this.type === 'rectangle'){\n            this.body = this.scene.matter.add.rectangle(this.x, this.y, this.width, this.height, {\n                isStatic: true,\n                angle: this.rotation\n            })\n        } else if (this.type === 'circle'){\n            this.body = this.scene.matter.add.circle(this.x, this.y, this.width, {\n                isStatic: true\n            })\n        } else {\n            alert `${this.type} is not a supported shape`\n        }\n    }\n}\n\nclass StaticCustomShape extends Phaser.Physics.Matter.Image {\n    constructor(scene, x, y, name, collisionGroup){\n        super(scene.matter.world, x, y, name)\n        this.setExistingBody(Bodies.fromVertices(0,0, PATHS[`${name}`]))\n        this.body.restitution = 0\n        this.body.label = name\n        this.setVisible(false)\n        this.setStatic(true)\n        this.x = x\n        this.y = y\n        this.setCollisionCategory(collisionGroup)\n    }\n}\n\nclass Bumper extends Phaser.Physics.Matter.Image {\n    constructor(scene, x, y, name){\n        super(scene.matter.world, x, y, name)\n        this.setCircle(24)\n        this.setStatic(true)\n        this.setScale(0.75)\n        this.body.mass = .999\n        this.x = x\n        this.y = y\n        this.body.label = name\n        this.scene = scene\n        this.body.restitution = 1\n        this.setCollisionCategory(collisionGroupB)\n        this.canAnimate = true\n        this.canPlaySound = true\n    }\n    fire(position){\n\n        let sounds = ['Bumper', 'BumperLeft', 'BumperMiddle', 'BumperRight']\n        \n        if (this.canAnimate) {\n            this.scene.sound.playAudioSprite('sound_effects', sounds[Math.floor(Math.random()*sounds.length)])\n            this.scene.sound.playAudioSprite('sound_effects', 'bell_ding', {\n                volume: 0.2\n            })\n            \n            //Restrict firing\n            this.canAnimate = false\n            \n            //Grab the starting position\n            let startPosition = {\n                x: this.x,\n                y: this.y\n            }\n            //Calculate the midpoint between the ball and bumper\n            let targetX = (this.x + position.x) / 2\n            let targetY = (this.y + position.y) / 2\n\n    \n            //Tween to that point\n            this.scene.tweens.add({\n                targets: this,\n                x: targetX,\n                y: targetY,\n                yoyo: true,\n                duration: 20,\n                repeat: 0\n            })\n\n            //Move the bumper back to the starting position and un-restrict firing. \n            setTimeout(()=>{\n                this.x = startPosition.x\n                this.y = startPosition.y\n                setTimeout(()=>{\n                    this.canAnimate = true\n                }, 100)\n            }, 40)\n\n            \n\n\n        }\n    }\n}\n\nclass Sensor extends StaticShape {\n    constructor(scene, x, y, width, height, rotation, type, name, collisionGroup){\n        super(scene, 'rectangle', x, y, width, height, rotation, collisionGroup)\n        this.body.isSensor = true\n        this.body.type = type\n        this.body.label = name\n    }\n}\n\nclass Launcher {\n    constructor(scene, x, y) {\n        this.x = x\n        this.y = y\n        this.scene = scene\n        this.createComponents()\n    }\n\n    createComponents() {\n\n        //Create a dynamic body for the top\n        let rectA = Phaser.Physics.Matter.Matter.Bodies.circle(this.x , this.y, 15)\n\n        let body = this.scene.matter.body.create({\n            parts: [ rectA ]\n        })\n        this.top = this.scene.matter.add.image(150, 0, null).setExistingBody(body).setVisible(false)\n        this.top.setCollisionCategory(collisionGroupA)\n        this.top.setCollidesWith(collisionGroupA)\n        this.top.body.inertia = Infinity\n        this.bottom = new StaticShape(this.scene, 'rectangle', this.x, this.y + 50, 40, 20, 0, collisionGroupA )\n        this.left = new StaticShape(this.scene, 'rectangle', this.x - 10, this.y, 10, 100, 0, collisionGroupA )\n        this.right = new StaticShape(this.scene, 'rectangle', this.x + 10, this.y, 10, 100, 0, collisionGroupA )\n        this.spring = this.scene.matter.add.constraint(this.bottom, this.top)\n        this.spring.length = 90\n    }\n    charge() {\n        backgroundMusic.play()\n\n        //Pulls back the spring until it reaches desired length\n        this.update = setInterval(() => {\n            this.spring.length--\n            if (this.spring.length < 70){\n                clearInterval(this.update)\n            }\n        }, 40)\n    }\n    fire() {\n\n        //Play sound\n        this.scene.sound.playAudioSprite('sound_effects', \"Plunger\")\n\n        //Stop pulling the spring back\n        clearInterval(this.update)\n        this.scene.tweens.add({\n            targets: this.spring,\n            length: 102,\n            duration: 20\n        })\n        \n        //Reset the spring\n        setTimeout(() => {\n            this.spring.length = 90\n        }, 50)\n    }\n}\n"],"file":"classes.js"}